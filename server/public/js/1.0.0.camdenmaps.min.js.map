{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","server/public/angular/app.js","node_modules/angular-ui-router/release/angular-ui-router.js","node_modules/angular/angular.min.js","server/public/angular/config.js","server/public/angular/controllers/index.js","server/public/angular/controllers/landing-controller.js","server/public/angular/controllers/list-controller.js","server/public/angular/controllers/location-controller.js","server/public/angular/controllers/root-controller.js","server/public/angular/controllers/search-controller.js","server/public/angular/controllers/services-controller.js","server/public/angular/controllers/single-controller.js"],"names":[],"mappings":"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","file":"1.0.0.camdenmaps.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/************************************************************************************\n*   APP.JS\n*   Description: Define core angular module\n*   Use: Initialize core angular module and register controllers, directives and services.i\n*\n*************************************************************************************/\n\n//TODO: Find out why it only works when controllers and services are registered directly\n\n;(function () {\n    \"use strict\";\n\n    var angular = require(\"angular\");\n\n    angular.module(\"maps\", [\n            require(\"angular-ui-router\"),\n            \"leaflet-directive\"\n    ])\n\n      .config( require(\"./config.js\") );\n        \n  require(\"./controllers\");\n\n}());\n\n","/**\n * State-based routing for AngularJS\n * @version v0.2.13\n * @link http://angular-ui.github.com/\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n\n/* commonjs package manager support (eg componentjs) */\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n  module.exports = 'ui.router';\n}\n\n(function (window, angular, undefined) {\n/*jshint globalstrict:true*/\n/*global angular:false*/\n'use strict';\n\nvar isDefined = angular.isDefined,\n    isFunction = angular.isFunction,\n    isString = angular.isString,\n    isObject = angular.isObject,\n    isArray = angular.isArray,\n    forEach = angular.forEach,\n    extend = angular.extend,\n    copy = angular.copy;\n\nfunction inherit(parent, extra) {\n  return extend(new (extend(function() {}, { prototype: parent }))(), extra);\n}\n\nfunction merge(dst) {\n  forEach(arguments, function(obj) {\n    if (obj !== dst) {\n      forEach(obj, function(value, key) {\n        if (!dst.hasOwnProperty(key)) dst[key] = value;\n      });\n    }\n  });\n  return dst;\n}\n\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nfunction ancestors(first, second) {\n  var path = [];\n\n  for (var n in first.path) {\n    if (first.path[n] !== second.path[n]) break;\n    path.push(first.path[n]);\n  }\n  return path;\n}\n\n/**\n * IE8-safe wrapper for `Object.keys()`.\n *\n * @param {Object} object A JavaScript object.\n * @return {Array} Returns the keys of the object as an array.\n */\nfunction objectKeys(object) {\n  if (Object.keys) {\n    return Object.keys(object);\n  }\n  var result = [];\n\n  angular.forEach(object, function(val, key) {\n    result.push(key);\n  });\n  return result;\n}\n\n/**\n * IE8-safe wrapper for `Array.prototype.indexOf()`.\n *\n * @param {Array} array A JavaScript array.\n * @param {*} value A value to search the array for.\n * @return {Number} Returns the array index value of `value`, or `-1` if not present.\n */\nfunction indexOf(array, value) {\n  if (Array.prototype.indexOf) {\n    return array.indexOf(value, Number(arguments[2]) || 0);\n  }\n  var len = array.length >>> 0, from = Number(arguments[2]) || 0;\n  from = (from < 0) ? Math.ceil(from) : Math.floor(from);\n\n  if (from < 0) from += len;\n\n  for (; from < len; from++) {\n    if (from in array && array[from] === value) return from;\n  }\n  return -1;\n}\n\n/**\n * Merges a set of parameters with all parameters inherited between the common parents of the\n * current state and a given destination state.\n *\n * @param {Object} currentParams The value of the current state parameters ($stateParams).\n * @param {Object} newParams The set of parameters which will be composited with inherited params.\n * @param {Object} $current Internal definition of object representing the current state.\n * @param {Object} $to Internal definition of object representing state to transition to.\n */\nfunction inheritParams(currentParams, newParams, $current, $to) {\n  var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n\n  for (var i in parents) {\n    if (!parents[i].params) continue;\n    parentParams = objectKeys(parents[i].params);\n    if (!parentParams.length) continue;\n\n    for (var j in parentParams) {\n      if (indexOf(inheritList, parentParams[j]) >= 0) continue;\n      inheritList.push(parentParams[j]);\n      inherited[parentParams[j]] = currentParams[parentParams[j]];\n    }\n  }\n  return extend({}, inherited, newParams);\n}\n\n/**\n * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n *\n * @param {Object} a The first object.\n * @param {Object} b The second object.\n * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n *                     it defaults to the list of keys in `a`.\n * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n */\nfunction equalForKeys(a, b, keys) {\n  if (!keys) {\n    keys = [];\n    for (var n in a) keys.push(n); // Used instead of Object.keys() for IE8 compatibility\n  }\n\n  for (var i=0; i<keys.length; i++) {\n    var k = keys[i];\n    if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized\n  }\n  return true;\n}\n\n/**\n * Returns the subset of an object, based on a list of keys.\n *\n * @param {Array} keys\n * @param {Object} values\n * @return {Boolean} Returns a subset of `values`.\n */\nfunction filterByKeys(keys, values) {\n  var filtered = {};\n\n  forEach(keys, function (name) {\n    filtered[name] = values[name];\n  });\n  return filtered;\n}\n\n// like _.indexBy\n// when you know that your index values will be unique, or you want last-one-in to win\nfunction indexBy(array, propName) {\n  var result = {};\n  forEach(array, function(item) {\n    result[item[propName]] = item;\n  });\n  return result;\n}\n\n// extracted from underscore.js\n// Return a copy of the object only containing the whitelisted properties.\nfunction pick(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  forEach(keys, function(key) {\n    if (key in obj) copy[key] = obj[key];\n  });\n  return copy;\n}\n\n// extracted from underscore.js\n// Return a copy of the object omitting the blacklisted properties.\nfunction omit(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  for (var key in obj) {\n    if (indexOf(keys, key) == -1) copy[key] = obj[key];\n  }\n  return copy;\n}\n\nfunction pluck(collection, key) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = isFunction(key) ? key(val) : val[key];\n  });\n  return result;\n}\n\nfunction filter(collection, callback) {\n  var array = isArray(collection);\n  var result = array ? [] : {};\n  forEach(collection, function(val, i) {\n    if (callback(val, i)) {\n      result[array ? result.length : i] = val;\n    }\n  });\n  return result;\n}\n\nfunction map(collection, callback) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = callback(val, i);\n  });\n  return result;\n}\n\n/**\n * @ngdoc overview\n * @name ui.router.util\n *\n * @description\n * # ui.router.util sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n *\n */\nangular.module('ui.router.util', ['ng']);\n\n/**\n * @ngdoc overview\n * @name ui.router.router\n * \n * @requires ui.router.util\n *\n * @description\n * # ui.router.router sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n */\nangular.module('ui.router.router', ['ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router.state\n * \n * @requires ui.router.router\n * @requires ui.router.util\n *\n * @description\n * # ui.router.state sub-module\n *\n * This module is a dependency of the main ui.router module. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n * \n */\nangular.module('ui.router.state', ['ui.router.router', 'ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router\n *\n * @requires ui.router.state\n *\n * @description\n * # ui.router\n * \n * ## The main module for ui.router \n * There are several sub-modules included with the ui.router module, however only this module is needed\n * as a dependency within your angular app. The other modules are for organization purposes. \n *\n * The modules are:\n * * ui.router - the main \"umbrella\" module\n * * ui.router.router - \n * \n * *You'll need to include **only** this module as the dependency within your angular app.*\n * \n * <pre>\n * <!doctype html>\n * <html ng-app=\"myApp\">\n * <head>\n *   <script src=\"js/angular.js\"></script>\n *   <!-- Include the ui-router script -->\n *   <script src=\"js/angular-ui-router.min.js\"></script>\n *   <script>\n *     // ...and add 'ui.router' as a dependency\n *     var myApp = angular.module('myApp', ['ui.router']);\n *   </script>\n * </head>\n * <body>\n * </body>\n * </html>\n * </pre>\n */\nangular.module('ui.router', ['ui.router.state']);\n\nangular.module('ui.router.compat', ['ui.router']);\n\n/**\n * @ngdoc object\n * @name ui.router.util.$resolve\n *\n * @requires $q\n * @requires $injector\n *\n * @description\n * Manages resolution of (acyclic) graphs of promises.\n */\n$Resolve.$inject = ['$q', '$injector'];\nfunction $Resolve(  $q,    $injector) {\n  \n  var VISIT_IN_PROGRESS = 1,\n      VISIT_DONE = 2,\n      NOTHING = {},\n      NO_DEPENDENCIES = [],\n      NO_LOCALS = NOTHING,\n      NO_PARENT = extend($q.when(NOTHING), { $$promises: NOTHING, $$values: NOTHING });\n  \n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#study\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Studies a set of invocables that are likely to be used multiple times.\n   * <pre>\n   * $resolve.study(invocables)(locals, parent, self)\n   * </pre>\n   * is equivalent to\n   * <pre>\n   * $resolve.resolve(invocables, locals, parent, self)\n   * </pre>\n   * but the former is more efficient (in fact `resolve` just calls `study` \n   * internally).\n   *\n   * @param {object} invocables Invocable objects\n   * @return {function} a function to pass in locals, parent and self\n   */\n  this.study = function (invocables) {\n    if (!isObject(invocables)) throw new Error(\"'invocables' must be an object\");\n    var invocableKeys = objectKeys(invocables || {});\n    \n    // Perform a topological sort of invocables to build an ordered plan\n    var plan = [], cycle = [], visited = {};\n    function visit(value, key) {\n      if (visited[key] === VISIT_DONE) return;\n      \n      cycle.push(key);\n      if (visited[key] === VISIT_IN_PROGRESS) {\n        cycle.splice(0, indexOf(cycle, key));\n        throw new Error(\"Cyclic dependency: \" + cycle.join(\" -> \"));\n      }\n      visited[key] = VISIT_IN_PROGRESS;\n      \n      if (isString(value)) {\n        plan.push(key, [ function() { return $injector.get(value); }], NO_DEPENDENCIES);\n      } else {\n        var params = $injector.annotate(value);\n        forEach(params, function (param) {\n          if (param !== key && invocables.hasOwnProperty(param)) visit(invocables[param], param);\n        });\n        plan.push(key, value, params);\n      }\n      \n      cycle.pop();\n      visited[key] = VISIT_DONE;\n    }\n    forEach(invocables, visit);\n    invocables = cycle = visited = null; // plan is all that's required\n    \n    function isResolve(value) {\n      return isObject(value) && value.then && value.$$promises;\n    }\n    \n    return function (locals, parent, self) {\n      if (isResolve(locals) && self === undefined) {\n        self = parent; parent = locals; locals = null;\n      }\n      if (!locals) locals = NO_LOCALS;\n      else if (!isObject(locals)) {\n        throw new Error(\"'locals' must be an object\");\n      }       \n      if (!parent) parent = NO_PARENT;\n      else if (!isResolve(parent)) {\n        throw new Error(\"'parent' must be a promise returned by $resolve.resolve()\");\n      }\n      \n      // To complete the overall resolution, we have to wait for the parent\n      // promise and for the promise for each invokable in our plan.\n      var resolution = $q.defer(),\n          result = resolution.promise,\n          promises = result.$$promises = {},\n          values = extend({}, locals),\n          wait = 1 + plan.length/3,\n          merged = false;\n          \n      function done() {\n        // Merge parent values we haven't got yet and publish our own $$values\n        if (!--wait) {\n          if (!merged) merge(values, parent.$$values); \n          result.$$values = values;\n          result.$$promises = result.$$promises || true; // keep for isResolve()\n          delete result.$$inheritedValues;\n          resolution.resolve(values);\n        }\n      }\n      \n      function fail(reason) {\n        result.$$failure = reason;\n        resolution.reject(reason);\n      }\n\n      // Short-circuit if parent has already failed\n      if (isDefined(parent.$$failure)) {\n        fail(parent.$$failure);\n        return result;\n      }\n      \n      if (parent.$$inheritedValues) {\n        merge(values, omit(parent.$$inheritedValues, invocableKeys));\n      }\n\n      // Merge parent values if the parent has already resolved, or merge\n      // parent promises and wait if the parent resolve is still in progress.\n      extend(promises, parent.$$promises);\n      if (parent.$$values) {\n        merged = merge(values, omit(parent.$$values, invocableKeys));\n        result.$$inheritedValues = omit(parent.$$values, invocableKeys);\n        done();\n      } else {\n        if (parent.$$inheritedValues) {\n          result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);\n        }        \n        parent.then(done, fail);\n      }\n      \n      // Process each invocable in the plan, but ignore any where a local of the same name exists.\n      for (var i=0, ii=plan.length; i<ii; i+=3) {\n        if (locals.hasOwnProperty(plan[i])) done();\n        else invoke(plan[i], plan[i+1], plan[i+2]);\n      }\n      \n      function invoke(key, invocable, params) {\n        // Create a deferred for this invocation. Failures will propagate to the resolution as well.\n        var invocation = $q.defer(), waitParams = 0;\n        function onfailure(reason) {\n          invocation.reject(reason);\n          fail(reason);\n        }\n        // Wait for any parameter that we have a promise for (either from parent or from this\n        // resolve; in that case study() will have made sure it's ordered before us in the plan).\n        forEach(params, function (dep) {\n          if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {\n            waitParams++;\n            promises[dep].then(function (result) {\n              values[dep] = result;\n              if (!(--waitParams)) proceed();\n            }, onfailure);\n          }\n        });\n        if (!waitParams) proceed();\n        function proceed() {\n          if (isDefined(result.$$failure)) return;\n          try {\n            invocation.resolve($injector.invoke(invocable, self, values));\n            invocation.promise.then(function (result) {\n              values[key] = result;\n              done();\n            }, onfailure);\n          } catch (e) {\n            onfailure(e);\n          }\n        }\n        // Publish promise synchronously; invocations further down in the plan may depend on it.\n        promises[key] = invocation.promise;\n      }\n      \n      return result;\n    };\n  };\n  \n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#resolve\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Resolves a set of invocables. An invocable is a function to be invoked via \n   * `$injector.invoke()`, and can have an arbitrary number of dependencies. \n   * An invocable can either return a value directly,\n   * or a `$q` promise. If a promise is returned it will be resolved and the \n   * resulting value will be used instead. Dependencies of invocables are resolved \n   * (in this order of precedence)\n   *\n   * - from the specified `locals`\n   * - from another invocable that is part of this `$resolve` call\n   * - from an invocable that is inherited from a `parent` call to `$resolve` \n   *   (or recursively\n   * - from any ancestor `$resolve` of that parent).\n   *\n   * The return value of `$resolve` is a promise for an object that contains \n   * (in this order of precedence)\n   *\n   * - any `locals` (if specified)\n   * - the resolved return values of all injectables\n   * - any values inherited from a `parent` call to `$resolve` (if specified)\n   *\n   * The promise will resolve after the `parent` promise (if any) and all promises \n   * returned by injectables have been resolved. If any invocable \n   * (or `$injector.invoke`) throws an exception, or if a promise returned by an \n   * invocable is rejected, the `$resolve` promise is immediately rejected with the \n   * same error. A rejection of a `parent` promise (if specified) will likewise be \n   * propagated immediately. Once the `$resolve` promise has been rejected, no \n   * further invocables will be called.\n   * \n   * Cyclic dependencies between invocables are not permitted and will caues `$resolve`\n   * to throw an error. As a special case, an injectable can depend on a parameter \n   * with the same name as the injectable, which will be fulfilled from the `parent` \n   * injectable of the same name. This allows inherited values to be decorated. \n   * Note that in this case any other injectable in the same `$resolve` with the same\n   * dependency would see the decorated value, not the inherited value.\n   *\n   * Note that missing dependencies -- unlike cyclic dependencies -- will cause an \n   * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \n   * exception.\n   *\n   * Invocables are invoked eagerly as soon as all dependencies are available. \n   * This is true even for dependencies inherited from a `parent` call to `$resolve`.\n   *\n   * As a special case, an invocable can be a string, in which case it is taken to \n   * be a service name to be passed to `$injector.get()`. This is supported primarily \n   * for backwards-compatibility with the `resolve` property of `$routeProvider` \n   * routes.\n   *\n   * @param {object} invocables functions to invoke or \n   * `$injector` services to fetch.\n   * @param {object} locals  values to make available to the injectables\n   * @param {object} parent  a promise returned by another call to `$resolve`.\n   * @param {object} self  the `this` for the invoked methods\n   * @return {object} Promise for an object that contains the resolved return value\n   * of all invocables, as well as any inherited and local values.\n   */\n  this.resolve = function (invocables, locals, parent, self) {\n    return this.study(invocables)(locals, parent, self);\n  };\n}\n\nangular.module('ui.router.util').service('$resolve', $Resolve);\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$templateFactory\n *\n * @requires $http\n * @requires $templateCache\n * @requires $injector\n *\n * @description\n * Service. Manages loading of templates.\n */\n$TemplateFactory.$inject = ['$http', '$templateCache', '$injector'];\nfunction $TemplateFactory(  $http,   $templateCache,   $injector) {\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromConfig\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a configuration object. \n   *\n   * @param {object} config Configuration object for which to load a template. \n   * The following properties are search in the specified order, and the first one \n   * that is defined is used to create the template:\n   *\n   * @param {string|object} config.template html string template or function to \n   * load via {@link ui.router.util.$templateFactory#fromString fromString}.\n   * @param {string|object} config.templateUrl url to load or a function returning \n   * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.\n   * @param {Function} config.templateProvider function to invoke via \n   * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.\n   * @param {object} params  Parameters to pass to the template function.\n   * @param {object} locals Locals to pass to `invoke` if the template is loaded \n   * via a `templateProvider`. Defaults to `{ params: params }`.\n   *\n   * @return {string|object}  The template html as a string, or a promise for \n   * that string,or `null` if no template is configured.\n   */\n  this.fromConfig = function (config, params, locals) {\n    return (\n      isDefined(config.template) ? this.fromString(config.template, params) :\n      isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) :\n      isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) :\n      null\n    );\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromString\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a string or a function returning a string.\n   *\n   * @param {string|object} template html template as a string or function that \n   * returns an html template as a string.\n   * @param {object} params Parameters to pass to the template function.\n   *\n   * @return {string|object} The template html as a string, or a promise for that \n   * string.\n   */\n  this.fromString = function (template, params) {\n    return isFunction(template) ? template(params) : template;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromUrl\n   * @methodOf ui.router.util.$templateFactory\n   * \n   * @description\n   * Loads a template from the a URL via `$http` and `$templateCache`.\n   *\n   * @param {string|Function} url url of the template to load, or a function \n   * that returns a url.\n   * @param {Object} params Parameters to pass to the url function.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromUrl = function (url, params) {\n    if (isFunction(url)) url = url(params);\n    if (url == null) return null;\n    else return $http\n        .get(url, { cache: $templateCache, headers: { Accept: 'text/html' }})\n        .then(function(response) { return response.data; });\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromProvider\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template by invoking an injectable provider function.\n   *\n   * @param {Function} provider Function to invoke via `$injector.invoke`\n   * @param {Object} params Parameters for the template.\n   * @param {Object} locals Locals to pass to `invoke`. Defaults to \n   * `{ params: params }`.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromProvider = function (provider, params, locals) {\n    return $injector.invoke(provider, null, locals || { params: params });\n  };\n}\n\nangular.module('ui.router.util').service('$templateFactory', $TemplateFactory);\n\nvar $$UMFP; // reference to $UrlMatcherFactoryProvider\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:UrlMatcher\n *\n * @description\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list\n * of search parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.\n * \n * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace\n * syntax, which optionally allows a regular expression for the parameter to be specified:\n *\n * * `':'` name - colon placeholder\n * * `'*'` name - catch-all placeholder\n * * `'{' name '}'` - curly placeholder\n * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the\n *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters). For colon \n * placeholders or curly placeholders without an explicit regexp, a path parameter matches any\n * number of characters other than '/'. For catch-all placeholders the path parameter matches\n * any number of characters.\n * \n * Examples:\n * \n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n * @param {string} pattern  The pattern to compile into a matcher.\n * @param {Object} config  A configuration object hash:\n * @param {Object=} parentMatcher Used to concatenate the pattern/config onto\n *   an existing UrlMatcher\n *\n * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n *\n * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any\n *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns\n *   non-null) will start with this prefix.\n *\n * @property {string} source  The pattern that was passed into the constructor\n *\n * @property {string} sourcePath  The path portion of the source property\n *\n * @property {string} sourceSearch  The search portion of the source property\n *\n * @property {string} regex  The constructed regex that will be used to match against the url when \n *   it is time to determine which url will match.\n *\n * @returns {Object}  New `UrlMatcher` object\n */\nfunction UrlMatcher(pattern, config, parentMatcher) {\n  config = extend({ params: {} }, isObject(config) ? config : {});\n\n  // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n  //   '*' name\n  //   ':' name\n  //   '{' name '}'\n  //   '{' name ':' regexp '}'\n  // The regular expression is somewhat complicated due to the need to allow curly braces\n  // inside the regular expression. The placeholder regexp breaks down as follows:\n  //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n  //    \\{([\\w\\[\\]]+)(?:\\:( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n  //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n  //    [^{}\\\\]+                       - anything other than curly braces or backslash\n  //    \\\\.                            - a backslash escape\n  //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n  var placeholder       = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      searchPlaceholder = /([:]?)([\\w\\[\\]-]+)|\\{([\\w\\[\\]-]+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      compiled = '^', last = 0, m,\n      segments = this.segments = [],\n      parentParams = parentMatcher ? parentMatcher.params : {},\n      params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(),\n      paramNames = [];\n\n  function addParameter(id, type, config, location) {\n    paramNames.push(id);\n    if (parentParams[id]) return parentParams[id];\n    if (!/^\\w+(-+\\w+)*(?:\\[\\])?$/.test(id)) throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    if (params[id]) throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    params[id] = new $$UMFP.Param(id, type, config, location);\n    return params[id];\n  }\n\n  function quoteRegExp(string, pattern, squash) {\n    var surroundPattern = ['',''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n    if (!pattern) return result;\n    switch(squash) {\n      case false: surroundPattern = ['(', ')'];   break;\n      case true:  surroundPattern = ['?(', ')?']; break;\n      default:    surroundPattern = ['(' + squash + \"|\", ')?'];  break;\n    }\n    return result + surroundPattern[0] + pattern + surroundPattern[1];\n  }\n\n  this.source = pattern;\n\n  // Split into static segments separated by path parameter placeholders.\n  // The number of segments is always 1 more than the number of parameters.\n  function matchDetails(m, isSearch) {\n    var id, regexp, segment, type, cfg, arrayMode;\n    id          = m[2] || m[3]; // IE[78] returns '' for unmatched groups instead of null\n    cfg         = config.params[id];\n    segment     = pattern.substring(last, m.index);\n    regexp      = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);\n    type        = $$UMFP.type(regexp || \"string\") || inherit($$UMFP.type(\"string\"), { pattern: new RegExp(regexp) });\n    return {\n      id: id, regexp: regexp, segment: segment, type: type, cfg: cfg\n    };\n  }\n\n  var p, param, segment;\n  while ((m = placeholder.exec(pattern))) {\n    p = matchDetails(m, false);\n    if (p.segment.indexOf('?') >= 0) break; // we're into the search part\n\n    param = addParameter(p.id, p.type, p.cfg, \"path\");\n    compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash);\n    segments.push(p.segment);\n    last = placeholder.lastIndex;\n  }\n  segment = pattern.substring(last);\n\n  // Find any search parameter names and remove them from the last segment\n  var i = segment.indexOf('?');\n\n  if (i >= 0) {\n    var search = this.sourceSearch = segment.substring(i);\n    segment = segment.substring(0, i);\n    this.sourcePath = pattern.substring(0, last + i);\n\n    if (search.length > 0) {\n      last = 0;\n      while ((m = searchPlaceholder.exec(search))) {\n        p = matchDetails(m, true);\n        param = addParameter(p.id, p.type, p.cfg, \"search\");\n        last = placeholder.lastIndex;\n        // check if ?&\n      }\n    }\n  } else {\n    this.sourcePath = pattern;\n    this.sourceSearch = '';\n  }\n\n  compiled += quoteRegExp(segment) + (config.strict === false ? '\\/?' : '') + '$';\n  segments.push(segment);\n\n  this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);\n  this.prefix = segments[0];\n  this.$$paramNames = paramNames;\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#concat\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns a new matcher for a pattern constructed by appending the path part and adding the\n * search parameters of the specified pattern to this pattern. The current pattern is not\n * modified. This can be understood as creating a pattern for URLs that are relative to (or\n * suffixes of) the current pattern.\n *\n * @example\n * The following two matchers are equivalent:\n * <pre>\n * new UrlMatcher('/user/{id}?q').concat('/details?date');\n * new UrlMatcher('/user/{id}/details?q&date');\n * </pre>\n *\n * @param {string} pattern  The pattern to append.\n * @param {Object} config  An object hash of the configuration for the matcher.\n * @returns {UrlMatcher}  A matcher for the concatenated pattern.\n */\nUrlMatcher.prototype.concat = function (pattern, config) {\n  // Because order of search parameters is irrelevant, we can add our own search\n  // parameters to the end of the new pattern. Parse the new pattern by itself\n  // and then join the bits together, but it's much easier to do this on a string level.\n  var defaultConfig = {\n    caseInsensitive: $$UMFP.caseInsensitive(),\n    strict: $$UMFP.strictMode(),\n    squash: $$UMFP.defaultSquashPolicy()\n  };\n  return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);\n};\n\nUrlMatcher.prototype.toString = function () {\n  return this.source;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#exec\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Tests the specified path against this matcher, and returns an object containing the captured\n * parameter values, or null if the path does not match. The returned object contains the values\n * of any search parameters that are mentioned in the pattern, but their value may be null if\n * they are not present in `searchParams`. This means that search parameters are always treated\n * as optional.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n *   x: '1', q: 'hello'\n * });\n * // returns { id: 'bob', q: 'hello', r: null }\n * </pre>\n *\n * @param {string} path  The URL path to match, e.g. `$location.path()`.\n * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.\n * @returns {Object}  The captured parameter values.\n */\nUrlMatcher.prototype.exec = function (path, searchParams) {\n  var m = this.regexp.exec(path);\n  if (!m) return null;\n  searchParams = searchParams || {};\n\n  var paramNames = this.parameters(), nTotal = paramNames.length,\n    nPath = this.segments.length - 1,\n    values = {}, i, j, cfg, paramName;\n\n  if (nPath !== m.length - 1) throw new Error(\"Unbalanced capture group in route '\" + this.source + \"'\");\n\n  function decodePathArray(string) {\n    function reverseString(str) { return str.split(\"\").reverse().join(\"\"); }\n    function unquoteDashes(str) { return str.replace(/\\\\-/, \"-\"); }\n\n    var split = reverseString(string).split(/-(?!\\\\)/);\n    var allReversed = map(split, reverseString);\n    return map(allReversed, unquoteDashes).reverse();\n  }\n\n  for (i = 0; i < nPath; i++) {\n    paramName = paramNames[i];\n    var param = this.params[paramName];\n    var paramVal = m[i+1];\n    // if the param value matches a pre-replace pair, replace the value before decoding.\n    for (j = 0; j < param.replace; j++) {\n      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n    }\n    if (paramVal && param.array === true) paramVal = decodePathArray(paramVal);\n    values[paramName] = param.value(paramVal);\n  }\n  for (/**/; i < nTotal; i++) {\n    paramName = paramNames[i];\n    values[paramName] = this.params[paramName].value(searchParams[paramName]);\n  }\n\n  return values;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#parameters\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns the names of all path and search parameters of this pattern in an unspecified order.\n * \n * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the\n *    pattern has no parameters, an empty array is returned.\n */\nUrlMatcher.prototype.parameters = function (param) {\n  if (!isDefined(param)) return this.$$paramNames;\n  return this.params[param] || null;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#validate\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Checks an object hash of parameters to validate their correctness according to the parameter\n * types of this `UrlMatcher`.\n *\n * @param {Object} params The object hash of parameters to validate.\n * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.\n */\nUrlMatcher.prototype.validates = function (params) {\n  return this.params.$$validates(params);\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#format\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Creates a URL that matches this pattern by substituting the specified values\n * for the path and search parameters. Null values for path parameters are\n * treated as empty strings.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n * // returns '/user/bob?q=yes'\n * </pre>\n *\n * @param {Object} values  the values to substitute for the parameters in this pattern.\n * @returns {string}  the formatted URL (path and optionally search part).\n */\nUrlMatcher.prototype.format = function (values) {\n  values = values || {};\n  var segments = this.segments, params = this.parameters(), paramset = this.params;\n  if (!this.validates(values)) return null;\n\n  var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];\n\n  function encodeDashes(str) { // Replace dashes with encoded \"\\-\"\n    return encodeURIComponent(str).replace(/-/g, function(c) { return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase(); });\n  }\n\n  for (i = 0; i < nTotal; i++) {\n    var isPathParam = i < nPath;\n    var name = params[i], param = paramset[name], value = param.value(values[name]);\n    var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);\n    var squash = isDefaultValue ? param.squash : false;\n    var encoded = param.type.encode(value);\n\n    if (isPathParam) {\n      var nextSegment = segments[i + 1];\n      if (squash === false) {\n        if (encoded != null) {\n          if (isArray(encoded)) {\n            result += map(encoded, encodeDashes).join(\"-\");\n          } else {\n            result += encodeURIComponent(encoded);\n          }\n        }\n        result += nextSegment;\n      } else if (squash === true) {\n        var capture = result.match(/\\/$/) ? /\\/?(.*)/ : /(.*)/;\n        result += nextSegment.match(capture)[1];\n      } else if (isString(squash)) {\n        result += squash + nextSegment;\n      }\n    } else {\n      if (encoded == null || (isDefaultValue && squash !== false)) continue;\n      if (!isArray(encoded)) encoded = [ encoded ];\n      encoded = map(encoded, encodeURIComponent).join('&' + name + '=');\n      result += (search ? '&' : '?') + (name + '=' + encoded);\n      search = true;\n    }\n  }\n\n  return result;\n};\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:Type\n *\n * @description\n * Implements an interface to define custom parameter types that can be decoded from and encoded to\n * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}\n * objects when matching or formatting URLs, or comparing or validating parameter values.\n *\n * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more\n * information on registering custom types.\n *\n * @param {Object} config  A configuration object which contains the custom type definition.  The object's\n *        properties will override the default methods and/or pattern in `Type`'s public interface.\n * @example\n * <pre>\n * {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n * </pre>\n *\n * @property {RegExp} pattern The regular expression pattern used to match values of this type when\n *           coming from a substring of a URL.\n *\n * @returns {Object}  Returns a new `Type` object.\n */\nfunction Type(config) {\n  extend(this, config);\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#is\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Detects whether a value is of a particular type. Accepts a native (decoded) value\n * and determines whether it matches the current `Type` object.\n *\n * @param {*} val  The value to check.\n * @param {string} key  Optional. If the type check is happening in the context of a specific\n *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the\n *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.\n * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.\n */\nType.prototype.is = function(val, key) {\n  return true;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#encode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the\n * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\n * only needs to be a representation of `val` that has been coerced to a string.\n *\n * @param {*} val  The value to encode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.\n */\nType.prototype.encode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#decode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Converts a parameter value (from URL string or transition param) to a custom/native value.\n *\n * @param {string} val  The URL parameter value to decode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {*}  Returns a custom representation of the URL parameter value.\n */\nType.prototype.decode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#equals\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Determines whether two decoded values are equivalent.\n *\n * @param {*} a  A value to compare against.\n * @param {*} b  A value to compare against.\n * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.\n */\nType.prototype.equals = function(a, b) {\n  return a == b;\n};\n\nType.prototype.$subPattern = function() {\n  var sub = this.pattern.toString();\n  return sub.substr(1, sub.length - 2);\n};\n\nType.prototype.pattern = /.*/;\n\nType.prototype.toString = function() { return \"{Type:\" + this.name + \"}\"; };\n\n/*\n * Wraps an existing custom Type as an array of Type, depending on 'mode'.\n * e.g.:\n * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n * - url: \"/path?queryParam=1&queryParam=2\n * - $stateParams.queryParam will be [1, 2]\n * if `mode` is \"auto\", then\n * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n */\nType.prototype.$asArray = function(mode, isSearch) {\n  if (!mode) return this;\n  if (mode === \"auto\" && !isSearch) throw new Error(\"'auto' array mode is for query parameters only\");\n  return new ArrayType(this, mode);\n\n  function ArrayType(type, mode) {\n    function bindTo(type, callbackName) {\n      return function() {\n        return type[callbackName].apply(type, arguments);\n      };\n    }\n\n    // Wrap non-array value as array\n    function arrayWrap(val) { return isArray(val) ? val : (isDefined(val) ? [ val ] : []); }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n      switch(val.length) {\n        case 0: return undefined;\n        case 1: return mode === \"auto\" ? val[0] : val;\n        default: return val;\n      }\n    }\n    function falsey(val) { return !val; }\n\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n      return function handleArray(val) {\n        val = arrayWrap(val);\n        var result = map(val, callback);\n        if (allTruthyMode === true)\n          return filter(result, falsey).length === 0;\n        return arrayUnwrap(result);\n      };\n    }\n\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n      return function handleArray(val1, val2) {\n        var left = arrayWrap(val1), right = arrayWrap(val2);\n        if (left.length !== right.length) return false;\n        for (var i = 0; i < left.length; i++) {\n          if (!callback(left[i], right[i])) return false;\n        }\n        return true;\n      };\n    }\n\n    this.encode = arrayHandler(bindTo(type, 'encode'));\n    this.decode = arrayHandler(bindTo(type, 'decode'));\n    this.is     = arrayHandler(bindTo(type, 'is'), true);\n    this.equals = arrayEqualsHandler(bindTo(type, 'equals'));\n    this.pattern = type.pattern;\n    this.$arrayMode = mode;\n  }\n};\n\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$urlMatcherFactory\n *\n * @description\n * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\n * is also available to providers under the name `$urlMatcherFactoryProvider`.\n */\nfunction $UrlMatcherFactory() {\n  $$UMFP = this;\n\n  var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;\n\n  function valToString(val) { return val != null ? val.toString().replace(/\\//g, \"%2F\") : val; }\n  function valFromString(val) { return val != null ? val.toString().replace(/%2F/g, \"/\") : val; }\n//  TODO: in 1.0, make string .is() return false if value is undefined by default.\n//  function regexpMatches(val) { /*jshint validthis:true */ return isDefined(val) && this.pattern.test(val); }\n  function regexpMatches(val) { /*jshint validthis:true */ return this.pattern.test(val); }\n\n  var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {\n    string: {\n      encode: valToString,\n      decode: valFromString,\n      is: regexpMatches,\n      pattern: /[^/]*/\n    },\n    int: {\n      encode: valToString,\n      decode: function(val) { return parseInt(val, 10); },\n      is: function(val) { return isDefined(val) && this.decode(val.toString()) === val; },\n      pattern: /\\d+/\n    },\n    bool: {\n      encode: function(val) { return val ? 1 : 0; },\n      decode: function(val) { return parseInt(val, 10) !== 0; },\n      is: function(val) { return val === true || val === false; },\n      pattern: /0|1/\n    },\n    date: {\n      encode: function (val) {\n        if (!this.is(val))\n          return undefined;\n        return [ val.getFullYear(),\n          ('0' + (val.getMonth() + 1)).slice(-2),\n          ('0' + val.getDate()).slice(-2)\n        ].join(\"-\");\n      },\n      decode: function (val) {\n        if (this.is(val)) return val;\n        var match = this.capture.exec(val);\n        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n      },\n      is: function(val) { return val instanceof Date && !isNaN(val.valueOf()); },\n      equals: function (a, b) { return this.is(a) && this.is(b) && a.toISOString() === b.toISOString(); },\n      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n    },\n    json: {\n      encode: angular.toJson,\n      decode: angular.fromJson,\n      is: angular.isObject,\n      equals: angular.equals,\n      pattern: /[^/]*/\n    },\n    any: { // does not encode/decode\n      encode: angular.identity,\n      decode: angular.identity,\n      is: angular.identity,\n      equals: angular.equals,\n      pattern: /.*/\n    }\n  };\n\n  function getDefaultConfig() {\n    return {\n      strict: isStrictMode,\n      caseInsensitive: isCaseInsensitive\n    };\n  }\n\n  function isInjectable(value) {\n    return (isFunction(value) || (isArray(value) && isFunction(value[value.length - 1])));\n  }\n\n  /**\n   * [Internal] Get the default value of a parameter, which may be an injectable function.\n   */\n  $UrlMatcherFactory.$$getDefaultValue = function(config) {\n    if (!isInjectable(config.value)) return config.value;\n    if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n    return injector.invoke(config.value);\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#caseInsensitive\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URL matching should be case sensitive (the default behavior), or not.\n   *\n   * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;\n   * @returns {boolean} the current value of caseInsensitive\n   */\n  this.caseInsensitive = function(value) {\n    if (isDefined(value))\n      isCaseInsensitive = value;\n    return isCaseInsensitive;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#strictMode\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URLs should match trailing slashes, or not (the default behavior).\n   *\n   * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.\n   * @returns {boolean} the current value of strictMode\n   */\n  this.strictMode = function(value) {\n    if (isDefined(value))\n      isStrictMode = value;\n    return isStrictMode;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Sets the default behavior when generating or matching URLs with default parameter values.\n   *\n   * @param {string} value A string that defines the default parameter URL squashing behavior.\n   *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n   *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n   *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n   *    any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n   *             the parameter value from the URL and replace it with this string.\n   */\n  this.defaultSquashPolicy = function(value) {\n    if (!isDefined(value)) return defaultSquashPolicy;\n    if (value !== true && value !== false && !isString(value))\n      throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n    defaultSquashPolicy = value;\n    return value;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#compile\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.\n   *\n   * @param {string} pattern  The URL pattern.\n   * @param {Object} config  The config object hash.\n   * @returns {UrlMatcher}  The UrlMatcher.\n   */\n  this.compile = function (pattern, config) {\n    return new UrlMatcher(pattern, extend(getDefaultConfig(), config));\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#isMatcher\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Returns true if the specified object is a `UrlMatcher`, or false otherwise.\n   *\n   * @param {Object} object  The object to perform the type check against.\n   * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by\n   *          implementing all the same methods.\n   */\n  this.isMatcher = function (o) {\n    if (!isObject(o)) return false;\n    var result = true;\n\n    forEach(UrlMatcher.prototype, function(val, name) {\n      if (isFunction(val)) {\n        result = result && (isDefined(o[name]) && isFunction(o[name]));\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#type\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to\n   * generate URLs with typed parameters.\n   *\n   * @param {string} name  The type name.\n   * @param {Object|Function} definition   The type definition. See\n   *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   * @param {Object|Function} definitionFn (optional) A function that is injected before the app\n   *        runtime starts.  The result of this function is merged into the existing `definition`.\n   *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   *\n   * @returns {Object}  Returns `$urlMatcherFactoryProvider`.\n   *\n   * @example\n   * This is a simple example of a custom type that encodes and decodes items from an\n   * array, using the array index as the URL-encoded value:\n   *\n   * <pre>\n   * var list = ['John', 'Paul', 'George', 'Ringo'];\n   *\n   * $urlMatcherFactoryProvider.type('listItem', {\n   *   encode: function(item) {\n   *     // Represent the list item in the URL using its corresponding index\n   *     return list.indexOf(item);\n   *   },\n   *   decode: function(item) {\n   *     // Look up the list item by index\n   *     return list[parseInt(item, 10)];\n   *   },\n   *   is: function(item) {\n   *     // Ensure the item is valid by checking to see that it appears\n   *     // in the list\n   *     return list.indexOf(item) > -1;\n   *   }\n   * });\n   *\n   * $stateProvider.state('list', {\n   *   url: \"/list/{item:listItem}\",\n   *   controller: function($scope, $stateParams) {\n   *     console.log($stateParams.item);\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * // Changes URL to '/list/3', logs \"Ringo\" to the console\n   * $state.go('list', { item: \"Ringo\" });\n   * </pre>\n   *\n   * This is a more complex example of a type that relies on dependency injection to\n   * interact with services, and uses the parameter name from the URL to infer how to\n   * handle encoding and decoding parameter values:\n   *\n   * <pre>\n   * // Defines a custom type that gets a value from a service,\n   * // where each service gets different types of values from\n   * // a backend API:\n   * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {\n   *\n   *   // Matches up services to URL parameter names\n   *   var services = {\n   *     user: Users,\n   *     post: Posts\n   *   };\n   *\n   *   return {\n   *     encode: function(object) {\n   *       // Represent the object in the URL using its unique ID\n   *       return object.id;\n   *     },\n   *     decode: function(value, key) {\n   *       // Look up the object by ID, using the parameter\n   *       // name (key) to call the correct service\n   *       return services[key].findById(value);\n   *     },\n   *     is: function(object, key) {\n   *       // Check that object is a valid dbObject\n   *       return angular.isObject(object) && object.id && services[key];\n   *     }\n   *     equals: function(a, b) {\n   *       // Check the equality of decoded objects by comparing\n   *       // their unique IDs\n   *       return a.id === b.id;\n   *     }\n   *   };\n   * });\n   *\n   * // In a config() block, you can then attach URLs with\n   * // type-annotated parameters:\n   * $stateProvider.state('users', {\n   *   url: \"/users\",\n   *   // ...\n   * }).state('users.item', {\n   *   url: \"/{user:dbObject}\",\n   *   controller: function($scope, $stateParams) {\n   *     // $stateParams.user will now be an object returned from\n   *     // the Users service\n   *   },\n   *   // ...\n   * });\n   * </pre>\n   */\n  this.type = function (name, definition, definitionFn) {\n    if (!isDefined(definition)) return $types[name];\n    if ($types.hasOwnProperty(name)) throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n\n    $types[name] = new Type(extend({ name: name }, definition));\n    if (definitionFn) {\n      typeQueue.push({ name: name, def: definitionFn });\n      if (!enqueue) flushTypeQueue();\n    }\n    return this;\n  };\n\n  // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s\n  function flushTypeQueue() {\n    while(typeQueue.length) {\n      var type = typeQueue.shift();\n      if (type.pattern) throw new Error(\"You cannot override a type's .pattern at runtime.\");\n      angular.extend($types[type.name], injector.invoke(type.def));\n    }\n  }\n\n  // Register default types. Store them in the prototype of $types.\n  forEach(defaultTypes, function(type, name) { $types[name] = new Type(extend({name: name}, type)); });\n  $types = inherit($types, {});\n\n  /* No need to document $get, since it returns this */\n  this.$get = ['$injector', function ($injector) {\n    injector = $injector;\n    enqueue = false;\n    flushTypeQueue();\n\n    forEach(defaultTypes, function(type, name) {\n      if (!$types[name]) $types[name] = new Type(type);\n    });\n    return this;\n  }];\n\n  this.Param = function Param(id, type, config, location) {\n    var self = this;\n    config = unwrapShorthand(config);\n    type = getType(config, type, location);\n    var arrayMode = getArrayMode();\n    type = arrayMode ? type.$asArray(arrayMode, location === \"search\") : type;\n    if (type.name === \"string\" && !arrayMode && location === \"path\" && config.value === undefined)\n      config.value = \"\"; // for 0.2.x; in 0.3.0+ do not automatically default to \"\"\n    var isOptional = config.value !== undefined;\n    var squash = getSquashPolicy(config, isOptional);\n    var replace = getReplace(config, arrayMode, isOptional, squash);\n\n    function unwrapShorthand(config) {\n      var keys = isObject(config) ? objectKeys(config) : [];\n      var isShorthand = indexOf(keys, \"value\") === -1 && indexOf(keys, \"type\") === -1 &&\n                        indexOf(keys, \"squash\") === -1 && indexOf(keys, \"array\") === -1;\n      if (isShorthand) config = { value: config };\n      config.$$fn = isInjectable(config.value) ? config.value : function () { return config.value; };\n      return config;\n    }\n\n    function getType(config, urlType, location) {\n      if (config.type && urlType) throw new Error(\"Param '\"+id+\"' has two type configurations.\");\n      if (urlType) return urlType;\n      if (!config.type) return (location === \"config\" ? $types.any : $types.string);\n      return config.type instanceof Type ? config.type : new Type(config.type);\n    }\n\n    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n    function getArrayMode() {\n      var arrayDefaults = { array: (location === \"search\" ? \"auto\" : false) };\n      var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n      return extend(arrayDefaults, arrayParamNomenclature, config).array;\n    }\n\n    /**\n     * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n     */\n    function getSquashPolicy(config, isOptional) {\n      var squash = config.squash;\n      if (!isOptional || squash === false) return false;\n      if (!isDefined(squash) || squash == null) return defaultSquashPolicy;\n      if (squash === true || isString(squash)) return squash;\n      throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n    }\n\n    function getReplace(config, arrayMode, isOptional, squash) {\n      var replace, configuredKeys, defaultPolicy = [\n        { from: \"\",   to: (isOptional || arrayMode ? undefined : \"\") },\n        { from: null, to: (isOptional || arrayMode ? undefined : \"\") }\n      ];\n      replace = isArray(config.replace) ? config.replace : [];\n      if (isString(squash))\n        replace.push({ from: squash, to: undefined });\n      configuredKeys = map(replace, function(item) { return item.from; } );\n      return filter(defaultPolicy, function(item) { return indexOf(configuredKeys, item.from) === -1; }).concat(replace);\n    }\n\n    /**\n     * [Internal] Get the default value of a parameter, which may be an injectable function.\n     */\n    function $$getDefaultValue() {\n      if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n      return injector.invoke(config.$$fn);\n    }\n\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    function $value(value) {\n      function hasReplaceVal(val) { return function(obj) { return obj.from === val; }; }\n      function $replace(value) {\n        var replacement = map(filter(self.replace, hasReplaceVal(value)), function(obj) { return obj.to; });\n        return replacement.length ? replacement[0] : value;\n      }\n      value = $replace(value);\n      return isDefined(value) ? self.type.decode(value) : $$getDefaultValue();\n    }\n\n    function toString() { return \"{Param:\" + id + \" \" + type + \" squash: '\" + squash + \"' optional: \" + isOptional + \"}\"; }\n\n    extend(this, {\n      id: id,\n      type: type,\n      location: location,\n      array: arrayMode,\n      squash: squash,\n      replace: replace,\n      isOptional: isOptional,\n      value: $value,\n      dynamic: undefined,\n      config: config,\n      toString: toString\n    });\n  };\n\n  function ParamSet(params) {\n    extend(this, params || {});\n  }\n\n  ParamSet.prototype = {\n    $$new: function() {\n      return inherit(this, extend(new ParamSet(), { $$parent: this}));\n    },\n    $$keys: function () {\n      var keys = [], chain = [], parent = this,\n        ignore = objectKeys(ParamSet.prototype);\n      while (parent) { chain.push(parent); parent = parent.$$parent; }\n      chain.reverse();\n      forEach(chain, function(paramset) {\n        forEach(objectKeys(paramset), function(key) {\n            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1) keys.push(key);\n        });\n      });\n      return keys;\n    },\n    $$values: function(paramValues) {\n      var values = {}, self = this;\n      forEach(self.$$keys(), function(key) {\n        values[key] = self[key].value(paramValues && paramValues[key]);\n      });\n      return values;\n    },\n    $$equals: function(paramValues1, paramValues2) {\n      var equal = true, self = this;\n      forEach(self.$$keys(), function(key) {\n        var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];\n        if (!self[key].type.equals(left, right)) equal = false;\n      });\n      return equal;\n    },\n    $$validates: function $$validate(paramValues) {\n      var result = true, isOptional, val, param, self = this;\n\n      forEach(this.$$keys(), function(key) {\n        param = self[key];\n        val = paramValues[key];\n        isOptional = !val && param.isOptional;\n        result = result && (isOptional || !!param.type.is(val));\n      });\n      return result;\n    },\n    $$parent: undefined\n  };\n\n  this.ParamSet = ParamSet;\n}\n\n// Register as a provider so it's available to other providers\nangular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);\nangular.module('ui.router.util').run(['$urlMatcherFactory', function($urlMatcherFactory) { }]);\n\n/**\n * @ngdoc object\n * @name ui.router.router.$urlRouterProvider\n *\n * @requires ui.router.util.$urlMatcherFactoryProvider\n * @requires $locationProvider\n *\n * @description\n * `$urlRouterProvider` has the responsibility of watching `$location`. \n * When `$location` changes it runs through a list of rules one by one until a \n * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify \n * a url in a state configuration. All urls are compiled into a UrlMatcher object.\n *\n * There are several methods on `$urlRouterProvider` that make it useful to use directly\n * in your module config.\n */\n$UrlRouterProvider.$inject = ['$locationProvider', '$urlMatcherFactoryProvider'];\nfunction $UrlRouterProvider(   $locationProvider,   $urlMatcherFactory) {\n  var rules = [], otherwise = null, interceptDeferred = false, listener;\n\n  // Returns a string that is a prefix of all strings matching the RegExp\n  function regExpPrefix(re) {\n    var prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n    return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n  }\n\n  // Interpolates matched values into a String.replace()-style pattern\n  function interpolate(pattern, match) {\n    return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n      return match[what === '$' ? 0 : Number(what)];\n    });\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#rule\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines rules that are used by `$urlRouterProvider` to find matches for\n   * specific URLs.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // Here's an example of how you might allow case insensitive urls\n   *   $urlRouterProvider.rule(function ($injector, $location) {\n   *     var path = $location.path(),\n   *         normalized = path.toLowerCase();\n   *\n   *     if (path !== normalized) {\n   *       return normalized;\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {object} rule Handler function that takes `$injector` and `$location`\n   * services as arguments. You can use them to return a valid path as a string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.rule = function (rule) {\n    if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    rules.push(rule);\n    return this;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouterProvider#otherwise\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines a path that is used when an invalid route is requested.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // if the path doesn't match any of the urls you configured\n   *   // otherwise will take care of routing the user to the\n   *   // specified url\n   *   $urlRouterProvider.otherwise('/index');\n   *\n   *   // Example of using function rule as param\n   *   $urlRouterProvider.otherwise(function ($injector, $location) {\n   *     return '/a/valid/url';\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|object} rule The url path you want to redirect to or a function \n   * rule that returns the url path. The function version is passed two params: \n   * `$injector` and `$location` services, and must return a url string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.otherwise = function (rule) {\n    if (isString(rule)) {\n      var redirect = rule;\n      rule = function () { return redirect; };\n    }\n    else if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    otherwise = rule;\n    return this;\n  };\n\n\n  function handleIfMatch($injector, handler, match) {\n    if (!match) return false;\n    var result = $injector.invoke(handler, handler, { $match: match });\n    return isDefined(result) ? result : true;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#when\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Registers a handler for a given url matching. if handle is a string, it is\n   * treated as a redirect, and is interpolated according to the syntax of match\n   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n   *\n   * If the handler is a function, it is injectable. It gets invoked if `$location`\n   * matches. You have the option of inject the match object as `$match`.\n   *\n   * The handler can return\n   *\n   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n   *   will continue trying to find another one that matches.\n   * - **string** which is treated as a redirect and passed to `$location.url()`\n   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n   *     if ($state.$current.navigable !== state ||\n   *         !equalForKeys($match, $stateParams) {\n   *      $state.transitionTo(state, $match, false);\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|object} what The incoming path that you want to redirect.\n   * @param {string|object} handler The path you want to redirect your user to.\n   */\n  this.when = function (what, handler) {\n    var redirect, handlerIsString = isString(handler);\n    if (isString(what)) what = $urlMatcherFactory.compile(what);\n\n    if (!handlerIsString && !isFunction(handler) && !isArray(handler))\n      throw new Error(\"invalid 'handler' in when()\");\n\n    var strategies = {\n      matcher: function (what, handler) {\n        if (handlerIsString) {\n          redirect = $urlMatcherFactory.compile(handler);\n          handler = ['$match', function ($match) { return redirect.format($match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));\n        }, {\n          prefix: isString(what.prefix) ? what.prefix : ''\n        });\n      },\n      regex: function (what, handler) {\n        if (what.global || what.sticky) throw new Error(\"when() RegExp must not be global or sticky\");\n\n        if (handlerIsString) {\n          redirect = handler;\n          handler = ['$match', function ($match) { return interpolate(redirect, $match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path()));\n        }, {\n          prefix: regExpPrefix(what)\n        });\n      }\n    };\n\n    var check = { matcher: $urlMatcherFactory.isMatcher(what), regex: what instanceof RegExp };\n\n    for (var n in check) {\n      if (check[n]) return this.rule(strategies[n](what, handler));\n    }\n\n    throw new Error(\"invalid 'what' in when()\");\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#deferIntercept\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Disables (or enables) deferring location change interception.\n   *\n   * If you wish to customize the behavior of syncing the URL (for example, if you wish to\n   * defer a transition but maintain the current URL), call this method at configuration time.\n   * Then, at run time, call `$urlRouter.listen()` after you have configured your own\n   * `$locationChangeSuccess` event handler.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *\n   *   // Prevent $urlRouter from automatically intercepting URL changes;\n   *   // this allows you to configure custom behavior in between\n   *   // location changes and route synchronization:\n   *   $urlRouterProvider.deferIntercept();\n   *\n   * }).run(function ($rootScope, $urlRouter, UserService) {\n   *\n   *   $rootScope.$on('$locationChangeSuccess', function(e) {\n   *     // UserService is an example service for managing user state\n   *     if (UserService.isLoggedIn()) return;\n   *\n   *     // Prevent $urlRouter's default handler from firing\n   *     e.preventDefault();\n   *\n   *     UserService.handleLogin().then(function() {\n   *       // Once the user has logged in, sync the current URL\n   *       // to the router:\n   *       $urlRouter.sync();\n   *     });\n   *   });\n   *\n   *   // Configures $urlRouter's listener *after* your custom listener\n   *   $urlRouter.listen();\n   * });\n   * </pre>\n   *\n   * @param {boolean} defer Indicates whether to defer location change interception. Passing\n            no parameter is equivalent to `true`.\n   */\n  this.deferIntercept = function (defer) {\n    if (defer === undefined) defer = true;\n    interceptDeferred = defer;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouter\n   *\n   * @requires $location\n   * @requires $rootScope\n   * @requires $injector\n   * @requires $browser\n   *\n   * @description\n   *\n   */\n  this.$get = $get;\n  $get.$inject = ['$location', '$rootScope', '$injector', '$browser'];\n  function $get(   $location,   $rootScope,   $injector,   $browser) {\n\n    var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;\n\n    function appendBasePath(url, isHtml5, absolute) {\n      if (baseHref === '/') return url;\n      if (isHtml5) return baseHref.slice(0, -1) + url;\n      if (absolute) return baseHref.slice(1) + url;\n      return url;\n    }\n\n    // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\n    function update(evt) {\n      if (evt && evt.defaultPrevented) return;\n      var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;\n      lastPushedUrl = undefined;\n      if (ignoreUpdate) return true;\n\n      function check(rule) {\n        var handled = rule($injector, $location);\n\n        if (!handled) return false;\n        if (isString(handled)) $location.replace().url(handled);\n        return true;\n      }\n      var n = rules.length, i;\n\n      for (i = 0; i < n; i++) {\n        if (check(rules[i])) return;\n      }\n      // always check otherwise last to allow dynamic updates to the set of rules\n      if (otherwise) check(otherwise);\n    }\n\n    function listen() {\n      listener = listener || $rootScope.$on('$locationChangeSuccess', update);\n      return listener;\n    }\n\n    if (!interceptDeferred) listen();\n\n    return {\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#sync\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n       * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n       * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n       * with the transition by calling `$urlRouter.sync()`.\n       *\n       * @example\n       * <pre>\n       * angular.module('app', ['ui.router'])\n       *   .run(function($rootScope, $urlRouter) {\n       *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n       *       // Halt state change from even starting\n       *       evt.preventDefault();\n       *       // Perform custom logic\n       *       var meetsRequirement = ...\n       *       // Continue with the update and state transition if logic allows\n       *       if (meetsRequirement) $urlRouter.sync();\n       *     });\n       * });\n       * </pre>\n       */\n      sync: function() {\n        update();\n      },\n\n      listen: function() {\n        return listen();\n      },\n\n      update: function(read) {\n        if (read) {\n          location = $location.url();\n          return;\n        }\n        if ($location.url() === location) return;\n\n        $location.url(location);\n        $location.replace();\n      },\n\n      push: function(urlMatcher, params, options) {\n        $location.url(urlMatcher.format(params || {}));\n        lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;\n        if (options && options.replace) $location.replace();\n      },\n\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#href\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * A URL generation method that returns the compiled URL for a given\n       * {@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.\n       *\n       * @example\n       * <pre>\n       * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n       *   person: \"bob\"\n       * });\n       * // $bob == \"/about/bob\";\n       * </pre>\n       *\n       * @param {UrlMatcher} urlMatcher The `UrlMatcher` object which is used as the template of the URL to generate.\n       * @param {object=} params An object of parameter values to fill the matcher's required parameters.\n       * @param {object=} options Options object. The options are:\n       *\n       * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n       *\n       * @returns {string} Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n       */\n      href: function(urlMatcher, params, options) {\n        if (!urlMatcher.validates(params)) return null;\n\n        var isHtml5 = $locationProvider.html5Mode();\n        if (angular.isObject(isHtml5)) {\n          isHtml5 = isHtml5.enabled;\n        }\n        \n        var url = urlMatcher.format(params);\n        options = options || {};\n\n        if (!isHtml5 && url !== null) {\n          url = \"#\" + $locationProvider.hashPrefix() + url;\n        }\n        url = appendBasePath(url, isHtml5, options.absolute);\n\n        if (!options.absolute || !url) {\n          return url;\n        }\n\n        var slash = (!isHtml5 && url ? '/' : ''), port = $location.port();\n        port = (port === 80 || port === 443 ? '' : ':' + port);\n\n        return [$location.protocol(), '://', $location.host(), port, slash, url].join('');\n      }\n    };\n  }\n}\n\nangular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$stateProvider\n *\n * @requires ui.router.router.$urlRouterProvider\n * @requires ui.router.util.$urlMatcherFactoryProvider\n *\n * @description\n * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\n$StateProvider.$inject = ['$urlRouterProvider', '$urlMatcherFactoryProvider'];\nfunction $StateProvider(   $urlRouterProvider,   $urlMatcherFactory) {\n\n  var root, states = {}, $state, queue = {}, abstractKey = 'abstract';\n\n  // Builds state properties from definition passed to registerState()\n  var stateBuilder = {\n\n    // Derive parent state from a hierarchical name only if 'parent' is not explicitly defined.\n    // state.children = [];\n    // if (parent) parent.children.push(state);\n    parent: function(state) {\n      if (isDefined(state.parent) && state.parent) return findState(state.parent);\n      // regex matches any valid composite state name\n      // would match \"contact.list\" but not \"contacts\"\n      var compositeName = /^(.+)\\.[^.]+$/.exec(state.name);\n      return compositeName ? findState(compositeName[1]) : root;\n    },\n\n    // inherit 'data' from parent and override by own values (if any)\n    data: function(state) {\n      if (state.parent && state.parent.data) {\n        state.data = state.self.data = extend({}, state.parent.data, state.data);\n      }\n      return state.data;\n    },\n\n    // Build a URLMatcher if necessary, either via a relative or absolute URL\n    url: function(state) {\n      var url = state.url, config = { params: state.params || {} };\n\n      if (isString(url)) {\n        if (url.charAt(0) == '^') return $urlMatcherFactory.compile(url.substring(1), config);\n        return (state.parent.navigable || root).url.concat(url, config);\n      }\n\n      if (!url || $urlMatcherFactory.isMatcher(url)) return url;\n      throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n    },\n\n    // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n    navigable: function(state) {\n      return state.url ? state : (state.parent ? state.parent.navigable : null);\n    },\n\n    // Own parameters for this state. state.url.params is already built at this point. Create and add non-url params\n    ownParams: function(state) {\n      var params = state.url && state.url.params || new $$UMFP.ParamSet();\n      forEach(state.params || {}, function(config, id) {\n        if (!params[id]) params[id] = new $$UMFP.Param(id, null, config, \"config\");\n      });\n      return params;\n    },\n\n    // Derive parameters for this state and ensure they're a super-set of parent's parameters\n    params: function(state) {\n      return state.parent && state.parent.params ? extend(state.parent.params.$$new(), state.ownParams) : new $$UMFP.ParamSet();\n    },\n\n    // If there is no explicit multi-view configuration, make one up so we don't have\n    // to handle both cases in the view directive later. Note that having an explicit\n    // 'views' property will mean the default unnamed view properties are ignored. This\n    // is also a good time to resolve view names to absolute names, so everything is a\n    // straight lookup at link time.\n    views: function(state) {\n      var views = {};\n\n      forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {\n        if (name.indexOf('@') < 0) name += '@' + state.parent.name;\n        views[name] = view;\n      });\n      return views;\n    },\n\n    // Keep a full path from the root down to this state as this is needed for state activation.\n    path: function(state) {\n      return state.parent ? state.parent.path.concat(state) : []; // exclude root from path\n    },\n\n    // Speed up $state.contains() as it's used a lot\n    includes: function(state) {\n      var includes = state.parent ? extend({}, state.parent.includes) : {};\n      includes[state.name] = true;\n      return includes;\n    },\n\n    $delegates: {}\n  };\n\n  function isRelative(stateName) {\n    return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n  }\n\n  function findState(stateOrName, base) {\n    if (!stateOrName) return undefined;\n\n    var isStr = isString(stateOrName),\n        name  = isStr ? stateOrName : stateOrName.name,\n        path  = isRelative(name);\n\n    if (path) {\n      if (!base) throw new Error(\"No reference point given for path '\"  + name + \"'\");\n      base = findState(base);\n      \n      var rel = name.split(\".\"), i = 0, pathLength = rel.length, current = base;\n\n      for (; i < pathLength; i++) {\n        if (rel[i] === \"\" && i === 0) {\n          current = base;\n          continue;\n        }\n        if (rel[i] === \"^\") {\n          if (!current.parent) throw new Error(\"Path '\" + name + \"' not valid for state '\" + base.name + \"'\");\n          current = current.parent;\n          continue;\n        }\n        break;\n      }\n      rel = rel.slice(i).join(\".\");\n      name = current.name + (current.name && rel ? \".\" : \"\") + rel;\n    }\n    var state = states[name];\n\n    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n      return state;\n    }\n    return undefined;\n  }\n\n  function queueState(parentName, state) {\n    if (!queue[parentName]) {\n      queue[parentName] = [];\n    }\n    queue[parentName].push(state);\n  }\n\n  function flushQueuedChildren(parentName) {\n    var queued = queue[parentName] || [];\n    while(queued.length) {\n      registerState(queued.shift());\n    }\n  }\n\n  function registerState(state) {\n    // Wrap a new object around the state so we can store our private details easily.\n    state = inherit(state, {\n      self: state,\n      resolve: state.resolve || {},\n      toString: function() { return this.name; }\n    });\n\n    var name = state.name;\n    if (!isString(name) || name.indexOf('@') >= 0) throw new Error(\"State must have a valid name\");\n    if (states.hasOwnProperty(name)) throw new Error(\"State '\" + name + \"'' is already defined\");\n\n    // Get parent name\n    var parentName = (name.indexOf('.') !== -1) ? name.substring(0, name.lastIndexOf('.'))\n        : (isString(state.parent)) ? state.parent\n        : (isObject(state.parent) && isString(state.parent.name)) ? state.parent.name\n        : '';\n\n    // If parent is not registered yet, add state to queue and register later\n    if (parentName && !states[parentName]) {\n      return queueState(parentName, state.self);\n    }\n\n    for (var key in stateBuilder) {\n      if (isFunction(stateBuilder[key])) state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);\n    }\n    states[name] = state;\n\n    // Register the state in the global state list and with $urlRouter if necessary.\n    if (!state[abstractKey] && state.url) {\n      $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\n        if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {\n          $state.transitionTo(state, $match, { inherit: true, location: false });\n        }\n      }]);\n    }\n\n    // Register any queued children\n    flushQueuedChildren(name);\n\n    return state;\n  }\n\n  // Checks text to see if it looks like a glob.\n  function isGlob (text) {\n    return text.indexOf('*') > -1;\n  }\n\n  // Returns true if glob matches current $state name.\n  function doesStateMatchGlob (glob) {\n    var globSegments = glob.split('.'),\n        segments = $state.$current.name.split('.');\n\n    //match greedy starts\n    if (globSegments[0] === '**') {\n       segments = segments.slice(indexOf(segments, globSegments[1]));\n       segments.unshift('**');\n    }\n    //match greedy ends\n    if (globSegments[globSegments.length - 1] === '**') {\n       segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);\n       segments.push('**');\n    }\n\n    if (globSegments.length != segments.length) {\n      return false;\n    }\n\n    //match single stars\n    for (var i = 0, l = globSegments.length; i < l; i++) {\n      if (globSegments[i] === '*') {\n        segments[i] = '*';\n      }\n    }\n\n    return segments.join('') === globSegments.join('');\n  }\n\n\n  // Implicit root state that is always active\n  root = registerState({\n    name: '',\n    url: '^',\n    views: null,\n    'abstract': true\n  });\n  root.navigable = null;\n\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#decorator\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Allows you to extend (carefully) or override (at your own peril) the \n   * `stateBuilder` object used internally by `$stateProvider`. This can be used \n   * to add custom functionality to ui-router, for example inferring templateUrl \n   * based on the state name.\n   *\n   * When passing only a name, it returns the current (original or decorated) builder\n   * function that matches `name`.\n   *\n   * The builder functions that can be decorated are listed below. Though not all\n   * necessarily have a good use case for decoration, that is up to you to decide.\n   *\n   * In addition, users can attach custom decorators, which will generate new \n   * properties within the state's internal definition. There is currently no clear \n   * use-case for this beyond accessing internal states (i.e. $state.$current), \n   * however, expect this to become increasingly relevant as we introduce additional \n   * meta-programming features.\n   *\n   * **Warning**: Decorators should not be interdependent because the order of \n   * execution of the builder functions in non-deterministic. Builder functions \n   * should only be dependent on the state definition object and super function.\n   *\n   *\n   * Existing builder functions and current return values:\n   *\n   * - **parent** `{object}` - returns the parent state object.\n   * - **data** `{object}` - returns state data, including any inherited data that is not\n   *   overridden by own values (if any).\n   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n   *   or `null`.\n   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \n   *   navigable).\n   * - **params** `{object}` - returns an array of state params that are ensured to \n   *   be a super-set of parent's params.\n   * - **views** `{object}` - returns a views object where each key is an absolute view \n   *   name (i.e. \"viewName@stateName\") and each value is the config object \n   *   (template, controller) for the view. Even when you don't use the views object \n   *   explicitly on a state config, one is still created for you internally.\n   *   So by decorating this builder function you have access to decorating template \n   *   and controller properties.\n   * - **ownParams** `{object}` - returns an array of params that belong to the state, \n   *   not including any params defined by ancestor states.\n   * - **path** `{string}` - returns the full path from the root down to this state. \n   *   Needed for state activation.\n   * - **includes** `{object}` - returns an object that includes every state that \n   *   would pass a `$state.includes()` test.\n   *\n   * @example\n   * <pre>\n   * // Override the internal 'views' builder with a function that takes the state\n   * // definition, and a reference to the internal function being overridden:\n   * $stateProvider.decorator('views', function (state, parent) {\n   *   var result = {},\n   *       views = parent(state);\n   *\n   *   angular.forEach(views, function (config, name) {\n   *     var autoName = (state.name + '.' + name).replace('.', '/');\n   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n   *     result[name] = config;\n   *   });\n   *   return result;\n   * });\n   *\n   * $stateProvider.state('home', {\n   *   views: {\n   *     'contact.list': { controller: 'ListController' },\n   *     'contact.item': { controller: 'ItemController' }\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * $state.go('home');\n   * // Auto-populates list and item views with /partials/home/contact/list.html,\n   * // and /partials/home/contact/item.html, respectively.\n   * </pre>\n   *\n   * @param {string} name The name of the builder function to decorate. \n   * @param {object} func A function that is responsible for decorating the original \n   * builder function. The function receives two parameters:\n   *\n   *   - `{object}` - state - The state config object.\n   *   - `{object}` - super - The original builder function.\n   *\n   * @return {object} $stateProvider - $stateProvider instance\n   */\n  this.decorator = decorator;\n  function decorator(name, func) {\n    /*jshint validthis: true */\n    if (isString(name) && !isDefined(func)) {\n      return stateBuilder[name];\n    }\n    if (!isFunction(func) || !isString(name)) {\n      return this;\n    }\n    if (stateBuilder[name] && !stateBuilder.$delegates[name]) {\n      stateBuilder.$delegates[name] = stateBuilder[name];\n    }\n    stateBuilder[name] = func;\n    return this;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#state\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Registers a state configuration under a given state name. The stateConfig object\n   * has the following acceptable properties.\n   *\n   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\n   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\n   * @param {object} stateConfig State configuration object.\n   * @param {string|function=} stateConfig.template\n   * <a id='template'></a>\n   *   html template as a string or a function that returns\n   *   an html template as a string which should be used by the uiView directives. This property \n   *   takes precedence over templateUrl.\n   *   \n   *   If `template` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n   *     applying the current state\n   *\n   * <pre>template:\n   *   \"<h1>inline template definition</h1>\" +\n   *   \"<div ui-view></div>\"</pre>\n   * <pre>template: function(params) {\n   *       return \"<h1>generated template</h1>\"; }</pre>\n   * </div>\n   *\n   * @param {string|function=} stateConfig.templateUrl\n   * <a id='templateUrl'></a>\n   *\n   *   path or function that returns a path to an html\n   *   template that should be used by uiView.\n   *   \n   *   If `templateUrl` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by \n   *     applying the current state\n   *\n   * <pre>templateUrl: \"home.html\"</pre>\n   * <pre>templateUrl: function(params) {\n   *     return myTemplates[params.pageId]; }</pre>\n   *\n   * @param {function=} stateConfig.templateProvider\n   * <a id='templateProvider'></a>\n   *    Provider function that returns HTML content string.\n   * <pre> templateProvider:\n   *       function(MyTemplateService, params) {\n   *         return MyTemplateService.getTemplate(params.pageId);\n   *       }</pre>\n   *\n   * @param {string|function=} stateConfig.controller\n   * <a id='controller'></a>\n   *\n   *  Controller fn that should be associated with newly\n   *   related scope or the name of a registered controller if passed as a string.\n   *   Optionally, the ControllerAs may be declared here.\n   * <pre>controller: \"MyRegisteredController\"</pre>\n   * <pre>controller:\n   *     \"MyRegisteredController as fooCtrl\"}</pre>\n   * <pre>controller: function($scope, MyService) {\n   *     $scope.data = MyService.getData(); }</pre>\n   *\n   * @param {function=} stateConfig.controllerProvider\n   * <a id='controllerProvider'></a>\n   *\n   * Injectable provider function that returns the actual controller or string.\n   * <pre>controllerProvider:\n   *   function(MyResolveData) {\n   *     if (MyResolveData.foo)\n   *       return \"FooCtrl\"\n   *     else if (MyResolveData.bar)\n   *       return \"BarCtrl\";\n   *     else return function($scope) {\n   *       $scope.baz = \"Qux\";\n   *     }\n   *   }</pre>\n   *\n   * @param {string=} stateConfig.controllerAs\n   * <a id='controllerAs'></a>\n   * \n   * A controller alias name. If present the controller will be\n   *   published to scope under the controllerAs name.\n   * <pre>controllerAs: \"myCtrl\"</pre>\n   *\n   * @param {object=} stateConfig.resolve\n   * <a id='resolve'></a>\n   *\n   * An optional map&lt;string, function&gt; of dependencies which\n   *   should be injected into the controller. If any of these dependencies are promises, \n   *   the router will wait for them all to be resolved before the controller is instantiated.\n   *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired\n   *   and the values of the resolved promises are injected into any controllers that reference them.\n   *   If any  of the promises are rejected the $stateChangeError event is fired.\n   *\n   *   The map object is:\n   *   \n   *   - key - {string}: name of dependency to be injected into controller\n   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, \n   *     it is injected and return value it treated as dependency. If result is a promise, it is \n   *     resolved before its value is injected into controller.\n   *\n   * <pre>resolve: {\n   *     myResolve1:\n   *       function($http, $stateParams) {\n   *         return $http.get(\"/api/foos/\"+stateParams.fooID);\n   *       }\n   *     }</pre>\n   *\n   * @param {string=} stateConfig.url\n   * <a id='url'></a>\n   *\n   *   A url fragment with optional parameters. When a state is navigated or\n   *   transitioned to, the `$stateParams` service will be populated with any \n   *   parameters that were passed.\n   *\n   * examples:\n   * <pre>url: \"/home\"\n   * url: \"/users/:userid\"\n   * url: \"/books/{bookid:[a-zA-Z_-]}\"\n   * url: \"/books/{categoryid:int}\"\n   * url: \"/books/{publishername:string}/{categoryid:int}\"\n   * url: \"/messages?before&after\"\n   * url: \"/messages?{before:date}&{after:date}\"</pre>\n   * url: \"/messages/:mailboxid?{before:date}&{after:date}\"\n   *\n   * @param {object=} stateConfig.views\n   * <a id='views'></a>\n   * an optional map&lt;string, object&gt; which defined multiple views, or targets views\n   * manually/explicitly.\n   *\n   * Examples:\n   *\n   * Targets three named `ui-view`s in the parent state's template\n   * <pre>views: {\n   *     header: {\n   *       controller: \"headerCtrl\",\n   *       templateUrl: \"header.html\"\n   *     }, body: {\n   *       controller: \"bodyCtrl\",\n   *       templateUrl: \"body.html\"\n   *     }, footer: {\n   *       controller: \"footCtrl\",\n   *       templateUrl: \"footer.html\"\n   *     }\n   *   }</pre>\n   *\n   * Targets named `ui-view=\"header\"` from grandparent state 'top''s template, and named `ui-view=\"body\" from parent state's template.\n   * <pre>views: {\n   *     'header@top': {\n   *       controller: \"msgHeaderCtrl\",\n   *       templateUrl: \"msgHeader.html\"\n   *     }, 'body': {\n   *       controller: \"messagesCtrl\",\n   *       templateUrl: \"messages.html\"\n   *     }\n   *   }</pre>\n   *\n   * @param {boolean=} [stateConfig.abstract=false]\n   * <a id='abstract'></a>\n   * An abstract state will never be directly activated,\n   *   but can provide inherited properties to its common children states.\n   * <pre>abstract: true</pre>\n   *\n   * @param {function=} stateConfig.onEnter\n   * <a id='onEnter'></a>\n   *\n   * Callback function for when a state is entered. Good way\n   *   to trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explictly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onEnter: function(MyService, $stateParams) {\n   *     MyService.foo($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {function=} stateConfig.onExit\n   * <a id='onExit'></a>\n   *\n   * Callback function for when a state is exited. Good way to\n   *   trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explictly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onExit: function(MyService, $stateParams) {\n   *     MyService.cleanup($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {boolean=} [stateConfig.reloadOnSearch=true]\n   * <a id='reloadOnSearch'></a>\n   *\n   * If `false`, will not retrigger the same state\n   *   just because a search/query parameter has changed (via $location.search() or $location.hash()). \n   *   Useful for when you'd like to modify $location.search() without triggering a reload.\n   * <pre>reloadOnSearch: false</pre>\n   *\n   * @param {object=} stateConfig.data\n   * <a id='data'></a>\n   *\n   * Arbitrary data object, useful for custom configuration.  The parent state's `data` is\n   *   prototypally inherited.  In other words, adding a data property to a state adds it to\n   *   the entire subtree via prototypal inheritance.\n   *\n   * <pre>data: {\n   *     requiredRole: 'foo'\n   * } </pre>\n   *\n   * @param {object=} stateConfig.params\n   * <a id='params'></a>\n   *\n   * A map which optionally configures parameters declared in the `url`, or\n   *   defines additional non-url parameters.  For each parameter being\n   *   configured, add a configuration object keyed to the name of the parameter.\n   *\n   *   Each parameter configuration object may contain the following properties:\n   *\n   *   - ** value ** - {object|function=}: specifies the default value for this\n   *     parameter.  This implicitly sets this parameter as optional.\n   *\n   *     When UI-Router routes to a state and no value is\n   *     specified for this parameter in the URL or transition, the\n   *     default value will be used instead.  If `value` is a function,\n   *     it will be injected and invoked, and the return value used.\n   *\n   *     *Note*: `undefined` is treated as \"no default value\" while `null`\n   *     is treated as \"the default value is `null`\".\n   *\n   *     *Shorthand*: If you only need to configure the default value of the\n   *     parameter, you may use a shorthand syntax.   In the **`params`**\n   *     map, instead mapping the param name to a full parameter configuration\n   *     object, simply set map it to the default parameter value, e.g.:\n   *\n   * <pre>// define a parameter's default value\n   * params: {\n   *     param1: { value: \"defaultValue\" }\n   * }\n   * // shorthand default values\n   * params: {\n   *     param1: \"defaultValue\",\n   *     param2: \"param2Default\"\n   * }</pre>\n   *\n   *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be\n   *     treated as an array of values.  If you specified a Type, the value will be\n   *     treated as an array of the specified Type.  Note: query parameter values\n   *     default to a special `\"auto\"` mode.\n   *\n   *     For query parameters in `\"auto\"` mode, if multiple  values for a single parameter\n   *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values\n   *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if\n   *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single\n   *     value (e.g.: `{ foo: '1' }`).\n   *\n   * <pre>params: {\n   *     param1: { array: true }\n   * }</pre>\n   *\n   *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when\n   *     the current parameter value is the same as the default value. If `squash` is not set, it uses the\n   *     configured default squash policy.\n   *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})\n   *\n   *   There are three squash settings:\n   *\n   *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL\n   *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed\n   *       by slashes in the state's `url` declaration, then one of those slashes are omitted.\n   *       This can allow for cleaner looking URLs.\n   *     - `\"<arbitrary string>\"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.\n   *\n   * <pre>params: {\n   *     param1: {\n   *       value: \"defaultId\",\n   *       squash: true\n   * } }\n   * // squash \"defaultValue\" to \"~\"\n   * params: {\n   *     param1: {\n   *       value: \"defaultValue\",\n   *       squash: \"~\"\n   * } }\n   * </pre>\n   *\n   *\n   * @example\n   * <pre>\n   * // Some state name examples\n   *\n   * // stateName can be a single top-level name (must be unique).\n   * $stateProvider.state(\"home\", {});\n   *\n   * // Or it can be a nested state name. This state is a child of the\n   * // above \"home\" state.\n   * $stateProvider.state(\"home.newest\", {});\n   *\n   * // Nest states as deeply as needed.\n   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n   *\n   * // state() returns $stateProvider, so you can chain state declarations.\n   * $stateProvider\n   *   .state(\"home\", {})\n   *   .state(\"about\", {})\n   *   .state(\"contacts\", {});\n   * </pre>\n   *\n   */\n  this.state = state;\n  function state(name, definition) {\n    /*jshint validthis: true */\n    if (isObject(name)) definition = name;\n    else definition.name = name;\n    registerState(definition);\n    return this;\n  }\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$state\n   *\n   * @requires $rootScope\n   * @requires $q\n   * @requires ui.router.state.$view\n   * @requires $injector\n   * @requires ui.router.util.$resolve\n   * @requires ui.router.state.$stateParams\n   * @requires ui.router.router.$urlRouter\n   *\n   * @property {object} params A param object, e.g. {sectionId: section.id)}, that \n   * you'd like to test against the current active state.\n   * @property {object} current A reference to the state's config object. However \n   * you passed it in. Useful for accessing custom data.\n   * @property {object} transition Currently pending transition. A promise that'll \n   * resolve or reject.\n   *\n   * @description\n   * `$state` service is responsible for representing states as well as transitioning\n   * between them. It also provides interfaces to ask for current state or even states\n   * you're coming from.\n   */\n  this.$get = $get;\n  $get.$inject = ['$rootScope', '$q', '$view', '$injector', '$resolve', '$stateParams', '$urlRouter', '$location', '$urlMatcherFactory'];\n  function $get(   $rootScope,   $q,   $view,   $injector,   $resolve,   $stateParams,   $urlRouter,   $location,   $urlMatcherFactory) {\n\n    var TransitionSuperseded = $q.reject(new Error('transition superseded'));\n    var TransitionPrevented = $q.reject(new Error('transition prevented'));\n    var TransitionAborted = $q.reject(new Error('transition aborted'));\n    var TransitionFailed = $q.reject(new Error('transition failed'));\n\n    // Handles the case where a state which is the target of a transition is not found, and the user\n    // can optionally retry or defer the transition\n    function handleRedirect(redirect, state, params, options) {\n      /**\n       * @ngdoc event\n       * @name ui.router.state.$state#$stateNotFound\n       * @eventOf ui.router.state.$state\n       * @eventType broadcast on root scope\n       * @description\n       * Fired when a requested state **cannot be found** using the provided state name during transition.\n       * The event is broadcast allowing any handlers a single chance to deal with the error (usually by\n       * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\n       * you can see its three properties in the example. You can use `event.preventDefault()` to abort the\n       * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.\n       *\n       * @param {Object} event Event object.\n       * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.\n       * @param {State} fromState Current state object.\n       * @param {Object} fromParams Current state params.\n       *\n       * @example\n       *\n       * <pre>\n       * // somewhere, assume lazy.state has not been defined\n       * $state.go(\"lazy.state\", {a:1, b:2}, {inherit:false});\n       *\n       * // somewhere else\n       * $scope.$on('$stateNotFound',\n       * function(event, unfoundState, fromState, fromParams){\n       *     console.log(unfoundState.to); // \"lazy.state\"\n       *     console.log(unfoundState.toParams); // {a:1, b:2}\n       *     console.log(unfoundState.options); // {inherit:false} + default options\n       * })\n       * </pre>\n       */\n      var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);\n\n      if (evt.defaultPrevented) {\n        $urlRouter.update();\n        return TransitionAborted;\n      }\n\n      if (!evt.retry) {\n        return null;\n      }\n\n      // Allow the handler to return a promise to defer state lookup retry\n      if (options.$retry) {\n        $urlRouter.update();\n        return TransitionFailed;\n      }\n      var retryTransition = $state.transition = $q.when(evt.retry);\n\n      retryTransition.then(function() {\n        if (retryTransition !== $state.transition) return TransitionSuperseded;\n        redirect.options.$retry = true;\n        return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);\n      }, function() {\n        return TransitionAborted;\n      });\n      $urlRouter.update();\n\n      return retryTransition;\n    }\n\n    root.locals = { resolve: null, globals: { $stateParams: {} } };\n\n    $state = {\n      params: {},\n      current: root.self,\n      $current: root,\n      transition: null\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#reload\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method that force reloads the current state. All resolves are re-resolved, events are not re-fired, \n     * and controllers reinstantiated (bug with controllers reinstantiating right now, fixing soon).\n     *\n     * @example\n     * <pre>\n     * var app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * </pre>\n     *\n     * `reload()` is just an alias for:\n     * <pre>\n     * $state.transitionTo($state.current, $stateParams, { \n     *   reload: true, inherit: false, notify: true\n     * });\n     * </pre>\n     *\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.reload = function reload() {\n      return $state.transitionTo($state.current, $stateParams, { reload: true, inherit: false, notify: true });\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#go\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Convenience method for transitioning to a new state. `$state.go` calls \n     * `$state.transitionTo` internally but automatically sets options to \n     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. \n     * This allows you to easily use an absolute or relative to path and specify \n     * only the parameters you'd like to update (while letting unspecified parameters \n     * inherit from the currently active ancestor states).\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * </pre>\n     * <img src='../ngdoc_assets/StateGoExamples.png'/>\n     *\n     * @param {string} to Absolute state name or relative state path. Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to a parent state\n     * - `$state.go('^.sibling')` - will go to a sibling state\n     * - `$state.go('.child.grandchild')` - will go to grandchild state\n     *\n     * @param {object=} params A map of the parameters that will be sent to the state, \n     * will populate $stateParams. Any parameters that are not specified will be inherited from currently \n     * defined parameters. This allows, for example, going to a sibling state that shares parameters\n     * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\n     * transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n     * will get you all current parameters, etc.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params \n     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n     *    use this when you want to force a reload when *everything* is the same, including search params.\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     *\n     * Possible success values:\n     *\n     * - $state.current\n     *\n     * <br/>Possible rejection values:\n     *\n     * - 'transition superseded' - when a newer transition has been started after this one\n     * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\n     * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\n     *   when a `$stateNotFound` `event.retry` promise errors.\n     * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.\n     * - *resolve error* - when an error has occurred with a `resolve`\n     *\n     */\n    $state.go = function go(to, params, options) {\n      return $state.transitionTo(to, params, extend({ inherit: true, relative: $state.$current }, options));\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#transitionTo\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\n     * uses `transitionTo` internally. `$state.go` is recommended in most situations.\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * </pre>\n     *\n     * @param {string} to State name.\n     * @param {object=} toParams A map of the parameters that will be sent to the state,\n     * will populate $stateParams.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params \n     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n     *    use this when you want to force a reload when *everything* is the same, including search params.\n     *\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.transitionTo = function transitionTo(to, toParams, options) {\n      toParams = toParams || {};\n      options = extend({\n        location: true, inherit: false, relative: null, notify: true, reload: false, $retry: false\n      }, options || {});\n\n      var from = $state.$current, fromParams = $state.params, fromPath = from.path;\n      var evt, toState = findState(to, options.relative);\n\n      if (!isDefined(toState)) {\n        var redirect = { to: to, toParams: toParams, options: options };\n        var redirectResult = handleRedirect(redirect, from.self, fromParams, options);\n\n        if (redirectResult) {\n          return redirectResult;\n        }\n\n        // Always retry once if the $stateNotFound was not prevented\n        // (handles either redirect changed or state lazy-definition)\n        to = redirect.to;\n        toParams = redirect.toParams;\n        options = redirect.options;\n        toState = findState(to, options.relative);\n\n        if (!isDefined(toState)) {\n          if (!options.relative) throw new Error(\"No such state '\" + to + \"'\");\n          throw new Error(\"Could not resolve '\" + to + \"' from state '\" + options.relative + \"'\");\n        }\n      }\n      if (toState[abstractKey]) throw new Error(\"Cannot transition to abstract state '\" + to + \"'\");\n      if (options.inherit) toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);\n      if (!toState.params.$$validates(toParams)) return TransitionFailed;\n\n      toParams = toState.params.$$values(toParams);\n      to = toState;\n\n      var toPath = to.path;\n\n      // Starting from the root of the path, keep all levels that haven't changed\n      var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];\n\n      if (!options.reload) {\n        while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {\n          locals = toLocals[keep] = state.locals;\n          keep++;\n          state = toPath[keep];\n        }\n      }\n\n      // If we're going to the same state and all locals are kept, we've got nothing to do.\n      // But clear 'transition', as we still want to cancel any other pending transitions.\n      // TODO: We may not want to bump 'transition' if we're called from a location change\n      // that we've initiated ourselves, because we might accidentally abort a legitimate\n      // transition initiated from code?\n      if (shouldTriggerReload(to, from, locals, options)) {\n        if (to.self.reloadOnSearch !== false) $urlRouter.update();\n        $state.transition = null;\n        return $q.when($state.current);\n      }\n\n      // Filter parameters before we pass them to event handlers etc.\n      toParams = filterByKeys(to.params.$$keys(), toParams || {});\n\n      // Broadcast start event and cancel the transition if requested\n      if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeStart\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when the state transition **begins**. You can use `event.preventDefault()`\n         * to prevent the transition from happening and then the transition promise will be\n         * rejected with a `'transition prevented'` value.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         *\n         * @example\n         *\n         * <pre>\n         * $rootScope.$on('$stateChangeStart',\n         * function(event, toState, toParams, fromState, fromParams){\n         *     event.preventDefault();\n         *     // transitionTo() promise will be rejected with\n         *     // a 'transition prevented' error\n         * })\n         * </pre>\n         */\n        if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams).defaultPrevented) {\n          $urlRouter.update();\n          return TransitionPrevented;\n        }\n      }\n\n      // Resolve locals for the remaining states, but don't update any global state just\n      // yet -- if anything fails to resolve the current state needs to remain untouched.\n      // We also set up an inheritance chain for the locals here. This allows the view directive\n      // to quickly look up the correct definition for each view in the current state. Even\n      // though we create the locals object itself outside resolveState(), it is initially\n      // empty and gets filled asynchronously. We need to keep track of the promise for the\n      // (fully resolved) current locals, and pass this down the chain.\n      var resolved = $q.when(locals);\n\n      for (var l = keep; l < toPath.length; l++, state = toPath[l]) {\n        locals = toLocals[l] = inherit(locals);\n        resolved = resolveState(state, toParams, state === to, resolved, locals, options);\n      }\n\n      // Once everything is resolved, we are ready to perform the actual transition\n      // and return a promise for the new state. We also keep track of what the\n      // current promise is, so that we can detect overlapping transitions and\n      // keep only the outcome of the last transition.\n      var transition = $state.transition = resolved.then(function () {\n        var l, entering, exiting;\n\n        if ($state.transition !== transition) return TransitionSuperseded;\n\n        // Exit 'from' states not kept\n        for (l = fromPath.length - 1; l >= keep; l--) {\n          exiting = fromPath[l];\n          if (exiting.self.onExit) {\n            $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);\n          }\n          exiting.locals = null;\n        }\n\n        // Enter 'to' states not kept\n        for (l = keep; l < toPath.length; l++) {\n          entering = toPath[l];\n          entering.locals = toLocals[l];\n          if (entering.self.onEnter) {\n            $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);\n          }\n        }\n\n        // Run it again, to catch any transitions in callbacks\n        if ($state.transition !== transition) return TransitionSuperseded;\n\n        // Update globals in $state\n        $state.$current = to;\n        $state.current = to.self;\n        $state.params = toParams;\n        copy($state.params, $stateParams);\n        $state.transition = null;\n\n        if (options.location && to.navigable) {\n          $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {\n            $$avoidResync: true, replace: options.location === 'replace'\n          });\n        }\n\n        if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeSuccess\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired once the state transition is **complete**.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         */\n          $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);\n        }\n        $urlRouter.update(true);\n\n        return $state.current;\n      }, function (error) {\n        if ($state.transition !== transition) return TransitionSuperseded;\n\n        $state.transition = null;\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeError\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when an **error occurs** during transition. It's important to note that if you\n         * have any errors in your resolve functions (javascript errors, non-existent services, etc)\n         * they will not throw traditionally. You must listen for this $stateChangeError event to\n         * catch **ALL** errors.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         * @param {Error} error The resolve error object.\n         */\n        evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);\n\n        if (!evt.defaultPrevented) {\n            $urlRouter.update();\n        }\n\n        return $q.reject(error);\n      });\n\n      return transition;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#is\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Similar to {@link ui.router.state.$state#methods_includes $state.includes},\n     * but only checks for the full state name. If params is supplied then it will be\n     * tested for strict equality against the current active params object, so all params\n     * must match with none missing and no extras.\n     *\n     * @example\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     * test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it is the state.\n     */\n    $state.is = function is(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) { return undefined; }\n      if ($state.$current !== state) { return false; }\n      return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#includes\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * @example\n     * Partial and relative names\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     *\n     * // Using relative names (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\n     * </pre>\n     *\n     * Basic globbing patterns\n     * <pre>\n     * $state.$current.name = 'contacts.details.item.url';\n     *\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * </pre>\n     *\n     * @param {string} stateOrName A partial name, relative name, or glob pattern\n     * to be searched for within the current state name.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`,\n     * that you'd like to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\n     * .includes will test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    $state.includes = function includes(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      if (isString(stateOrName) && isGlob(stateOrName)) {\n        if (!doesStateMatchGlob(stateOrName)) {\n          return false;\n        }\n        stateOrName = $state.$current.name;\n      }\n\n      var state = findState(stateOrName, options.relative);\n      if (!isDefined(state)) { return undefined; }\n      if (!isDefined($state.$current.includes[state.name])) { return false; }\n      return params ? equalForKeys(state.params.$$values(params), $stateParams, objectKeys(params)) : true;\n    };\n\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#href\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A url generation method that returns the compiled url for the given state populated with the given params.\n     *\n     * @example\n     * <pre>\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.\n     * @param {object=} params An object of parameter values to fill the state's required parameters.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n     *    ancestor with a valid url).\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     * \n     * @returns {string} compiled state url\n     */\n    $state.href = function href(stateOrName, params, options) {\n      options = extend({\n        lossy:    true,\n        inherit:  true,\n        absolute: false,\n        relative: $state.$current\n      }, options || {});\n\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) return null;\n      if (options.inherit) params = inheritParams($stateParams, params || {}, $state.$current, state);\n      \n      var nav = (state && options.lossy) ? state.navigable : state;\n\n      if (!nav || nav.url === undefined || nav.url === null) {\n        return null;\n      }\n      return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys(), params || {}), {\n        absolute: options.absolute\n      });\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#get\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Returns the state configuration object for any specific state or all states.\n     *\n     * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for\n     * the requested state. If not provided, returns an array of ALL state configs.\n     * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.\n     * @returns {Object|Array} State configuration object or array of all objects.\n     */\n    $state.get = function (stateOrName, context) {\n      if (arguments.length === 0) return map(objectKeys(states), function(name) { return states[name].self; });\n      var state = findState(stateOrName, context || $state.$current);\n      return (state && state.self) ? state.self : null;\n    };\n\n    function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {\n      // Make a restricted $stateParams with only the parameters that apply to this state if\n      // necessary. In addition to being available to the controller and onEnter/onExit callbacks,\n      // we also need $stateParams to be available for any $injector calls we make during the\n      // dependency resolution process.\n      var $stateParams = (paramsAreFiltered) ? params : filterByKeys(state.params.$$keys(), params);\n      var locals = { $stateParams: $stateParams };\n\n      // Resolve 'global' dependencies for the state, i.e. those not specific to a view.\n      // We're also including $stateParams in this; that way the parameters are restricted\n      // to the set that should be visible to the state, and are independent of when we update\n      // the global $state and $stateParams values.\n      dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);\n      var promises = [dst.resolve.then(function (globals) {\n        dst.globals = globals;\n      })];\n      if (inherited) promises.push(inherited);\n\n      // Resolve template and dependencies for all views.\n      forEach(state.views, function (view, name) {\n        var injectables = (view.resolve && view.resolve !== state.resolve ? view.resolve : {});\n        injectables.$template = [ function () {\n          return $view.load(name, { view: view, locals: locals, params: $stateParams, notify: options.notify }) || '';\n        }];\n\n        promises.push($resolve.resolve(injectables, locals, dst.resolve, state).then(function (result) {\n          // References to the controller (only instantiated at link time)\n          if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {\n            var injectLocals = angular.extend({}, injectables, locals);\n            result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);\n          } else {\n            result.$$controller = view.controller;\n          }\n          // Provide access to the state itself for internal use\n          result.$$state = state;\n          result.$$controllerAs = view.controllerAs;\n          dst[name] = result;\n        }));\n      });\n\n      // Wait for all the promises and then return the activation object\n      return $q.all(promises).then(function (values) {\n        return dst;\n      });\n    }\n\n    return $state;\n  }\n\n  function shouldTriggerReload(to, from, locals, options) {\n    if (to === from && ((locals === from.locals && !options.reload) || (to.self.reloadOnSearch === false))) {\n      return true;\n    }\n  }\n}\n\nangular.module('ui.router.state')\n  .value('$stateParams', {})\n  .provider('$state', $StateProvider);\n\n\n$ViewProvider.$inject = [];\nfunction $ViewProvider() {\n\n  this.$get = $get;\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$view\n   *\n   * @requires ui.router.util.$templateFactory\n   * @requires $rootScope\n   *\n   * @description\n   *\n   */\n  $get.$inject = ['$rootScope', '$templateFactory'];\n  function $get(   $rootScope,   $templateFactory) {\n    return {\n      // $view.load('full.viewName', { template: ..., controller: ..., resolve: ..., async: false, params: ... })\n      /**\n       * @ngdoc function\n       * @name ui.router.state.$view#load\n       * @methodOf ui.router.state.$view\n       *\n       * @description\n       *\n       * @param {string} name name\n       * @param {object} options option object.\n       */\n      load: function load(name, options) {\n        var result, defaults = {\n          template: null, controller: null, view: null, locals: null, notify: true, async: true, params: {}\n        };\n        options = extend(defaults, options);\n\n        if (options.view) {\n          result = $templateFactory.fromConfig(options.view, options.params, options.locals);\n        }\n        if (result && options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$viewContentLoading\n         * @eventOf ui.router.state.$view\n         * @eventType broadcast on root scope\n         * @description\n         *\n         * Fired once the view **begins loading**, *before* the DOM is rendered.\n         *\n         * @param {Object} event Event object.\n         * @param {Object} viewConfig The view config properties (template, controller, etc).\n         *\n         * @example\n         *\n         * <pre>\n         * $scope.$on('$viewContentLoading',\n         * function(event, viewConfig){\n         *     // Access to all the view config properties.\n         *     // and one special property 'targetView'\n         *     // viewConfig.targetView\n         * });\n         * </pre>\n         */\n          $rootScope.$broadcast('$viewContentLoading', options);\n        }\n        return result;\n      }\n    };\n  }\n}\n\nangular.module('ui.router.state').provider('$view', $ViewProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$uiViewScrollProvider\n *\n * @description\n * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.\n */\nfunction $ViewScrollProvider() {\n\n  var useAnchorScroll = false;\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll\n   * @methodOf ui.router.state.$uiViewScrollProvider\n   *\n   * @description\n   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\n   * scrolling based on the url anchor.\n   */\n  this.useAnchorScroll = function () {\n    useAnchorScroll = true;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$uiViewScroll\n   *\n   * @requires $anchorScroll\n   * @requires $timeout\n   *\n   * @description\n   * When called with a jqLite element, it scrolls the element into view (after a\n   * `$timeout` so the DOM has time to refresh).\n   *\n   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.\n   */\n  this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\n    if (useAnchorScroll) {\n      return $anchorScroll;\n    }\n\n    return function ($element) {\n      $timeout(function () {\n        $element[0].scrollIntoView();\n      }, 0, false);\n    };\n  }];\n}\n\nangular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-view\n *\n * @requires ui.router.state.$state\n * @requires $compile\n * @requires $controller\n * @requires $injector\n * @requires ui.router.state.$uiViewScroll\n * @requires $document\n *\n * @restrict ECA\n *\n * @description\n * The ui-view directive tells $state where to place your templates.\n *\n * @param {string=} name A view name. The name should be unique amongst the other views in the\n * same state. You can have views of the same name that live in different states.\n *\n * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window\n * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll\n * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you\n * scroll ui-view elements into view when they are populated during a state activation.\n *\n * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\n * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*\n *\n * @param {string=} onload Expression to evaluate whenever the view updates.\n * \n * @example\n * A view can be unnamed or named. \n * <pre>\n * <!-- Unnamed -->\n * <div ui-view></div> \n * \n * <!-- Named -->\n * <div ui-view=\"viewName\"></div>\n * </pre>\n *\n * You can only have one unnamed view within any template (or root html). If you are only using a \n * single view and it is unnamed then you can populate it like so:\n * <pre>\n * <div ui-view></div> \n * $stateProvider.state(\"home\", {\n *   template: \"<h1>HELLO!</h1>\"\n * })\n * </pre>\n * \n * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#views `views`}\n * config property, by name, in this case an empty name:\n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n * \n * But typically you'll only use the views property if you name your view or have more than one view \n * in the same template. There's not really a compelling reason to name a view if its the only one, \n * but you could if you wanted, like so:\n * <pre>\n * <div ui-view=\"main\"></div>\n * </pre> \n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"main\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n * \n * Really though, you'll use views to set up multiple views:\n * <pre>\n * <div ui-view></div>\n * <div ui-view=\"chart\"></div> \n * <div ui-view=\"data\"></div> \n * </pre>\n * \n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     },\n *     \"chart\": {\n *       template: \"<chart_thing/>\"\n *     },\n *     \"data\": {\n *       template: \"<data_thing/>\"\n *     }\n *   }    \n * })\n * </pre>\n *\n * Examples for `autoscroll`:\n *\n * <pre>\n * <!-- If autoscroll present with no expression,\n *      then scroll ui-view into view -->\n * <ui-view autoscroll/>\n *\n * <!-- If autoscroll present with valid expression,\n *      then scroll ui-view into view if expression evaluates to true -->\n * <ui-view autoscroll='true'/>\n * <ui-view autoscroll='false'/>\n * <ui-view autoscroll='scopeVariable'/>\n * </pre>\n */\n$ViewDirective.$inject = ['$state', '$injector', '$uiViewScroll', '$interpolate'];\nfunction $ViewDirective(   $state,   $injector,   $uiViewScroll,   $interpolate) {\n\n  function getService() {\n    return ($injector.has) ? function(service) {\n      return $injector.has(service) ? $injector.get(service) : null;\n    } : function(service) {\n      try {\n        return $injector.get(service);\n      } catch (e) {\n        return null;\n      }\n    };\n  }\n\n  var service = getService(),\n      $animator = service('$animator'),\n      $animate = service('$animate');\n\n  // Returns a set of DOM manipulation functions based on which Angular version\n  // it should use\n  function getRenderer(attrs, scope) {\n    var statics = function() {\n      return {\n        enter: function (element, target, cb) { target.after(element); cb(); },\n        leave: function (element, cb) { element.remove(); cb(); }\n      };\n    };\n\n    if ($animate) {\n      return {\n        enter: function(element, target, cb) {\n          var promise = $animate.enter(element, null, target, cb);\n          if (promise && promise.then) promise.then(cb);\n        },\n        leave: function(element, cb) {\n          var promise = $animate.leave(element, cb);\n          if (promise && promise.then) promise.then(cb);\n        }\n      };\n    }\n\n    if ($animator) {\n      var animate = $animator && $animator(scope, attrs);\n\n      return {\n        enter: function(element, target, cb) {animate.enter(element, null, target); cb(); },\n        leave: function(element, cb) { animate.leave(element); cb(); }\n      };\n    }\n\n    return statics();\n  }\n\n  var directive = {\n    restrict: 'ECA',\n    terminal: true,\n    priority: 400,\n    transclude: 'element',\n    compile: function (tElement, tAttrs, $transclude) {\n      return function (scope, $element, attrs) {\n        var previousEl, currentEl, currentScope, latestLocals,\n            onloadExp     = attrs.onload || '',\n            autoScrollExp = attrs.autoscroll,\n            renderer      = getRenderer(attrs, scope);\n\n        scope.$on('$stateChangeSuccess', function() {\n          updateView(false);\n        });\n        scope.$on('$viewContentLoading', function() {\n          updateView(false);\n        });\n\n        updateView(true);\n\n        function cleanupLastView() {\n          if (previousEl) {\n            previousEl.remove();\n            previousEl = null;\n          }\n\n          if (currentScope) {\n            currentScope.$destroy();\n            currentScope = null;\n          }\n\n          if (currentEl) {\n            renderer.leave(currentEl, function() {\n              previousEl = null;\n            });\n\n            previousEl = currentEl;\n            currentEl = null;\n          }\n        }\n\n        function updateView(firstTime) {\n          var newScope,\n              name            = getUiViewName(scope, attrs, $element, $interpolate),\n              previousLocals  = name && $state.$current && $state.$current.locals[name];\n\n          if (!firstTime && previousLocals === latestLocals) return; // nothing to do\n          newScope = scope.$new();\n          latestLocals = $state.$current.locals[name];\n\n          var clone = $transclude(newScope, function(clone) {\n            renderer.enter(clone, $element, function onUiViewEnter() {\n              if(currentScope) {\n                currentScope.$emit('$viewContentAnimationEnded');\n              }\n\n              if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n                $uiViewScroll(clone);\n              }\n            });\n            cleanupLastView();\n          });\n\n          currentEl = clone;\n          currentScope = newScope;\n          /**\n           * @ngdoc event\n           * @name ui.router.state.directive:ui-view#$viewContentLoaded\n           * @eventOf ui.router.state.directive:ui-view\n           * @eventType emits on ui-view directive scope\n           * @description           *\n           * Fired once the view is **loaded**, *after* the DOM is rendered.\n           *\n           * @param {Object} event Event object.\n           */\n          currentScope.$emit('$viewContentLoaded');\n          currentScope.$eval(onloadExp);\n        }\n      };\n    }\n  };\n\n  return directive;\n}\n\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$state', '$interpolate'];\nfunction $ViewDirectiveFill (  $compile,   $controller,   $state,   $interpolate) {\n  return {\n    restrict: 'ECA',\n    priority: -400,\n    compile: function (tElement) {\n      var initial = tElement.html();\n      return function (scope, $element, attrs) {\n        var current = $state.$current,\n            name = getUiViewName(scope, attrs, $element, $interpolate),\n            locals  = current && current.locals[name];\n\n        if (! locals) {\n          return;\n        }\n\n        $element.data('$uiView', { name: name, state: locals.$$state });\n        $element.html(locals.$template ? locals.$template : initial);\n\n        var link = $compile($element.contents());\n\n        if (locals.$$controller) {\n          locals.$scope = scope;\n          var controller = $controller(locals.$$controller, locals);\n          if (locals.$$controllerAs) {\n            scope[locals.$$controllerAs] = controller;\n          }\n          $element.data('$ngControllerController', controller);\n          $element.children().data('$ngControllerController', controller);\n        }\n\n        link(scope);\n      };\n    }\n  };\n}\n\n/**\n * Shared ui-view code for both directives:\n * Given scope, element, and its attributes, return the view's name\n */\nfunction getUiViewName(scope, attrs, element, $interpolate) {\n  var name = $interpolate(attrs.uiView || attrs.name || '')(scope);\n  var inherited = element.inheritedData('$uiView');\n  return name.indexOf('@') >= 0 ?  name :  (name + '@' + (inherited ? inherited.state.name : ''));\n}\n\nangular.module('ui.router.state').directive('uiView', $ViewDirective);\nangular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n\nfunction parseStateRef(ref, current) {\n  var preparsed = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n  if (preparsed) ref = current + '(' + preparsed[1] + ')';\n  parsed = ref.replace(/\\n/g, \" \").match(/^([^(]+?)\\s*(\\((.*)\\))?$/);\n  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\n  return { state: parsed[1], paramExpr: parsed[3] || null };\n}\n\nfunction stateContext(el) {\n  var stateData = el.parent().inheritedData('$uiView');\n\n  if (stateData && stateData.state && stateData.state.name) {\n    return stateData.state;\n  }\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref\n *\n * @requires ui.router.state.$state\n * @requires $timeout\n *\n * @restrict A\n *\n * @description\n * A directive that binds a link (`<a>` tag) to a state. If the state has an associated \n * URL, the directive will automatically generate & update the `href` attribute via \n * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking \n * the link will trigger a state transition with optional parameters. \n *\n * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be \n * handled natively by the browser.\n *\n * You can also use relative state paths within ui-sref, just like the relative \n * paths passed to `$state.go()`. You just need to be aware that the path is relative\n * to the state that the link lives in, in other words the state that loaded the \n * template containing the link.\n *\n * You can specify options to pass to {@link ui.router.state.$state#go $state.go()}\n * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\n * and `reload`.\n *\n * @example\n * Here's an example of how you'd use ui-sref and how it would compile. If you have the \n * following template:\n * <pre>\n * <a ui-sref=\"home\">Home</a> | <a ui-sref=\"about\">About</a> | <a ui-sref=\"{page: 2}\">Next page</a>\n * \n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * </pre>\n * \n * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):\n * <pre>\n * <a href=\"#/home\" ui-sref=\"home\">Home</a> | <a href=\"#/about\" ui-sref=\"about\">About</a> | <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n * \n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * </pre>\n *\n * @param {string} ui-sref 'stateName' can be any valid absolute or relative state\n * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#go $state.go()}\n */\n$StateRefDirective.$inject = ['$state', '$timeout'];\nfunction $StateRefDirective($state, $timeout) {\n  var allowedOptions = ['location', 'inherit', 'reload'];\n\n  return {\n    restrict: 'A',\n    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n    link: function(scope, element, attrs, uiSrefActive) {\n      var ref = parseStateRef(attrs.uiSref, $state.current.name);\n      var params = null, url = null, base = stateContext(element) || $state.$current;\n      var newHref = null, isAnchor = element.prop(\"tagName\") === \"A\";\n      var isForm = element[0].nodeName === \"FORM\";\n      var attr = isForm ? \"action\" : \"href\", nav = true;\n\n      var options = { relative: base, inherit: true };\n      var optionsOverride = scope.$eval(attrs.uiSrefOpts) || {};\n\n      angular.forEach(allowedOptions, function(option) {\n        if (option in optionsOverride) {\n          options[option] = optionsOverride[option];\n        }\n      });\n\n      var update = function(newVal) {\n        if (newVal) params = angular.copy(newVal);\n        if (!nav) return;\n\n        newHref = $state.href(ref.state, params, options);\n\n        var activeDirective = uiSrefActive[1] || uiSrefActive[0];\n        if (activeDirective) {\n          activeDirective.$$setStateInfo(ref.state, params);\n        }\n        if (newHref === null) {\n          nav = false;\n          return false;\n        }\n        attrs.$set(attr, newHref);\n      };\n\n      if (ref.paramExpr) {\n        scope.$watch(ref.paramExpr, function(newVal, oldVal) {\n          if (newVal !== params) update(newVal);\n        }, true);\n        params = angular.copy(scope.$eval(ref.paramExpr));\n      }\n      update();\n\n      if (isForm) return;\n\n      element.bind(\"click\", function(e) {\n        var button = e.which || e.button;\n        if ( !(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || element.attr('target')) ) {\n          // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n          var transition = $timeout(function() {\n            $state.go(ref.state, params, options);\n          });\n          e.preventDefault();\n\n          // if the state has no URL, ignore one preventDefault from the <a> directive.\n          var ignorePreventDefaultCount = isAnchor && !newHref ? 1: 0;\n          e.preventDefault = function() {\n            if (ignorePreventDefaultCount-- <= 0)\n              $timeout.cancel(transition);\n          };\n        }\n      });\n    }\n  };\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * A directive working alongside ui-sref to add classes to an element when the\n * related ui-sref directive's state is active, and removing them when it is inactive.\n * The primary use-case is to simplify the special appearance of navigation menus\n * relying on `ui-sref`, by having the \"active\" state's menu button appear different,\n * distinguishing it from the inactive menu items.\n *\n * ui-sref-active can live on the same element as ui-sref or on a parent element. The first\n * ui-sref-active found at the same level or above the ui-sref will be used.\n *\n * Will activate when the ui-sref's target state or any child state is active. If you\n * need to activate only when the ui-sref target state is active and *not* any of\n * it's children, then you will use\n * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}\n *\n * @example\n * Given the following template:\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n *\n * When the app state is \"app.user\" (or any children states), and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n * The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * Multiple classes may be specified in a space-separated format:\n * <pre>\n * <ul>\n *   <li ui-sref-active='class1 class2 class3'>\n *     <a ui-sref=\"app.user\">link</a>\n *   </li>\n * </ul>\n * </pre>\n */\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active-eq\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\n * when the exact target state used in the `ui-sref` is active; no child states.\n *\n */\n$StateRefActiveDirective.$inject = ['$state', '$stateParams', '$interpolate'];\nfunction $StateRefActiveDirective($state, $stateParams, $interpolate) {\n  return  {\n    restrict: \"A\",\n    controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\n      var state, params, activeClass;\n\n      // There probably isn't much point in $observing this\n      // uiSrefActive and uiSrefActiveEq share the same directive object with some\n      // slight difference in logic routing\n      activeClass = $interpolate($attrs.uiSrefActiveEq || $attrs.uiSrefActive || '', false)($scope);\n\n      // Allow uiSref to communicate with uiSrefActive[Equals]\n      this.$$setStateInfo = function (newState, newParams) {\n        state = $state.get(newState, stateContext($element));\n        params = newParams;\n        update();\n      };\n\n      $scope.$on('$stateChangeSuccess', update);\n\n      // Update route state\n      function update() {\n        if (isMatch()) {\n          $element.addClass(activeClass);\n        } else {\n          $element.removeClass(activeClass);\n        }\n      }\n\n      function isMatch() {\n        if (typeof $attrs.uiSrefActiveEq !== 'undefined') {\n          return state && $state.is(state.name, params);\n        } else {\n          return state && $state.includes(state.name, params);\n        }\n      }\n    }]\n  };\n}\n\nangular.module('ui.router.state')\n  .directive('uiSref', $StateRefDirective)\n  .directive('uiSrefActive', $StateRefActiveDirective)\n  .directive('uiSrefActiveEq', $StateRefActiveDirective);\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:isState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.\n */\n$IsStateFilter.$inject = ['$state'];\nfunction $IsStateFilter($state) {\n  var isFilter = function (state) {\n    return $state.is(state);\n  };\n  isFilter.$stateful = true;\n  return isFilter;\n}\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:includedByState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.\n */\n$IncludedByStateFilter.$inject = ['$state'];\nfunction $IncludedByStateFilter($state) {\n  var includesFilter = function (state) {\n    return $state.includes(state);\n  };\n  includesFilter.$stateful = true;\n  return  includesFilter;\n}\n\nangular.module('ui.router.state')\n  .filter('isState', $IsStateFilter)\n  .filter('includedByState', $IncludedByStateFilter);\n})(window, window.angular);",";__browserify_shim_require__=require;(function browserifyShim(module, exports, require, define, browserify_shim__define__module__export__) {\n/*\n AngularJS v1.3.8\n (c) 2010-2014 Google, Inc. http://angularjs.org\n License: MIT\n*/\n(function(M,Y,t){'use strict';function T(b){return function(){var a=arguments[0],c;c=\"[\"+(b?b+\":\":\"\")+a+\"] http://errors.angularjs.org/1.3.8/\"+(b?b+\"/\":\"\")+a;for(a=1;a<arguments.length;a++){c=c+(1==a?\"?\":\"&\")+\"p\"+(a-1)+\"=\";var d=encodeURIComponent,e;e=arguments[a];e=\"function\"==typeof e?e.toString().replace(/ \\{[\\s\\S]*$/,\"\"):\"undefined\"==typeof e?\"undefined\":\"string\"!=typeof e?JSON.stringify(e):e;c+=d(e)}return Error(c)}}function Ta(b){if(null==b||Ua(b))return!1;var a=b.length;return b.nodeType===\nna&&a?!0:F(b)||x(b)||0===a||\"number\"===typeof a&&0<a&&a-1 in b}function s(b,a,c){var d,e;if(b)if(G(b))for(d in b)\"prototype\"==d||\"length\"==d||\"name\"==d||b.hasOwnProperty&&!b.hasOwnProperty(d)||a.call(c,b[d],d,b);else if(x(b)||Ta(b)){var f=\"object\"!==typeof b;d=0;for(e=b.length;d<e;d++)(f||d in b)&&a.call(c,b[d],d,b)}else if(b.forEach&&b.forEach!==s)b.forEach(a,c,b);else for(d in b)b.hasOwnProperty(d)&&a.call(c,b[d],d,b);return b}function Ed(b,a,c){for(var d=Object.keys(b).sort(),e=0;e<d.length;e++)a.call(c,\nb[d[e]],d[e]);return d}function kc(b){return function(a,c){b(c,a)}}function Fd(){return++nb}function lc(b,a){a?b.$$hashKey=a:delete b.$$hashKey}function z(b){for(var a=b.$$hashKey,c=1,d=arguments.length;c<d;c++){var e=arguments[c];if(e)for(var f=Object.keys(e),g=0,h=f.length;g<h;g++){var l=f[g];b[l]=e[l]}}lc(b,a);return b}function ba(b){return parseInt(b,10)}function C(){}function oa(b){return b}function da(b){return function(){return b}}function D(b){return\"undefined\"===typeof b}function y(b){return\"undefined\"!==\ntypeof b}function H(b){return null!==b&&\"object\"===typeof b}function F(b){return\"string\"===typeof b}function V(b){return\"number\"===typeof b}function pa(b){return\"[object Date]\"===Da.call(b)}function G(b){return\"function\"===typeof b}function ob(b){return\"[object RegExp]\"===Da.call(b)}function Ua(b){return b&&b.window===b}function Va(b){return b&&b.$evalAsync&&b.$watch}function Wa(b){return\"boolean\"===typeof b}function mc(b){return!(!b||!(b.nodeName||b.prop&&b.attr&&b.find))}function Gd(b){var a={};\nb=b.split(\",\");var c;for(c=0;c<b.length;c++)a[b[c]]=!0;return a}function ua(b){return Q(b.nodeName||b[0]&&b[0].nodeName)}function Xa(b,a){var c=b.indexOf(a);0<=c&&b.splice(c,1);return a}function Ea(b,a,c,d){if(Ua(b)||Va(b))throw Ka(\"cpws\");if(a){if(b===a)throw Ka(\"cpi\");c=c||[];d=d||[];if(H(b)){var e=c.indexOf(b);if(-1!==e)return d[e];c.push(b);d.push(a)}if(x(b))for(var f=a.length=0;f<b.length;f++)e=Ea(b[f],null,c,d),H(b[f])&&(c.push(b[f]),d.push(e)),a.push(e);else{var g=a.$$hashKey;x(a)?a.length=\n0:s(a,function(b,c){delete a[c]});for(f in b)b.hasOwnProperty(f)&&(e=Ea(b[f],null,c,d),H(b[f])&&(c.push(b[f]),d.push(e)),a[f]=e);lc(a,g)}}else if(a=b)x(b)?a=Ea(b,[],c,d):pa(b)?a=new Date(b.getTime()):ob(b)?(a=new RegExp(b.source,b.toString().match(/[^\\/]*$/)[0]),a.lastIndex=b.lastIndex):H(b)&&(e=Object.create(Object.getPrototypeOf(b)),a=Ea(b,e,c,d));return a}function qa(b,a){if(x(b)){a=a||[];for(var c=0,d=b.length;c<d;c++)a[c]=b[c]}else if(H(b))for(c in a=a||{},b)if(\"$\"!==c.charAt(0)||\"$\"!==c.charAt(1))a[c]=\nb[c];return a||b}function fa(b,a){if(b===a)return!0;if(null===b||null===a)return!1;if(b!==b&&a!==a)return!0;var c=typeof b,d;if(c==typeof a&&\"object\"==c)if(x(b)){if(!x(a))return!1;if((c=b.length)==a.length){for(d=0;d<c;d++)if(!fa(b[d],a[d]))return!1;return!0}}else{if(pa(b))return pa(a)?fa(b.getTime(),a.getTime()):!1;if(ob(b)&&ob(a))return b.toString()==a.toString();if(Va(b)||Va(a)||Ua(b)||Ua(a)||x(a))return!1;c={};for(d in b)if(\"$\"!==d.charAt(0)&&!G(b[d])){if(!fa(b[d],a[d]))return!1;c[d]=!0}for(d in a)if(!c.hasOwnProperty(d)&&\n\"$\"!==d.charAt(0)&&a[d]!==t&&!G(a[d]))return!1;return!0}return!1}function Ya(b,a,c){return b.concat(Za.call(a,c))}function nc(b,a){var c=2<arguments.length?Za.call(arguments,2):[];return!G(a)||a instanceof RegExp?a:c.length?function(){return arguments.length?a.apply(b,Ya(c,arguments,0)):a.apply(b,c)}:function(){return arguments.length?a.apply(b,arguments):a.call(b)}}function Hd(b,a){var c=a;\"string\"===typeof b&&\"$\"===b.charAt(0)&&\"$\"===b.charAt(1)?c=t:Ua(a)?c=\"$WINDOW\":a&&Y===a?c=\"$DOCUMENT\":Va(a)&&\n(c=\"$SCOPE\");return c}function $a(b,a){if(\"undefined\"===typeof b)return t;V(a)||(a=a?2:null);return JSON.stringify(b,Hd,a)}function oc(b){return F(b)?JSON.parse(b):b}function va(b){b=B(b).clone();try{b.empty()}catch(a){}var c=B(\"<div>\").append(b).html();try{return b[0].nodeType===pb?Q(c):c.match(/^(<[^>]+>)/)[1].replace(/^<([\\w\\-]+)/,function(a,b){return\"<\"+Q(b)})}catch(d){return Q(c)}}function pc(b){try{return decodeURIComponent(b)}catch(a){}}function qc(b){var a={},c,d;s((b||\"\").split(\"&\"),function(b){b&&\n(c=b.replace(/\\+/g,\"%20\").split(\"=\"),d=pc(c[0]),y(d)&&(b=y(c[1])?pc(c[1]):!0,rc.call(a,d)?x(a[d])?a[d].push(b):a[d]=[a[d],b]:a[d]=b))});return a}function Nb(b){var a=[];s(b,function(b,d){x(b)?s(b,function(b){a.push(Fa(d,!0)+(!0===b?\"\":\"=\"+Fa(b,!0)))}):a.push(Fa(d,!0)+(!0===b?\"\":\"=\"+Fa(b,!0)))});return a.length?a.join(\"&\"):\"\"}function qb(b){return Fa(b,!0).replace(/%26/gi,\"&\").replace(/%3D/gi,\"=\").replace(/%2B/gi,\"+\")}function Fa(b,a){return encodeURIComponent(b).replace(/%40/gi,\"@\").replace(/%3A/gi,\n\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%3B/gi,\";\").replace(/%20/g,a?\"%20\":\"+\")}function Id(b,a){var c,d,e=rb.length;b=B(b);for(d=0;d<e;++d)if(c=rb[d]+a,F(c=b.attr(c)))return c;return null}function Jd(b,a){var c,d,e={};s(rb,function(a){a+=\"app\";!c&&b.hasAttribute&&b.hasAttribute(a)&&(c=b,d=b.getAttribute(a))});s(rb,function(a){a+=\"app\";var e;!c&&(e=b.querySelector(\"[\"+a.replace(\":\",\"\\\\:\")+\"]\"))&&(c=e,d=e.getAttribute(a))});c&&(e.strictDi=null!==Id(c,\"strict-di\"),a(c,d?[d]:[],e))}function sc(b,\na,c){H(c)||(c={});c=z({strictDi:!1},c);var d=function(){b=B(b);if(b.injector()){var d=b[0]===Y?\"document\":va(b);throw Ka(\"btstrpd\",d.replace(/</,\"&lt;\").replace(/>/,\"&gt;\"));}a=a||[];a.unshift([\"$provide\",function(a){a.value(\"$rootElement\",b)}]);c.debugInfoEnabled&&a.push([\"$compileProvider\",function(a){a.debugInfoEnabled(!0)}]);a.unshift(\"ng\");d=Ob(a,c.strictDi);d.invoke([\"$rootScope\",\"$rootElement\",\"$compile\",\"$injector\",function(a,b,c,d){a.$apply(function(){b.data(\"$injector\",d);c(b)(a)})}]);return d},\ne=/^NG_ENABLE_DEBUG_INFO!/,f=/^NG_DEFER_BOOTSTRAP!/;M&&e.test(M.name)&&(c.debugInfoEnabled=!0,M.name=M.name.replace(e,\"\"));if(M&&!f.test(M.name))return d();M.name=M.name.replace(f,\"\");ga.resumeBootstrap=function(b){s(b,function(b){a.push(b)});d()}}function Kd(){M.name=\"NG_ENABLE_DEBUG_INFO!\"+M.name;M.location.reload()}function Ld(b){b=ga.element(b).injector();if(!b)throw Ka(\"test\");return b.get(\"$$testability\")}function tc(b,a){a=a||\"_\";return b.replace(Md,function(b,d){return(d?a:\"\")+b.toLowerCase()})}\nfunction Nd(){var b;uc||((ra=M.jQuery)&&ra.fn.on?(B=ra,z(ra.fn,{scope:La.scope,isolateScope:La.isolateScope,controller:La.controller,injector:La.injector,inheritedData:La.inheritedData}),b=ra.cleanData,ra.cleanData=function(a){var c;if(Pb)Pb=!1;else for(var d=0,e;null!=(e=a[d]);d++)(c=ra._data(e,\"events\"))&&c.$destroy&&ra(e).triggerHandler(\"$destroy\");b(a)}):B=R,ga.element=B,uc=!0)}function Qb(b,a,c){if(!b)throw Ka(\"areq\",a||\"?\",c||\"required\");return b}function sb(b,a,c){c&&x(b)&&(b=b[b.length-1]);\nQb(G(b),a,\"not a function, got \"+(b&&\"object\"===typeof b?b.constructor.name||\"Object\":typeof b));return b}function Ma(b,a){if(\"hasOwnProperty\"===b)throw Ka(\"badname\",a);}function vc(b,a,c){if(!a)return b;a=a.split(\".\");for(var d,e=b,f=a.length,g=0;g<f;g++)d=a[g],b&&(b=(e=b)[d]);return!c&&G(b)?nc(e,b):b}function tb(b){var a=b[0];b=b[b.length-1];var c=[a];do{a=a.nextSibling;if(!a)break;c.push(a)}while(a!==b);return B(c)}function ha(){return Object.create(null)}function Od(b){function a(a,b,c){return a[b]||\n(a[b]=c())}var c=T(\"$injector\"),d=T(\"ng\");b=a(b,\"angular\",Object);b.$$minErr=b.$$minErr||T;return a(b,\"module\",function(){var b={};return function(f,g,h){if(\"hasOwnProperty\"===f)throw d(\"badname\",\"module\");g&&b.hasOwnProperty(f)&&(b[f]=null);return a(b,f,function(){function a(c,d,e,f){f||(f=b);return function(){f[e||\"push\"]([c,d,arguments]);return u}}if(!g)throw c(\"nomod\",f);var b=[],d=[],e=[],q=a(\"$injector\",\"invoke\",\"push\",d),u={_invokeQueue:b,_configBlocks:d,_runBlocks:e,requires:g,name:f,provider:a(\"$provide\",\n\"provider\"),factory:a(\"$provide\",\"factory\"),service:a(\"$provide\",\"service\"),value:a(\"$provide\",\"value\"),constant:a(\"$provide\",\"constant\",\"unshift\"),animation:a(\"$animateProvider\",\"register\"),filter:a(\"$filterProvider\",\"register\"),controller:a(\"$controllerProvider\",\"register\"),directive:a(\"$compileProvider\",\"directive\"),config:q,run:function(a){e.push(a);return this}};h&&q(h);return u})}})}function Pd(b){z(b,{bootstrap:sc,copy:Ea,extend:z,equals:fa,element:B,forEach:s,injector:Ob,noop:C,bind:nc,toJson:$a,\nfromJson:oc,identity:oa,isUndefined:D,isDefined:y,isString:F,isFunction:G,isObject:H,isNumber:V,isElement:mc,isArray:x,version:Qd,isDate:pa,lowercase:Q,uppercase:ub,callbacks:{counter:0},getTestability:Ld,$$minErr:T,$$csp:ab,reloadWithDebugInfo:Kd});bb=Od(M);try{bb(\"ngLocale\")}catch(a){bb(\"ngLocale\",[]).provider(\"$locale\",Rd)}bb(\"ng\",[\"ngLocale\"],[\"$provide\",function(a){a.provider({$$sanitizeUri:Sd});a.provider(\"$compile\",wc).directive({a:Td,input:xc,textarea:xc,form:Ud,script:Vd,select:Wd,style:Xd,\noption:Yd,ngBind:Zd,ngBindHtml:$d,ngBindTemplate:ae,ngClass:be,ngClassEven:ce,ngClassOdd:de,ngCloak:ee,ngController:fe,ngForm:ge,ngHide:he,ngIf:ie,ngInclude:je,ngInit:ke,ngNonBindable:le,ngPluralize:me,ngRepeat:ne,ngShow:oe,ngStyle:pe,ngSwitch:qe,ngSwitchWhen:re,ngSwitchDefault:se,ngOptions:te,ngTransclude:ue,ngModel:ve,ngList:we,ngChange:xe,pattern:yc,ngPattern:yc,required:zc,ngRequired:zc,minlength:Ac,ngMinlength:Ac,maxlength:Bc,ngMaxlength:Bc,ngValue:ye,ngModelOptions:ze}).directive({ngInclude:Ae}).directive(vb).directive(Cc);\na.provider({$anchorScroll:Be,$animate:Ce,$browser:De,$cacheFactory:Ee,$controller:Fe,$document:Ge,$exceptionHandler:He,$filter:Dc,$interpolate:Ie,$interval:Je,$http:Ke,$httpBackend:Le,$location:Me,$log:Ne,$parse:Oe,$rootScope:Pe,$q:Qe,$$q:Re,$sce:Se,$sceDelegate:Te,$sniffer:Ue,$templateCache:Ve,$templateRequest:We,$$testability:Xe,$timeout:Ye,$window:Ze,$$rAF:$e,$$asyncCallback:af,$$jqLite:bf})}])}function cb(b){return b.replace(cf,function(a,b,d,e){return e?d.toUpperCase():d}).replace(df,\"Moz$1\")}\nfunction Ec(b){b=b.nodeType;return b===na||!b||9===b}function Fc(b,a){var c,d,e=a.createDocumentFragment(),f=[];if(Rb.test(b)){c=c||e.appendChild(a.createElement(\"div\"));d=(ef.exec(b)||[\"\",\"\"])[1].toLowerCase();d=ia[d]||ia._default;c.innerHTML=d[1]+b.replace(ff,\"<$1></$2>\")+d[2];for(d=d[0];d--;)c=c.lastChild;f=Ya(f,c.childNodes);c=e.firstChild;c.textContent=\"\"}else f.push(a.createTextNode(b));e.textContent=\"\";e.innerHTML=\"\";s(f,function(a){e.appendChild(a)});return e}function R(b){if(b instanceof\nR)return b;var a;F(b)&&(b=U(b),a=!0);if(!(this instanceof R)){if(a&&\"<\"!=b.charAt(0))throw Sb(\"nosel\");return new R(b)}if(a){a=Y;var c;b=(c=gf.exec(b))?[a.createElement(c[1])]:(c=Fc(b,a))?c.childNodes:[]}Gc(this,b)}function Tb(b){return b.cloneNode(!0)}function wb(b,a){a||xb(b);if(b.querySelectorAll)for(var c=b.querySelectorAll(\"*\"),d=0,e=c.length;d<e;d++)xb(c[d])}function Hc(b,a,c,d){if(y(d))throw Sb(\"offargs\");var e=(d=yb(b))&&d.events,f=d&&d.handle;if(f)if(a)s(a.split(\" \"),function(a){if(y(c)){var d=\ne[a];Xa(d||[],c);if(d&&0<d.length)return}b.removeEventListener(a,f,!1);delete e[a]});else for(a in e)\"$destroy\"!==a&&b.removeEventListener(a,f,!1),delete e[a]}function xb(b,a){var c=b.ng339,d=c&&zb[c];d&&(a?delete d.data[a]:(d.handle&&(d.events.$destroy&&d.handle({},\"$destroy\"),Hc(b)),delete zb[c],b.ng339=t))}function yb(b,a){var c=b.ng339,c=c&&zb[c];a&&!c&&(b.ng339=c=++hf,c=zb[c]={events:{},data:{},handle:t});return c}function Ub(b,a,c){if(Ec(b)){var d=y(c),e=!d&&a&&!H(a),f=!a;b=(b=yb(b,!e))&&b.data;\nif(d)b[a]=c;else{if(f)return b;if(e)return b&&b[a];z(b,a)}}}function Ab(b,a){return b.getAttribute?-1<(\" \"+(b.getAttribute(\"class\")||\"\")+\" \").replace(/[\\n\\t]/g,\" \").indexOf(\" \"+a+\" \"):!1}function Bb(b,a){a&&b.setAttribute&&s(a.split(\" \"),function(a){b.setAttribute(\"class\",U((\" \"+(b.getAttribute(\"class\")||\"\")+\" \").replace(/[\\n\\t]/g,\" \").replace(\" \"+U(a)+\" \",\" \")))})}function Cb(b,a){if(a&&b.setAttribute){var c=(\" \"+(b.getAttribute(\"class\")||\"\")+\" \").replace(/[\\n\\t]/g,\" \");s(a.split(\" \"),function(a){a=\nU(a);-1===c.indexOf(\" \"+a+\" \")&&(c+=a+\" \")});b.setAttribute(\"class\",U(c))}}function Gc(b,a){if(a)if(a.nodeType)b[b.length++]=a;else{var c=a.length;if(\"number\"===typeof c&&a.window!==a){if(c)for(var d=0;d<c;d++)b[b.length++]=a[d]}else b[b.length++]=a}}function Ic(b,a){return Db(b,\"$\"+(a||\"ngController\")+\"Controller\")}function Db(b,a,c){9==b.nodeType&&(b=b.documentElement);for(a=x(a)?a:[a];b;){for(var d=0,e=a.length;d<e;d++)if((c=B.data(b,a[d]))!==t)return c;b=b.parentNode||11===b.nodeType&&b.host}}\nfunction Jc(b){for(wb(b,!0);b.firstChild;)b.removeChild(b.firstChild)}function Kc(b,a){a||wb(b);var c=b.parentNode;c&&c.removeChild(b)}function jf(b,a){a=a||M;if(\"complete\"===a.document.readyState)a.setTimeout(b);else B(a).on(\"load\",b)}function Lc(b,a){var c=Eb[a.toLowerCase()];return c&&Mc[ua(b)]&&c}function kf(b,a){var c=b.nodeName;return(\"INPUT\"===c||\"TEXTAREA\"===c)&&Nc[a]}function lf(b,a){var c=function(c,e){c.isDefaultPrevented=function(){return c.defaultPrevented};var f=a[e||c.type],g=f?f.length:\n0;if(g){if(D(c.immediatePropagationStopped)){var h=c.stopImmediatePropagation;c.stopImmediatePropagation=function(){c.immediatePropagationStopped=!0;c.stopPropagation&&c.stopPropagation();h&&h.call(c)}}c.isImmediatePropagationStopped=function(){return!0===c.immediatePropagationStopped};1<g&&(f=qa(f));for(var l=0;l<g;l++)c.isImmediatePropagationStopped()||f[l].call(b,c)}};c.elem=b;return c}function bf(){this.$get=function(){return z(R,{hasClass:function(b,a){b.attr&&(b=b[0]);return Ab(b,a)},addClass:function(b,\na){b.attr&&(b=b[0]);return Cb(b,a)},removeClass:function(b,a){b.attr&&(b=b[0]);return Bb(b,a)}})}}function Na(b,a){var c=b&&b.$$hashKey;if(c)return\"function\"===typeof c&&(c=b.$$hashKey()),c;c=typeof b;return c=\"function\"==c||\"object\"==c&&null!==b?b.$$hashKey=c+\":\"+(a||Fd)():c+\":\"+b}function db(b,a){if(a){var c=0;this.nextUid=function(){return++c}}s(b,this.put,this)}function mf(b){return(b=b.toString().replace(Oc,\"\").match(Pc))?\"function(\"+(b[1]||\"\").replace(/[\\s\\r\\n]+/,\" \")+\")\":\"fn\"}function Vb(b,\na,c){var d;if(\"function\"===typeof b){if(!(d=b.$inject)){d=[];if(b.length){if(a)throw F(c)&&c||(c=b.name||mf(b)),Ga(\"strictdi\",c);a=b.toString().replace(Oc,\"\");a=a.match(Pc);s(a[1].split(nf),function(a){a.replace(of,function(a,b,c){d.push(c)})})}b.$inject=d}}else x(b)?(a=b.length-1,sb(b[a],\"fn\"),d=b.slice(0,a)):sb(b,\"fn\",!0);return d}function Ob(b,a){function c(a){return function(b,c){if(H(b))s(b,kc(a));else return a(b,c)}}function d(a,b){Ma(a,\"service\");if(G(b)||x(b))b=q.instantiate(b);if(!b.$get)throw Ga(\"pget\",\na);return p[a+\"Provider\"]=b}function e(a,b){return function(){var c=r.invoke(b,this);if(D(c))throw Ga(\"undef\",a);return c}}function f(a,b,c){return d(a,{$get:!1!==c?e(a,b):b})}function g(a){var b=[],c;s(a,function(a){function d(a){var b,c;b=0;for(c=a.length;b<c;b++){var e=a[b],f=q.get(e[0]);f[e[1]].apply(f,e[2])}}if(!m.get(a)){m.put(a,!0);try{F(a)?(c=bb(a),b=b.concat(g(c.requires)).concat(c._runBlocks),d(c._invokeQueue),d(c._configBlocks)):G(a)?b.push(q.invoke(a)):x(a)?b.push(q.invoke(a)):sb(a,\"module\")}catch(e){throw x(a)&&\n(a=a[a.length-1]),e.message&&e.stack&&-1==e.stack.indexOf(e.message)&&(e=e.message+\"\\n\"+e.stack),Ga(\"modulerr\",a,e.stack||e.message||e);}}});return b}function h(b,c){function d(a,e){if(b.hasOwnProperty(a)){if(b[a]===l)throw Ga(\"cdep\",a+\" <- \"+k.join(\" <- \"));return b[a]}try{return k.unshift(a),b[a]=l,b[a]=c(a,e)}catch(f){throw b[a]===l&&delete b[a],f;}finally{k.shift()}}function e(b,c,f,g){\"string\"===typeof f&&(g=f,f=null);var h=[],k=Vb(b,a,g),l,q,p;q=0;for(l=k.length;q<l;q++){p=k[q];if(\"string\"!==\ntypeof p)throw Ga(\"itkn\",p);h.push(f&&f.hasOwnProperty(p)?f[p]:d(p,g))}x(b)&&(b=b[l]);return b.apply(c,h)}return{invoke:e,instantiate:function(a,b,c){var d=Object.create((x(a)?a[a.length-1]:a).prototype);a=e(a,d,b,c);return H(a)||G(a)?a:d},get:d,annotate:Vb,has:function(a){return p.hasOwnProperty(a+\"Provider\")||b.hasOwnProperty(a)}}}a=!0===a;var l={},k=[],m=new db([],!0),p={$provide:{provider:c(d),factory:c(f),service:c(function(a,b){return f(a,[\"$injector\",function(a){return a.instantiate(b)}])}),\nvalue:c(function(a,b){return f(a,da(b),!1)}),constant:c(function(a,b){Ma(a,\"constant\");p[a]=b;u[a]=b}),decorator:function(a,b){var c=q.get(a+\"Provider\"),d=c.$get;c.$get=function(){var a=r.invoke(d,c);return r.invoke(b,null,{$delegate:a})}}}},q=p.$injector=h(p,function(a,b){ga.isString(b)&&k.push(b);throw Ga(\"unpr\",k.join(\" <- \"));}),u={},r=u.$injector=h(u,function(a,b){var c=q.get(a+\"Provider\",b);return r.invoke(c.$get,c,t,a)});s(g(b),function(a){r.invoke(a||C)});return r}function Be(){var b=!0;this.disableAutoScrolling=\nfunction(){b=!1};this.$get=[\"$window\",\"$location\",\"$rootScope\",function(a,c,d){function e(a){var b=null;Array.prototype.some.call(a,function(a){if(\"a\"===ua(a))return b=a,!0});return b}function f(b){if(b){b.scrollIntoView();var c;c=g.yOffset;G(c)?c=c():mc(c)?(c=c[0],c=\"fixed\"!==a.getComputedStyle(c).position?0:c.getBoundingClientRect().bottom):V(c)||(c=0);c&&(b=b.getBoundingClientRect().top,a.scrollBy(0,b-c))}else a.scrollTo(0,0)}function g(){var a=c.hash(),b;a?(b=h.getElementById(a))?f(b):(b=e(h.getElementsByName(a)))?\nf(b):\"top\"===a&&f(null):f(null)}var h=a.document;b&&d.$watch(function(){return c.hash()},function(a,b){a===b&&\"\"===a||jf(function(){d.$evalAsync(g)})});return g}]}function af(){this.$get=[\"$$rAF\",\"$timeout\",function(b,a){return b.supported?function(a){return b(a)}:function(b){return a(b,0,!1)}}]}function pf(b,a,c,d){function e(a){try{a.apply(null,Za.call(arguments,1))}finally{if(v--,0===v)for(;w.length;)try{w.pop()()}catch(b){c.error(b)}}}function f(a,b){(function N(){s(L,function(a){a()});J=b(N,\na)})()}function g(){h();l()}function h(){A=b.history.state;A=D(A)?null:A;fa(A,I)&&(A=I);I=A}function l(){if(E!==m.url()||P!==A)E=m.url(),P=A,s(W,function(a){a(m.url(),A)})}function k(a){try{return decodeURIComponent(a)}catch(b){return a}}var m=this,p=a[0],q=b.location,u=b.history,r=b.setTimeout,O=b.clearTimeout,n={};m.isMock=!1;var v=0,w=[];m.$$completeOutstandingRequest=e;m.$$incOutstandingRequestCount=function(){v++};m.notifyWhenNoOutstandingRequests=function(a){s(L,function(a){a()});0===v?a():\nw.push(a)};var L=[],J;m.addPollFn=function(a){D(J)&&f(100,r);L.push(a);return a};var A,P,E=q.href,S=a.find(\"base\"),X=null;h();P=A;m.url=function(a,c,e){D(e)&&(e=null);q!==b.location&&(q=b.location);u!==b.history&&(u=b.history);if(a){var f=P===e;if(E===a&&(!d.history||f))return m;var g=E&&Ha(E)===Ha(a);E=a;P=e;!d.history||g&&f?(g||(X=a),c?q.replace(a):g?(c=q,e=a.indexOf(\"#\"),a=-1===e?\"\":a.substr(e+1),c.hash=a):q.href=a):(u[c?\"replaceState\":\"pushState\"](e,\"\",a),h(),P=A);return m}return X||q.href.replace(/%27/g,\n\"'\")};m.state=function(){return A};var W=[],wa=!1,I=null;m.onUrlChange=function(a){if(!wa){if(d.history)B(b).on(\"popstate\",g);B(b).on(\"hashchange\",g);wa=!0}W.push(a);return a};m.$$checkUrlChange=l;m.baseHref=function(){var a=S.attr(\"href\");return a?a.replace(/^(https?\\:)?\\/\\/[^\\/]*/,\"\"):\"\"};var ea={},y=\"\",ca=m.baseHref();m.cookies=function(a,b){var d,e,f,g;if(a)b===t?p.cookie=encodeURIComponent(a)+\"=;path=\"+ca+\";expires=Thu, 01 Jan 1970 00:00:00 GMT\":F(b)&&(d=(p.cookie=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)+\n\";path=\"+ca).length+1,4096<d&&c.warn(\"Cookie '\"+a+\"' possibly not set or overflowed because it was too large (\"+d+\" > 4096 bytes)!\"));else{if(p.cookie!==y)for(y=p.cookie,d=y.split(\"; \"),ea={},f=0;f<d.length;f++)e=d[f],g=e.indexOf(\"=\"),0<g&&(a=k(e.substring(0,g)),ea[a]===t&&(ea[a]=k(e.substring(g+1))));return ea}};m.defer=function(a,b){var c;v++;c=r(function(){delete n[c];e(a)},b||0);n[c]=!0;return c};m.defer.cancel=function(a){return n[a]?(delete n[a],O(a),e(C),!0):!1}}function De(){this.$get=[\"$window\",\n\"$log\",\"$sniffer\",\"$document\",function(b,a,c,d){return new pf(b,d,a,c)}]}function Ee(){this.$get=function(){function b(b,d){function e(a){a!=p&&(q?q==a&&(q=a.n):q=a,f(a.n,a.p),f(a,p),p=a,p.n=null)}function f(a,b){a!=b&&(a&&(a.p=b),b&&(b.n=a))}if(b in a)throw T(\"$cacheFactory\")(\"iid\",b);var g=0,h=z({},d,{id:b}),l={},k=d&&d.capacity||Number.MAX_VALUE,m={},p=null,q=null;return a[b]={put:function(a,b){if(k<Number.MAX_VALUE){var c=m[a]||(m[a]={key:a});e(c)}if(!D(b))return a in l||g++,l[a]=b,g>k&&this.remove(q.key),\nb},get:function(a){if(k<Number.MAX_VALUE){var b=m[a];if(!b)return;e(b)}return l[a]},remove:function(a){if(k<Number.MAX_VALUE){var b=m[a];if(!b)return;b==p&&(p=b.p);b==q&&(q=b.n);f(b.n,b.p);delete m[a]}delete l[a];g--},removeAll:function(){l={};g=0;m={};p=q=null},destroy:function(){m=h=l=null;delete a[b]},info:function(){return z({},h,{size:g})}}}var a={};b.info=function(){var b={};s(a,function(a,e){b[e]=a.info()});return b};b.get=function(b){return a[b]};return b}}function Ve(){this.$get=[\"$cacheFactory\",\nfunction(b){return b(\"templates\")}]}function wc(b,a){function c(a,b){var c=/^\\s*([@&]|=(\\*?))(\\??)\\s*(\\w*)\\s*$/,d={};s(a,function(a,e){var f=a.match(c);if(!f)throw ja(\"iscp\",b,e,a);d[e]={mode:f[1][0],collection:\"*\"===f[2],optional:\"?\"===f[3],attrName:f[4]||e}});return d}var d={},e=/^\\s*directive\\:\\s*([\\w\\-]+)\\s+(.*)$/,f=/(([\\w\\-]+)(?:\\:([^;]+))?;?)/,g=Gd(\"ngSrc,ngSrcset,src,srcset\"),h=/^(?:(\\^\\^?)?(\\?)?(\\^\\^?)?)?/,l=/^(on[a-z]+|formaction)$/;this.directive=function p(a,e){Ma(a,\"directive\");F(a)?(Qb(e,\n\"directiveFactory\"),d.hasOwnProperty(a)||(d[a]=[],b.factory(a+\"Directive\",[\"$injector\",\"$exceptionHandler\",function(b,e){var f=[];s(d[a],function(d,g){try{var h=b.invoke(d);G(h)?h={compile:da(h)}:!h.compile&&h.link&&(h.compile=da(h.link));h.priority=h.priority||0;h.index=g;h.name=h.name||a;h.require=h.require||h.controller&&h.name;h.restrict=h.restrict||\"EA\";H(h.scope)&&(h.$$isolateBindings=c(h.scope,h.name));f.push(h)}catch(l){e(l)}});return f}])),d[a].push(e)):s(a,kc(p));return this};this.aHrefSanitizationWhitelist=\nfunction(b){return y(b)?(a.aHrefSanitizationWhitelist(b),this):a.aHrefSanitizationWhitelist()};this.imgSrcSanitizationWhitelist=function(b){return y(b)?(a.imgSrcSanitizationWhitelist(b),this):a.imgSrcSanitizationWhitelist()};var k=!0;this.debugInfoEnabled=function(a){return y(a)?(k=a,this):k};this.$get=[\"$injector\",\"$interpolate\",\"$exceptionHandler\",\"$templateRequest\",\"$parse\",\"$controller\",\"$rootScope\",\"$document\",\"$sce\",\"$animate\",\"$$sanitizeUri\",function(a,b,c,r,O,n,v,w,L,J,A){function P(a,b){try{a.addClass(b)}catch(c){}}\nfunction E(a,b,c,d,e){a instanceof B||(a=B(a));s(a,function(b,c){b.nodeType==pb&&b.nodeValue.match(/\\S+/)&&(a[c]=B(b).wrap(\"<span></span>\").parent()[0])});var f=S(a,b,a,c,d,e);E.$$addScopeClass(a);var g=null;return function(b,c,d){Qb(b,\"scope\");d=d||{};var e=d.parentBoundTranscludeFn,h=d.transcludeControllers;d=d.futureParentElement;e&&e.$$boundTransclude&&(e=e.$$boundTransclude);g||(g=(d=d&&d[0])?\"foreignobject\"!==ua(d)&&d.toString().match(/SVG/)?\"svg\":\"html\":\"html\");d=\"html\"!==g?B(Wb(g,B(\"<div>\").append(a).html())):\nc?La.clone.call(a):a;if(h)for(var l in h)d.data(\"$\"+l+\"Controller\",h[l].instance);E.$$addScopeInfo(d,b);c&&c(d,b);f&&f(b,d,d,e);return d}}function S(a,b,c,d,e,f){function g(a,c,d,e){var f,l,k,q,p,n,w;if(r)for(w=Array(c.length),q=0;q<h.length;q+=3)f=h[q],w[f]=c[f];else w=c;q=0;for(p=h.length;q<p;)l=w[h[q++]],c=h[q++],f=h[q++],c?(c.scope?(k=a.$new(),E.$$addScopeInfo(B(l),k)):k=a,n=c.transcludeOnThisElement?X(a,c.transclude,e,c.elementTranscludeOnThisElement):!c.templateOnThisElement&&e?e:!e&&b?X(a,\nb):null,c(f,k,l,d,n)):f&&f(a,l.childNodes,t,e)}for(var h=[],l,k,q,p,r,n=0;n<a.length;n++){l=new Xb;k=W(a[n],[],l,0===n?d:t,e);(f=k.length?ea(k,a[n],l,b,c,null,[],[],f):null)&&f.scope&&E.$$addScopeClass(l.$$element);l=f&&f.terminal||!(q=a[n].childNodes)||!q.length?null:S(q,f?(f.transcludeOnThisElement||!f.templateOnThisElement)&&f.transclude:b);if(f||l)h.push(n,f,l),p=!0,r=r||f;f=null}return p?g:null}function X(a,b,c,d){return function(d,e,f,g,h){d||(d=a.$new(!1,h),d.$$transcluded=!0);return b(d,e,\n{parentBoundTranscludeFn:c,transcludeControllers:f,futureParentElement:g})}}function W(a,b,c,d,g){var h=c.$attr,l;switch(a.nodeType){case na:ca(b,ya(ua(a)),\"E\",d,g);for(var k,q,p,r=a.attributes,n=0,w=r&&r.length;n<w;n++){var O=!1,L=!1;k=r[n];l=k.name;q=U(k.value);k=ya(l);if(p=fb.test(k))l=l.replace(Rc,\"\").substr(8).replace(/_(.)/g,function(a,b){return b.toUpperCase()});var u=k.replace(/(Start|End)$/,\"\");D(u)&&k===u+\"Start\"&&(O=l,L=l.substr(0,l.length-5)+\"end\",l=l.substr(0,l.length-6));k=ya(l.toLowerCase());\nh[k]=l;if(p||!c.hasOwnProperty(k))c[k]=q,Lc(a,k)&&(c[k]=!0);Pa(a,b,q,k,p);ca(b,k,\"A\",d,g,O,L)}a=a.className;if(F(a)&&\"\"!==a)for(;l=f.exec(a);)k=ya(l[2]),ca(b,k,\"C\",d,g)&&(c[k]=U(l[3])),a=a.substr(l.index+l[0].length);break;case pb:M(b,a.nodeValue);break;case 8:try{if(l=e.exec(a.nodeValue))k=ya(l[1]),ca(b,k,\"M\",d,g)&&(c[k]=U(l[2]))}catch(v){}}b.sort(N);return b}function wa(a,b,c){var d=[],e=0;if(b&&a.hasAttribute&&a.hasAttribute(b)){do{if(!a)throw ja(\"uterdir\",b,c);a.nodeType==na&&(a.hasAttribute(b)&&\ne++,a.hasAttribute(c)&&e--);d.push(a);a=a.nextSibling}while(0<e)}else d.push(a);return B(d)}function I(a,b,c){return function(d,e,f,g,h){e=wa(e[0],b,c);return a(d,e,f,g,h)}}function ea(a,d,e,f,g,l,k,p,r){function w(a,b,c,d){if(a){c&&(a=I(a,c,d));a.require=K.require;a.directiveName=z;if(S===K||K.$$isolateScope)a=Z(a,{isolateScope:!0});k.push(a)}if(b){c&&(b=I(b,c,d));b.require=K.require;b.directiveName=z;if(S===K||K.$$isolateScope)b=Z(b,{isolateScope:!0});p.push(b)}}function L(a,b,c,d){var e,f=\"data\",\ng=!1,l=c,k;if(F(b)){k=b.match(h);b=b.substring(k[0].length);k[3]&&(k[1]?k[3]=null:k[1]=k[3]);\"^\"===k[1]?f=\"inheritedData\":\"^^\"===k[1]&&(f=\"inheritedData\",l=c.parent());\"?\"===k[2]&&(g=!0);e=null;d&&\"data\"===f&&(e=d[b])&&(e=e.instance);e=e||l[f](\"$\"+b+\"Controller\");if(!e&&!g)throw ja(\"ctreq\",b,a);return e||null}x(b)&&(e=[],s(b,function(b){e.push(L(a,b,c,d))}));return e}function v(a,c,f,g,h){function l(a,b,c){var d;Va(a)||(c=b,b=a,a=t);C&&(d=P);c||(c=C?W.parent():W);return h(a,b,d,c,wa)}var r,w,u,A,\nP,eb,W,I;d===f?(I=e,W=e.$$element):(W=B(f),I=new Xb(W,e));S&&(A=c.$new(!0));h&&(eb=l,eb.$$boundTransclude=h);J&&(X={},P={},s(J,function(a){var b={$scope:a===S||a.$$isolateScope?A:c,$element:W,$attrs:I,$transclude:eb};u=a.controller;\"@\"==u&&(u=I[a.name]);b=n(u,b,!0,a.controllerAs);P[a.name]=b;C||W.data(\"$\"+a.name+\"Controller\",b.instance);X[a.name]=b}));if(S){E.$$addScopeInfo(W,A,!0,!(ka&&(ka===S||ka===S.$$originalDirective)));E.$$addScopeClass(W,!0);g=X&&X[S.name];var xa=A;g&&g.identifier&&!0===S.bindToController&&\n(xa=g.instance);s(A.$$isolateBindings=S.$$isolateBindings,function(a,d){var e=a.attrName,f=a.optional,g,h,l,k;switch(a.mode){case \"@\":I.$observe(e,function(a){xa[d]=a});I.$$observers[e].$$scope=c;I[e]&&(xa[d]=b(I[e])(c));break;case \"=\":if(f&&!I[e])break;h=O(I[e]);k=h.literal?fa:function(a,b){return a===b||a!==a&&b!==b};l=h.assign||function(){g=xa[d]=h(c);throw ja(\"nonassign\",I[e],S.name);};g=xa[d]=h(c);f=function(a){k(a,xa[d])||(k(a,g)?l(c,a=xa[d]):xa[d]=a);return g=a};f.$stateful=!0;f=a.collection?\nc.$watchCollection(I[e],f):c.$watch(O(I[e],f),null,h.literal);A.$on(\"$destroy\",f);break;case \"&\":h=O(I[e]),xa[d]=function(a){return h(c,a)}}})}X&&(s(X,function(a){a()}),X=null);g=0;for(r=k.length;g<r;g++)w=k[g],$(w,w.isolateScope?A:c,W,I,w.require&&L(w.directiveName,w.require,W,P),eb);var wa=c;S&&(S.template||null===S.templateUrl)&&(wa=A);a&&a(wa,f.childNodes,t,h);for(g=p.length-1;0<=g;g--)w=p[g],$(w,w.isolateScope?A:c,W,I,w.require&&L(w.directiveName,w.require,W,P),eb)}r=r||{};for(var A=-Number.MAX_VALUE,\nP,J=r.controllerDirectives,X,S=r.newIsolateScopeDirective,ka=r.templateDirective,ea=r.nonTlbTranscludeDirective,ca=!1,D=!1,C=r.hasElementTranscludeDirective,aa=e.$$element=B(d),K,z,N,Aa=f,Q,M=0,R=a.length;M<R;M++){K=a[M];var Pa=K.$$start,fb=K.$$end;Pa&&(aa=wa(d,Pa,fb));N=t;if(A>K.priority)break;if(N=K.scope)K.templateUrl||(H(N)?(Oa(\"new/isolated scope\",S||P,K,aa),S=K):Oa(\"new/isolated scope\",S,K,aa)),P=P||K;z=K.name;!K.templateUrl&&K.controller&&(N=K.controller,J=J||{},Oa(\"'\"+z+\"' controller\",J[z],\nK,aa),J[z]=K);if(N=K.transclude)ca=!0,K.$$tlb||(Oa(\"transclusion\",ea,K,aa),ea=K),\"element\"==N?(C=!0,A=K.priority,N=aa,aa=e.$$element=B(Y.createComment(\" \"+z+\": \"+e[z]+\" \")),d=aa[0],V(g,Za.call(N,0),d),Aa=E(N,f,A,l&&l.name,{nonTlbTranscludeDirective:ea})):(N=B(Tb(d)).contents(),aa.empty(),Aa=E(N,f));if(K.template)if(D=!0,Oa(\"template\",ka,K,aa),ka=K,N=G(K.template)?K.template(aa,e):K.template,N=Sc(N),K.replace){l=K;N=Rb.test(N)?Tc(Wb(K.templateNamespace,U(N))):[];d=N[0];if(1!=N.length||d.nodeType!==\nna)throw ja(\"tplrt\",z,\"\");V(g,aa,d);R={$attr:{}};N=W(d,[],R);var ba=a.splice(M+1,a.length-(M+1));S&&y(N);a=a.concat(N).concat(ba);Qc(e,R);R=a.length}else aa.html(N);if(K.templateUrl)D=!0,Oa(\"template\",ka,K,aa),ka=K,K.replace&&(l=K),v=T(a.splice(M,a.length-M),aa,e,g,ca&&Aa,k,p,{controllerDirectives:J,newIsolateScopeDirective:S,templateDirective:ka,nonTlbTranscludeDirective:ea}),R=a.length;else if(K.compile)try{Q=K.compile(aa,e,Aa),G(Q)?w(null,Q,Pa,fb):Q&&w(Q.pre,Q.post,Pa,fb)}catch(qf){c(qf,va(aa))}K.terminal&&\n(v.terminal=!0,A=Math.max(A,K.priority))}v.scope=P&&!0===P.scope;v.transcludeOnThisElement=ca;v.elementTranscludeOnThisElement=C;v.templateOnThisElement=D;v.transclude=Aa;r.hasElementTranscludeDirective=C;return v}function y(a){for(var b=0,c=a.length;b<c;b++){var d=b,e;e=z(Object.create(a[b]),{$$isolateScope:!0});a[d]=e}}function ca(b,e,f,g,h,l,k){if(e===h)return null;h=null;if(d.hasOwnProperty(e)){var q;e=a.get(e+\"Directive\");for(var r=0,n=e.length;r<n;r++)try{if(q=e[r],(g===t||g>q.priority)&&-1!=\nq.restrict.indexOf(f)){if(l){var w={$$start:l,$$end:k};q=z(Object.create(q),w)}b.push(q);h=q}}catch(O){c(O)}}return h}function D(b){if(d.hasOwnProperty(b))for(var c=a.get(b+\"Directive\"),e=0,f=c.length;e<f;e++)if(b=c[e],b.multiElement)return!0;return!1}function Qc(a,b){var c=b.$attr,d=a.$attr,e=a.$$element;s(a,function(d,e){\"$\"!=e.charAt(0)&&(b[e]&&b[e]!==d&&(d+=(\"style\"===e?\";\":\" \")+b[e]),a.$set(e,d,!0,c[e]))});s(b,function(b,f){\"class\"==f?(P(e,b),a[\"class\"]=(a[\"class\"]?a[\"class\"]+\" \":\"\")+b):\"style\"==\nf?(e.attr(\"style\",e.attr(\"style\")+\";\"+b),a.style=(a.style?a.style+\";\":\"\")+b):\"$\"==f.charAt(0)||a.hasOwnProperty(f)||(a[f]=b,d[f]=c[f])})}function T(a,b,c,d,e,f,g,h){var l=[],k,q,p=b[0],n=a.shift(),w=z({},n,{templateUrl:null,transclude:null,replace:null,$$originalDirective:n}),O=G(n.templateUrl)?n.templateUrl(b,c):n.templateUrl,u=n.templateNamespace;b.empty();r(L.getTrustedResourceUrl(O)).then(function(r){var L,v;r=Sc(r);if(n.replace){r=Rb.test(r)?Tc(Wb(u,U(r))):[];L=r[0];if(1!=r.length||L.nodeType!==\nna)throw ja(\"tplrt\",n.name,O);r={$attr:{}};V(d,b,L);var A=W(L,[],r);H(n.scope)&&y(A);a=A.concat(a);Qc(c,r)}else L=p,b.html(r);a.unshift(w);k=ea(a,L,c,e,b,n,f,g,h);s(d,function(a,c){a==L&&(d[c]=b[0])});for(q=S(b[0].childNodes,e);l.length;){r=l.shift();v=l.shift();var J=l.shift(),E=l.shift(),A=b[0];if(!r.$$destroyed){if(v!==p){var I=v.className;h.hasElementTranscludeDirective&&n.replace||(A=Tb(L));V(J,B(v),A);P(B(A),I)}v=k.transcludeOnThisElement?X(r,k.transclude,E):E;k(q,r,A,d,v)}}l=null});return function(a,\nb,c,d,e){a=e;b.$$destroyed||(l?l.push(b,c,d,a):(k.transcludeOnThisElement&&(a=X(b,k.transclude,e)),k(q,b,c,d,a)))}}function N(a,b){var c=b.priority-a.priority;return 0!==c?c:a.name!==b.name?a.name<b.name?-1:1:a.index-b.index}function Oa(a,b,c,d){if(b)throw ja(\"multidir\",b.name,c.name,a,va(d));}function M(a,c){var d=b(c,!0);d&&a.push({priority:0,compile:function(a){a=a.parent();var b=!!a.length;b&&E.$$addBindingClass(a);return function(a,c){var e=c.parent();b||E.$$addBindingClass(e);E.$$addBindingInfo(e,\nd.expressions);a.$watch(d,function(a){c[0].nodeValue=a})}}})}function Wb(a,b){a=Q(a||\"html\");switch(a){case \"svg\":case \"math\":var c=Y.createElement(\"div\");c.innerHTML=\"<\"+a+\">\"+b+\"</\"+a+\">\";return c.childNodes[0].childNodes;default:return b}}function R(a,b){if(\"srcdoc\"==b)return L.HTML;var c=ua(a);if(\"xlinkHref\"==b||\"form\"==c&&\"action\"==b||\"img\"!=c&&(\"src\"==b||\"ngSrc\"==b))return L.RESOURCE_URL}function Pa(a,c,d,e,f){var h=R(a,e);f=g[e]||f;var k=b(d,!0,h,f);if(k){if(\"multiple\"===e&&\"select\"===ua(a))throw ja(\"selmulti\",\nva(a));c.push({priority:100,compile:function(){return{pre:function(a,c,g){c=g.$$observers||(g.$$observers={});if(l.test(e))throw ja(\"nodomevents\");var p=g[e];p!==d&&(k=p&&b(p,!0,h,f),d=p);k&&(g[e]=k(a),(c[e]||(c[e]=[])).$$inter=!0,(g.$$observers&&g.$$observers[e].$$scope||a).$watch(k,function(a,b){\"class\"===e&&a!=b?g.$updateClass(a,b):g.$set(e,a)}))}}}})}}function V(a,b,c){var d=b[0],e=b.length,f=d.parentNode,g,h;if(a)for(g=0,h=a.length;g<h;g++)if(a[g]==d){a[g++]=c;h=g+e-1;for(var l=a.length;g<l;g++,\nh++)h<l?a[g]=a[h]:delete a[g];a.length-=e-1;a.context===d&&(a.context=c);break}f&&f.replaceChild(c,d);a=Y.createDocumentFragment();a.appendChild(d);B(c).data(B(d).data());ra?(Pb=!0,ra.cleanData([d])):delete B.cache[d[B.expando]];d=1;for(e=b.length;d<e;d++)f=b[d],B(f).remove(),a.appendChild(f),delete b[d];b[0]=c;b.length=1}function Z(a,b){return z(function(){return a.apply(null,arguments)},a,b)}function $(a,b,d,e,f,g){try{a(b,d,e,f,g)}catch(h){c(h,va(d))}}var Xb=function(a,b){if(b){var c=Object.keys(b),\nd,e,f;d=0;for(e=c.length;d<e;d++)f=c[d],this[f]=b[f]}else this.$attr={};this.$$element=a};Xb.prototype={$normalize:ya,$addClass:function(a){a&&0<a.length&&J.addClass(this.$$element,a)},$removeClass:function(a){a&&0<a.length&&J.removeClass(this.$$element,a)},$updateClass:function(a,b){var c=Uc(a,b);c&&c.length&&J.addClass(this.$$element,c);(c=Uc(b,a))&&c.length&&J.removeClass(this.$$element,c)},$set:function(a,b,d,e){var f=this.$$element[0],g=Lc(f,a),h=kf(f,a),f=a;g?(this.$$element.prop(a,b),e=g):\nh&&(this[h]=b,f=h);this[a]=b;e?this.$attr[a]=e:(e=this.$attr[a])||(this.$attr[a]=e=tc(a,\"-\"));g=ua(this.$$element);if(\"a\"===g&&\"href\"===a||\"img\"===g&&\"src\"===a)this[a]=b=A(b,\"src\"===a);else if(\"img\"===g&&\"srcset\"===a){for(var g=\"\",h=U(b),l=/(\\s+\\d+x\\s*,|\\s+\\d+w\\s*,|\\s+,|,\\s+)/,l=/\\s/.test(h)?l:/(,)/,h=h.split(l),l=Math.floor(h.length/2),k=0;k<l;k++)var q=2*k,g=g+A(U(h[q]),!0),g=g+(\" \"+U(h[q+1]));h=U(h[2*k]).split(/\\s/);g+=A(U(h[0]),!0);2===h.length&&(g+=\" \"+U(h[1]));this[a]=b=g}!1!==d&&(null===b||\nb===t?this.$$element.removeAttr(e):this.$$element.attr(e,b));(a=this.$$observers)&&s(a[f],function(a){try{a(b)}catch(d){c(d)}})},$observe:function(a,b){var c=this,d=c.$$observers||(c.$$observers=ha()),e=d[a]||(d[a]=[]);e.push(b);v.$evalAsync(function(){!e.$$inter&&c.hasOwnProperty(a)&&b(c[a])});return function(){Xa(e,b)}}};var Aa=b.startSymbol(),ka=b.endSymbol(),Sc=\"{{\"==Aa||\"}}\"==ka?oa:function(a){return a.replace(/\\{\\{/g,Aa).replace(/}}/g,ka)},fb=/^ngAttr[A-Z]/;E.$$addBindingInfo=k?function(a,b){var c=\na.data(\"$binding\")||[];x(b)?c=c.concat(b):c.push(b);a.data(\"$binding\",c)}:C;E.$$addBindingClass=k?function(a){P(a,\"ng-binding\")}:C;E.$$addScopeInfo=k?function(a,b,c,d){a.data(c?d?\"$isolateScopeNoTemplate\":\"$isolateScope\":\"$scope\",b)}:C;E.$$addScopeClass=k?function(a,b){P(a,b?\"ng-isolate-scope\":\"ng-scope\")}:C;return E}]}function ya(b){return cb(b.replace(Rc,\"\"))}function Uc(b,a){var c=\"\",d=b.split(/\\s+/),e=a.split(/\\s+/),f=0;a:for(;f<d.length;f++){for(var g=d[f],h=0;h<e.length;h++)if(g==e[h])continue a;\nc+=(0<c.length?\" \":\"\")+g}return c}function Tc(b){b=B(b);var a=b.length;if(1>=a)return b;for(;a--;)8===b[a].nodeType&&rf.call(b,a,1);return b}function Fe(){var b={},a=!1,c=/^(\\S+)(\\s+as\\s+(\\w+))?$/;this.register=function(a,c){Ma(a,\"controller\");H(a)?z(b,a):b[a]=c};this.allowGlobals=function(){a=!0};this.$get=[\"$injector\",\"$window\",function(d,e){function f(a,b,c,d){if(!a||!H(a.$scope))throw T(\"$controller\")(\"noscp\",d,b);a.$scope[b]=c}return function(g,h,l,k){var m,p,q;l=!0===l;k&&F(k)&&(q=k);F(g)&&\n(k=g.match(c),p=k[1],q=q||k[3],g=b.hasOwnProperty(p)?b[p]:vc(h.$scope,p,!0)||(a?vc(e,p,!0):t),sb(g,p,!0));if(l)return l=(x(g)?g[g.length-1]:g).prototype,m=Object.create(l),q&&f(h,q,m,p||g.name),z(function(){d.invoke(g,m,h,p);return m},{instance:m,identifier:q});m=d.instantiate(g,h,p);q&&f(h,q,m,p||g.name);return m}}]}function Ge(){this.$get=[\"$window\",function(b){return B(b.document)}]}function He(){this.$get=[\"$log\",function(b){return function(a,c){b.error.apply(b,arguments)}}]}function Yb(b,a){if(F(b)){var c=\nb.replace(sf,\"\").trim();if(c){var d=a(\"Content-Type\");(d=d&&0===d.indexOf(Vc))||(d=(d=c.match(tf))&&uf[d[0]].test(c));d&&(b=oc(c))}}return b}function Wc(b){var a=ha(),c,d,e;if(!b)return a;s(b.split(\"\\n\"),function(b){e=b.indexOf(\":\");c=Q(U(b.substr(0,e)));d=U(b.substr(e+1));c&&(a[c]=a[c]?a[c]+\", \"+d:d)});return a}function Xc(b){var a=H(b)?b:t;return function(c){a||(a=Wc(b));return c?(c=a[Q(c)],void 0===c&&(c=null),c):a}}function Yc(b,a,c,d){if(G(d))return d(b,a,c);s(d,function(d){b=d(b,a,c)});return b}\nfunction Ke(){var b=this.defaults={transformResponse:[Yb],transformRequest:[function(a){return H(a)&&\"[object File]\"!==Da.call(a)&&\"[object Blob]\"!==Da.call(a)&&\"[object FormData]\"!==Da.call(a)?$a(a):a}],headers:{common:{Accept:\"application/json, text/plain, */*\"},post:qa(Zb),put:qa(Zb),patch:qa(Zb)},xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\"},a=!1;this.useApplyAsync=function(b){return y(b)?(a=!!b,this):a};var c=this.interceptors=[];this.$get=[\"$httpBackend\",\"$browser\",\"$cacheFactory\",\n\"$rootScope\",\"$q\",\"$injector\",function(d,e,f,g,h,l){function k(a){function c(a){var b=z({},a);b.data=a.data?Yc(a.data,a.headers,a.status,e.transformResponse):a.data;a=a.status;return 200<=a&&300>a?b:h.reject(b)}function d(a){var b,c={};s(a,function(a,d){G(a)?(b=a(),null!=b&&(c[d]=b)):c[d]=a});return c}if(!ga.isObject(a))throw T(\"$http\")(\"badreq\",a);var e=z({method:\"get\",transformRequest:b.transformRequest,transformResponse:b.transformResponse},a);e.headers=function(a){var c=b.headers,e=z({},a.headers),\nf,g,c=z({},c.common,c[Q(a.method)]);a:for(f in c){a=Q(f);for(g in e)if(Q(g)===a)continue a;e[f]=c[f]}return d(e)}(a);e.method=ub(e.method);var f=[function(a){var d=a.headers,e=Yc(a.data,Xc(d),t,a.transformRequest);D(e)&&s(d,function(a,b){\"content-type\"===Q(b)&&delete d[b]});D(a.withCredentials)&&!D(b.withCredentials)&&(a.withCredentials=b.withCredentials);return m(a,e).then(c,c)},t],g=h.when(e);for(s(u,function(a){(a.request||a.requestError)&&f.unshift(a.request,a.requestError);(a.response||a.responseError)&&\nf.push(a.response,a.responseError)});f.length;){a=f.shift();var l=f.shift(),g=g.then(a,l)}g.success=function(a){g.then(function(b){a(b.data,b.status,b.headers,e)});return g};g.error=function(a){g.then(null,function(b){a(b.data,b.status,b.headers,e)});return g};return g}function m(c,f){function l(b,c,d,e){function f(){m(c,b,d,e)}P&&(200<=b&&300>b?P.put(X,[b,c,Wc(d),e]):P.remove(X));a?g.$applyAsync(f):(f(),g.$$phase||g.$apply())}function m(a,b,d,e){b=Math.max(b,0);(200<=b&&300>b?J.resolve:J.reject)({data:a,\nstatus:b,headers:Xc(d),config:c,statusText:e})}function w(a){m(a.data,a.status,qa(a.headers()),a.statusText)}function u(){var a=k.pendingRequests.indexOf(c);-1!==a&&k.pendingRequests.splice(a,1)}var J=h.defer(),A=J.promise,P,E,s=c.headers,X=p(c.url,c.params);k.pendingRequests.push(c);A.then(u,u);!c.cache&&!b.cache||!1===c.cache||\"GET\"!==c.method&&\"JSONP\"!==c.method||(P=H(c.cache)?c.cache:H(b.cache)?b.cache:q);P&&(E=P.get(X),y(E)?E&&G(E.then)?E.then(w,w):x(E)?m(E[1],E[0],qa(E[2]),E[3]):m(E,200,{},\n\"OK\"):P.put(X,A));D(E)&&((E=Zc(c.url)?e.cookies()[c.xsrfCookieName||b.xsrfCookieName]:t)&&(s[c.xsrfHeaderName||b.xsrfHeaderName]=E),d(c.method,X,f,l,s,c.timeout,c.withCredentials,c.responseType));return A}function p(a,b){if(!b)return a;var c=[];Ed(b,function(a,b){null===a||D(a)||(x(a)||(a=[a]),s(a,function(a){H(a)&&(a=pa(a)?a.toISOString():$a(a));c.push(Fa(b)+\"=\"+Fa(a))}))});0<c.length&&(a+=(-1==a.indexOf(\"?\")?\"?\":\"&\")+c.join(\"&\"));return a}var q=f(\"$http\"),u=[];s(c,function(a){u.unshift(F(a)?l.get(a):\nl.invoke(a))});k.pendingRequests=[];(function(a){s(arguments,function(a){k[a]=function(b,c){return k(z(c||{},{method:a,url:b}))}})})(\"get\",\"delete\",\"head\",\"jsonp\");(function(a){s(arguments,function(a){k[a]=function(b,c,d){return k(z(d||{},{method:a,url:b,data:c}))}})})(\"post\",\"put\",\"patch\");k.defaults=b;return k}]}function vf(){return new M.XMLHttpRequest}function Le(){this.$get=[\"$browser\",\"$window\",\"$document\",function(b,a,c){return wf(b,vf,b.defer,a.angular.callbacks,c[0])}]}function wf(b,a,c,\nd,e){function f(a,b,c){var f=e.createElement(\"script\"),m=null;f.type=\"text/javascript\";f.src=a;f.async=!0;m=function(a){f.removeEventListener(\"load\",m,!1);f.removeEventListener(\"error\",m,!1);e.body.removeChild(f);f=null;var g=-1,u=\"unknown\";a&&(\"load\"!==a.type||d[b].called||(a={type:\"error\"}),u=a.type,g=\"error\"===a.type?404:200);c&&c(g,u)};f.addEventListener(\"load\",m,!1);f.addEventListener(\"error\",m,!1);e.body.appendChild(f);return m}return function(e,h,l,k,m,p,q,u){function r(){v&&v();w&&w.abort()}\nfunction O(a,d,e,f,g){J!==t&&c.cancel(J);v=w=null;a(d,e,f,g);b.$$completeOutstandingRequest(C)}b.$$incOutstandingRequestCount();h=h||b.url();if(\"jsonp\"==Q(e)){var n=\"_\"+(d.counter++).toString(36);d[n]=function(a){d[n].data=a;d[n].called=!0};var v=f(h.replace(\"JSON_CALLBACK\",\"angular.callbacks.\"+n),n,function(a,b){O(k,a,d[n].data,\"\",b);d[n]=C})}else{var w=a();w.open(e,h,!0);s(m,function(a,b){y(a)&&w.setRequestHeader(b,a)});w.onload=function(){var a=w.statusText||\"\",b=\"response\"in w?w.response:w.responseText,\nc=1223===w.status?204:w.status;0===c&&(c=b?200:\"file\"==Ba(h).protocol?404:0);O(k,c,b,w.getAllResponseHeaders(),a)};e=function(){O(k,-1,null,null,\"\")};w.onerror=e;w.onabort=e;q&&(w.withCredentials=!0);if(u)try{w.responseType=u}catch(L){if(\"json\"!==u)throw L;}w.send(l||null)}if(0<p)var J=c(r,p);else p&&G(p.then)&&p.then(r)}}function Ie(){var b=\"{{\",a=\"}}\";this.startSymbol=function(a){return a?(b=a,this):b};this.endSymbol=function(b){return b?(a=b,this):a};this.$get=[\"$parse\",\"$exceptionHandler\",\"$sce\",\nfunction(c,d,e){function f(a){return\"\\\\\\\\\\\\\"+a}function g(f,g,u,r){function O(c){return c.replace(k,b).replace(m,a)}function n(a){try{var b=a;a=u?e.getTrusted(u,b):e.valueOf(b);var c;if(r&&!y(a))c=a;else if(null==a)c=\"\";else{switch(typeof a){case \"string\":break;case \"number\":a=\"\"+a;break;default:a=$a(a)}c=a}return c}catch(g){c=$b(\"interr\",f,g.toString()),d(c)}}r=!!r;for(var v,w,L=0,J=[],A=[],P=f.length,E=[],s=[];L<P;)if(-1!=(v=f.indexOf(b,L))&&-1!=(w=f.indexOf(a,v+h)))L!==v&&E.push(O(f.substring(L,\nv))),L=f.substring(v+h,w),J.push(L),A.push(c(L,n)),L=w+l,s.push(E.length),E.push(\"\");else{L!==P&&E.push(O(f.substring(L)));break}if(u&&1<E.length)throw $b(\"noconcat\",f);if(!g||J.length){var X=function(a){for(var b=0,c=J.length;b<c;b++){if(r&&D(a[b]))return;E[s[b]]=a[b]}return E.join(\"\")};return z(function(a){var b=0,c=J.length,e=Array(c);try{for(;b<c;b++)e[b]=A[b](a);return X(e)}catch(g){a=$b(\"interr\",f,g.toString()),d(a)}},{exp:f,expressions:J,$$watchDelegate:function(a,b,c){var d;return a.$watchGroup(A,\nfunction(c,e){var f=X(c);G(b)&&b.call(this,f,c!==e?d:f,a);d=f},c)}})}}var h=b.length,l=a.length,k=new RegExp(b.replace(/./g,f),\"g\"),m=new RegExp(a.replace(/./g,f),\"g\");g.startSymbol=function(){return b};g.endSymbol=function(){return a};return g}]}function Je(){this.$get=[\"$rootScope\",\"$window\",\"$q\",\"$$q\",function(b,a,c,d){function e(e,h,l,k){var m=a.setInterval,p=a.clearInterval,q=0,u=y(k)&&!k,r=(u?d:c).defer(),O=r.promise;l=y(l)?l:0;O.then(null,null,e);O.$$intervalId=m(function(){r.notify(q++);0<\nl&&q>=l&&(r.resolve(q),p(O.$$intervalId),delete f[O.$$intervalId]);u||b.$apply()},h);f[O.$$intervalId]=r;return O}var f={};e.cancel=function(b){return b&&b.$$intervalId in f?(f[b.$$intervalId].reject(\"canceled\"),a.clearInterval(b.$$intervalId),delete f[b.$$intervalId],!0):!1};return e}]}function Rd(){this.$get=function(){return{id:\"en-us\",NUMBER_FORMATS:{DECIMAL_SEP:\".\",GROUP_SEP:\",\",PATTERNS:[{minInt:1,minFrac:0,maxFrac:3,posPre:\"\",posSuf:\"\",negPre:\"-\",negSuf:\"\",gSize:3,lgSize:3},{minInt:1,minFrac:2,\nmaxFrac:2,posPre:\"\\u00a4\",posSuf:\"\",negPre:\"(\\u00a4\",negSuf:\")\",gSize:3,lgSize:3}],CURRENCY_SYM:\"$\"},DATETIME_FORMATS:{MONTH:\"January February March April May June July August September October November December\".split(\" \"),SHORTMONTH:\"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\".split(\" \"),DAY:\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),SHORTDAY:\"Sun Mon Tue Wed Thu Fri Sat\".split(\" \"),AMPMS:[\"AM\",\"PM\"],medium:\"MMM d, y h:mm:ss a\",\"short\":\"M/d/yy h:mm a\",fullDate:\"EEEE, MMMM d, y\",\nlongDate:\"MMMM d, y\",mediumDate:\"MMM d, y\",shortDate:\"M/d/yy\",mediumTime:\"h:mm:ss a\",shortTime:\"h:mm a\"},pluralCat:function(b){return 1===b?\"one\":\"other\"}}}}function ac(b){b=b.split(\"/\");for(var a=b.length;a--;)b[a]=qb(b[a]);return b.join(\"/\")}function $c(b,a){var c=Ba(b);a.$$protocol=c.protocol;a.$$host=c.hostname;a.$$port=ba(c.port)||xf[c.protocol]||null}function ad(b,a){var c=\"/\"!==b.charAt(0);c&&(b=\"/\"+b);var d=Ba(b);a.$$path=decodeURIComponent(c&&\"/\"===d.pathname.charAt(0)?d.pathname.substring(1):\nd.pathname);a.$$search=qc(d.search);a.$$hash=decodeURIComponent(d.hash);a.$$path&&\"/\"!=a.$$path.charAt(0)&&(a.$$path=\"/\"+a.$$path)}function za(b,a){if(0===a.indexOf(b))return a.substr(b.length)}function Ha(b){var a=b.indexOf(\"#\");return-1==a?b:b.substr(0,a)}function bd(b){return b.replace(/(#.+)|#$/,\"$1\")}function bc(b){return b.substr(0,Ha(b).lastIndexOf(\"/\")+1)}function cc(b,a){this.$$html5=!0;a=a||\"\";var c=bc(b);$c(b,this);this.$$parse=function(a){var b=za(c,a);if(!F(b))throw Fb(\"ipthprfx\",a,c);\nad(b,this);this.$$path||(this.$$path=\"/\");this.$$compose()};this.$$compose=function(){var a=Nb(this.$$search),b=this.$$hash?\"#\"+qb(this.$$hash):\"\";this.$$url=ac(this.$$path)+(a?\"?\"+a:\"\")+b;this.$$absUrl=c+this.$$url.substr(1)};this.$$parseLinkUrl=function(d,e){if(e&&\"#\"===e[0])return this.hash(e.slice(1)),!0;var f,g;(f=za(b,d))!==t?(g=f,g=(f=za(a,f))!==t?c+(za(\"/\",f)||f):b+g):(f=za(c,d))!==t?g=c+f:c==d+\"/\"&&(g=c);g&&this.$$parse(g);return!!g}}function dc(b,a){var c=bc(b);$c(b,this);this.$$parse=function(d){d=\nza(b,d)||za(c,d);var e;\"#\"===d.charAt(0)?(e=za(a,d),D(e)&&(e=d)):e=this.$$html5?d:\"\";ad(e,this);d=this.$$path;var f=/^\\/[A-Z]:(\\/.*)/;0===e.indexOf(b)&&(e=e.replace(b,\"\"));f.exec(e)||(d=(e=f.exec(d))?e[1]:d);this.$$path=d;this.$$compose()};this.$$compose=function(){var c=Nb(this.$$search),e=this.$$hash?\"#\"+qb(this.$$hash):\"\";this.$$url=ac(this.$$path)+(c?\"?\"+c:\"\")+e;this.$$absUrl=b+(this.$$url?a+this.$$url:\"\")};this.$$parseLinkUrl=function(a,c){return Ha(b)==Ha(a)?(this.$$parse(a),!0):!1}}function cd(b,\na){this.$$html5=!0;dc.apply(this,arguments);var c=bc(b);this.$$parseLinkUrl=function(d,e){if(e&&\"#\"===e[0])return this.hash(e.slice(1)),!0;var f,g;b==Ha(d)?f=d:(g=za(c,d))?f=b+a+g:c===d+\"/\"&&(f=c);f&&this.$$parse(f);return!!f};this.$$compose=function(){var c=Nb(this.$$search),e=this.$$hash?\"#\"+qb(this.$$hash):\"\";this.$$url=ac(this.$$path)+(c?\"?\"+c:\"\")+e;this.$$absUrl=b+a+this.$$url}}function Gb(b){return function(){return this[b]}}function dd(b,a){return function(c){if(D(c))return this[b];this[b]=\na(c);this.$$compose();return this}}function Me(){var b=\"\",a={enabled:!1,requireBase:!0,rewriteLinks:!0};this.hashPrefix=function(a){return y(a)?(b=a,this):b};this.html5Mode=function(b){return Wa(b)?(a.enabled=b,this):H(b)?(Wa(b.enabled)&&(a.enabled=b.enabled),Wa(b.requireBase)&&(a.requireBase=b.requireBase),Wa(b.rewriteLinks)&&(a.rewriteLinks=b.rewriteLinks),this):a};this.$get=[\"$rootScope\",\"$browser\",\"$sniffer\",\"$rootElement\",\"$window\",function(c,d,e,f,g){function h(a,b,c){var e=k.url(),f=k.$$state;\ntry{d.url(a,b,c),k.$$state=d.state()}catch(g){throw k.url(e),k.$$state=f,g;}}function l(a,b){c.$broadcast(\"$locationChangeSuccess\",k.absUrl(),a,k.$$state,b)}var k,m;m=d.baseHref();var p=d.url(),q;if(a.enabled){if(!m&&a.requireBase)throw Fb(\"nobase\");q=p.substring(0,p.indexOf(\"/\",p.indexOf(\"//\")+2))+(m||\"/\");m=e.history?cc:cd}else q=Ha(p),m=dc;k=new m(q,\"#\"+b);k.$$parseLinkUrl(p,p);k.$$state=d.state();var u=/^\\s*(javascript|mailto):/i;f.on(\"click\",function(b){if(a.rewriteLinks&&!b.ctrlKey&&!b.metaKey&&\n2!=b.which){for(var e=B(b.target);\"a\"!==ua(e[0]);)if(e[0]===f[0]||!(e=e.parent())[0])return;var h=e.prop(\"href\"),l=e.attr(\"href\")||e.attr(\"xlink:href\");H(h)&&\"[object SVGAnimatedString]\"===h.toString()&&(h=Ba(h.animVal).href);u.test(h)||!h||e.attr(\"target\")||b.isDefaultPrevented()||!k.$$parseLinkUrl(h,l)||(b.preventDefault(),k.absUrl()!=d.url()&&(c.$apply(),g.angular[\"ff-684208-preventDefault\"]=!0))}});k.absUrl()!=p&&d.url(k.absUrl(),!0);var r=!0;d.onUrlChange(function(a,b){c.$evalAsync(function(){var d=\nk.absUrl(),e=k.$$state,f;k.$$parse(a);k.$$state=b;f=c.$broadcast(\"$locationChangeStart\",a,d,b,e).defaultPrevented;k.absUrl()===a&&(f?(k.$$parse(d),k.$$state=e,h(d,!1,e)):(r=!1,l(d,e)))});c.$$phase||c.$digest()});c.$watch(function(){var a=bd(d.url()),b=bd(k.absUrl()),f=d.state(),g=k.$$replace,q=a!==b||k.$$html5&&e.history&&f!==k.$$state;if(r||q)r=!1,c.$evalAsync(function(){var b=k.absUrl(),d=c.$broadcast(\"$locationChangeStart\",b,a,k.$$state,f).defaultPrevented;k.absUrl()===b&&(d?(k.$$parse(a),k.$$state=\nf):(q&&h(b,g,f===k.$$state?null:k.$$state),l(a,f)))});k.$$replace=!1});return k}]}function Ne(){var b=!0,a=this;this.debugEnabled=function(a){return y(a)?(b=a,this):b};this.$get=[\"$window\",function(c){function d(a){a instanceof Error&&(a.stack?a=a.message&&-1===a.stack.indexOf(a.message)?\"Error: \"+a.message+\"\\n\"+a.stack:a.stack:a.sourceURL&&(a=a.message+\"\\n\"+a.sourceURL+\":\"+a.line));return a}function e(a){var b=c.console||{},e=b[a]||b.log||C;a=!1;try{a=!!e.apply}catch(l){}return a?function(){var a=\n[];s(arguments,function(b){a.push(d(b))});return e.apply(b,a)}:function(a,b){e(a,null==b?\"\":b)}}return{log:e(\"log\"),info:e(\"info\"),warn:e(\"warn\"),error:e(\"error\"),debug:function(){var c=e(\"debug\");return function(){b&&c.apply(a,arguments)}}()}}]}function sa(b,a){if(\"__defineGetter__\"===b||\"__defineSetter__\"===b||\"__lookupGetter__\"===b||\"__lookupSetter__\"===b||\"__proto__\"===b)throw la(\"isecfld\",a);return b}function ta(b,a){if(b){if(b.constructor===b)throw la(\"isecfn\",a);if(b.window===b)throw la(\"isecwindow\",\na);if(b.children&&(b.nodeName||b.prop&&b.attr&&b.find))throw la(\"isecdom\",a);if(b===Object)throw la(\"isecobj\",a);}return b}function ec(b){return b.constant}function gb(b,a,c,d){ta(b,d);a=a.split(\".\");for(var e,f=0;1<a.length;f++){e=sa(a.shift(),d);var g=ta(b[e],d);g||(g={},b[e]=g);b=g}e=sa(a.shift(),d);ta(b[e],d);return b[e]=c}function Qa(b){return\"constructor\"==b}function ed(b,a,c,d,e,f,g){sa(b,f);sa(a,f);sa(c,f);sa(d,f);sa(e,f);var h=function(a){return ta(a,f)},l=g||Qa(b)?h:oa,k=g||Qa(a)?h:oa,m=\ng||Qa(c)?h:oa,p=g||Qa(d)?h:oa,q=g||Qa(e)?h:oa;return function(f,g){var h=g&&g.hasOwnProperty(b)?g:f;if(null==h)return h;h=l(h[b]);if(!a)return h;if(null==h)return t;h=k(h[a]);if(!c)return h;if(null==h)return t;h=m(h[c]);if(!d)return h;if(null==h)return t;h=p(h[d]);return e?null==h?t:h=q(h[e]):h}}function yf(b,a){return function(c,d){return b(c,d,ta,a)}}function zf(b,a,c){var d=a.expensiveChecks,e=d?Af:Bf,f=e[b];if(f)return f;var g=b.split(\".\"),h=g.length;if(a.csp)f=6>h?ed(g[0],g[1],g[2],g[3],g[4],\nc,d):function(a,b){var e=0,f;do f=ed(g[e++],g[e++],g[e++],g[e++],g[e++],c,d)(a,b),b=t,a=f;while(e<h);return f};else{var l=\"\";d&&(l+=\"s = eso(s, fe);\\nl = eso(l, fe);\\n\");var k=d;s(g,function(a,b){sa(a,c);var e=(b?\"s\":'((l&&l.hasOwnProperty(\"'+a+'\"))?l:s)')+\".\"+a;if(d||Qa(a))e=\"eso(\"+e+\", fe)\",k=!0;l+=\"if(s == null) return undefined;\\ns=\"+e+\";\\n\"});l+=\"return s;\";a=new Function(\"s\",\"l\",\"eso\",\"fe\",l);a.toString=da(l);k&&(a=yf(a,c));f=a}f.sharedGetter=!0;f.assign=function(a,c){return gb(a,b,c,b)};return e[b]=\nf}function fc(b){return G(b.valueOf)?b.valueOf():Cf.call(b)}function Oe(){var b=ha(),a=ha();this.$get=[\"$filter\",\"$sniffer\",function(c,d){function e(a){var b=a;a.sharedGetter&&(b=function(b,c){return a(b,c)},b.literal=a.literal,b.constant=a.constant,b.assign=a.assign);return b}function f(a,b){for(var c=0,d=a.length;c<d;c++){var e=a[c];e.constant||(e.inputs?f(e.inputs,b):-1===b.indexOf(e)&&b.push(e))}return b}function g(a,b){return null==a||null==b?a===b:\"object\"===typeof a&&(a=fc(a),\"object\"===typeof a)?\n!1:a===b||a!==a&&b!==b}function h(a,b,c,d){var e=d.$$inputs||(d.$$inputs=f(d.inputs,[])),h;if(1===e.length){var l=g,e=e[0];return a.$watch(function(a){var b=e(a);g(b,l)||(h=d(a),l=b&&fc(b));return h},b,c)}for(var k=[],q=0,p=e.length;q<p;q++)k[q]=g;return a.$watch(function(a){for(var b=!1,c=0,f=e.length;c<f;c++){var l=e[c](a);if(b||(b=!g(l,k[c])))k[c]=l&&fc(l)}b&&(h=d(a));return h},b,c)}function l(a,b,c,d){var e,f;return e=a.$watch(function(a){return d(a)},function(a,c,d){f=a;G(b)&&b.apply(this,arguments);\ny(a)&&d.$$postDigest(function(){y(f)&&e()})},c)}function k(a,b,c,d){function e(a){var b=!0;s(a,function(a){y(a)||(b=!1)});return b}var f,g;return f=a.$watch(function(a){return d(a)},function(a,c,d){g=a;G(b)&&b.call(this,a,c,d);e(a)&&d.$$postDigest(function(){e(g)&&f()})},c)}function m(a,b,c,d){var e;return e=a.$watch(function(a){return d(a)},function(a,c,d){G(b)&&b.apply(this,arguments);e()},c)}function p(a,b){if(!b)return a;var c=a.$$watchDelegate,c=c!==k&&c!==l?function(c,d){var e=a(c,d);return b(e,\nc,d)}:function(c,d){var e=a(c,d),f=b(e,c,d);return y(e)?f:e};a.$$watchDelegate&&a.$$watchDelegate!==h?c.$$watchDelegate=a.$$watchDelegate:b.$stateful||(c.$$watchDelegate=h,c.inputs=[a]);return c}var q={csp:d.csp,expensiveChecks:!1},u={csp:d.csp,expensiveChecks:!0};return function(d,f,g){var v,w,L;switch(typeof d){case \"string\":L=d=d.trim();var J=g?a:b;v=J[L];v||(\":\"===d.charAt(0)&&\":\"===d.charAt(1)&&(w=!0,d=d.substring(2)),g=g?u:q,v=new gc(g),v=(new hb(v,c,g)).parse(d),v.constant?v.$$watchDelegate=\nm:w?(v=e(v),v.$$watchDelegate=v.literal?k:l):v.inputs&&(v.$$watchDelegate=h),J[L]=v);return p(v,f);case \"function\":return p(d,f);default:return p(C,f)}}}]}function Qe(){this.$get=[\"$rootScope\",\"$exceptionHandler\",function(b,a){return fd(function(a){b.$evalAsync(a)},a)}]}function Re(){this.$get=[\"$browser\",\"$exceptionHandler\",function(b,a){return fd(function(a){b.defer(a)},a)}]}function fd(b,a){function c(a,b,c){function d(b){return function(c){e||(e=!0,b.call(a,c))}}var e=!1;return[d(b),d(c)]}function d(){this.$$state=\n{status:0}}function e(a,b){return function(c){b.call(a,c)}}function f(c){!c.processScheduled&&c.pending&&(c.processScheduled=!0,b(function(){var b,d,e;e=c.pending;c.processScheduled=!1;c.pending=t;for(var f=0,g=e.length;f<g;++f){d=e[f][0];b=e[f][c.status];try{G(b)?d.resolve(b(c.value)):1===c.status?d.resolve(c.value):d.reject(c.value)}catch(h){d.reject(h),a(h)}}}))}function g(){this.promise=new d;this.resolve=e(this,this.resolve);this.reject=e(this,this.reject);this.notify=e(this,this.notify)}var h=\nT(\"$q\",TypeError);d.prototype={then:function(a,b,c){var d=new g;this.$$state.pending=this.$$state.pending||[];this.$$state.pending.push([d,a,b,c]);0<this.$$state.status&&f(this.$$state);return d.promise},\"catch\":function(a){return this.then(null,a)},\"finally\":function(a,b){return this.then(function(b){return k(b,!0,a)},function(b){return k(b,!1,a)},b)}};g.prototype={resolve:function(a){this.promise.$$state.status||(a===this.promise?this.$$reject(h(\"qcycle\",a)):this.$$resolve(a))},$$resolve:function(b){var d,\ne;e=c(this,this.$$resolve,this.$$reject);try{if(H(b)||G(b))d=b&&b.then;G(d)?(this.promise.$$state.status=-1,d.call(b,e[0],e[1],this.notify)):(this.promise.$$state.value=b,this.promise.$$state.status=1,f(this.promise.$$state))}catch(g){e[1](g),a(g)}},reject:function(a){this.promise.$$state.status||this.$$reject(a)},$$reject:function(a){this.promise.$$state.value=a;this.promise.$$state.status=2;f(this.promise.$$state)},notify:function(c){var d=this.promise.$$state.pending;0>=this.promise.$$state.status&&\nd&&d.length&&b(function(){for(var b,e,f=0,g=d.length;f<g;f++){e=d[f][0];b=d[f][3];try{e.notify(G(b)?b(c):c)}catch(h){a(h)}}})}};var l=function(a,b){var c=new g;b?c.resolve(a):c.reject(a);return c.promise},k=function(a,b,c){var d=null;try{G(c)&&(d=c())}catch(e){return l(e,!1)}return d&&G(d.then)?d.then(function(){return l(a,b)},function(a){return l(a,!1)}):l(a,b)},m=function(a,b,c,d){var e=new g;e.resolve(a);return e.promise.then(b,c,d)},p=function u(a){if(!G(a))throw h(\"norslvr\",a);if(!(this instanceof\nu))return new u(a);var b=new g;a(function(a){b.resolve(a)},function(a){b.reject(a)});return b.promise};p.defer=function(){return new g};p.reject=function(a){var b=new g;b.reject(a);return b.promise};p.when=m;p.all=function(a){var b=new g,c=0,d=x(a)?[]:{};s(a,function(a,e){c++;m(a).then(function(a){d.hasOwnProperty(e)||(d[e]=a,--c||b.resolve(d))},function(a){d.hasOwnProperty(e)||b.reject(a)})});0===c&&b.resolve(d);return b.promise};return p}function $e(){this.$get=[\"$window\",\"$timeout\",function(b,\na){var c=b.requestAnimationFrame||b.webkitRequestAnimationFrame,d=b.cancelAnimationFrame||b.webkitCancelAnimationFrame||b.webkitCancelRequestAnimationFrame,e=!!c,f=e?function(a){var b=c(a);return function(){d(b)}}:function(b){var c=a(b,16.66,!1);return function(){a.cancel(c)}};f.supported=e;return f}]}function Pe(){var b=10,a=T(\"$rootScope\"),c=null,d=null;this.digestTtl=function(a){arguments.length&&(b=a);return b};this.$get=[\"$injector\",\"$exceptionHandler\",\"$parse\",\"$browser\",function(e,f,g,h){function l(){this.$id=\n++nb;this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null;this.$root=this;this.$$destroyed=!1;this.$$listeners={};this.$$listenerCount={};this.$$isolateBindings=null}function k(b){if(r.$$phase)throw a(\"inprog\",r.$$phase);r.$$phase=b}function m(a,b,c){do a.$$listenerCount[c]-=b,0===a.$$listenerCount[c]&&delete a.$$listenerCount[c];while(a=a.$parent)}function p(){}function q(){for(;v.length;)try{v.shift()()}catch(a){f(a)}d=null}function u(){null===\nd&&(d=h.defer(function(){r.$apply(q)}))}l.prototype={constructor:l,$new:function(a,b){function c(){d.$$destroyed=!0}var d;b=b||this;a?(d=new l,d.$root=this.$root):(this.$$ChildScope||(this.$$ChildScope=function(){this.$$watchers=this.$$nextSibling=this.$$childHead=this.$$childTail=null;this.$$listeners={};this.$$listenerCount={};this.$id=++nb;this.$$ChildScope=null},this.$$ChildScope.prototype=this),d=new this.$$ChildScope);d.$parent=b;d.$$prevSibling=b.$$childTail;b.$$childHead?(b.$$childTail.$$nextSibling=\nd,b.$$childTail=d):b.$$childHead=b.$$childTail=d;(a||b!=this)&&d.$on(\"$destroy\",c);return d},$watch:function(a,b,d){var e=g(a);if(e.$$watchDelegate)return e.$$watchDelegate(this,b,d,e);var f=this.$$watchers,h={fn:b,last:p,get:e,exp:a,eq:!!d};c=null;G(b)||(h.fn=C);f||(f=this.$$watchers=[]);f.unshift(h);return function(){Xa(f,h);c=null}},$watchGroup:function(a,b){function c(){h=!1;l?(l=!1,b(e,e,g)):b(e,d,g)}var d=Array(a.length),e=Array(a.length),f=[],g=this,h=!1,l=!0;if(!a.length){var k=!0;g.$evalAsync(function(){k&&\nb(e,e,g)});return function(){k=!1}}if(1===a.length)return this.$watch(a[0],function(a,c,f){e[0]=a;d[0]=c;b(e,a===c?e:d,f)});s(a,function(a,b){var l=g.$watch(a,function(a,f){e[b]=a;d[b]=f;h||(h=!0,g.$evalAsync(c))});f.push(l)});return function(){for(;f.length;)f.shift()()}},$watchCollection:function(a,b){function c(a){e=a;var b,d,g,h;if(!D(e)){if(H(e))if(Ta(e))for(f!==q&&(f=q,u=f.length=0,k++),a=e.length,u!==a&&(k++,f.length=u=a),b=0;b<a;b++)h=f[b],g=e[b],d=h!==h&&g!==g,d||h===g||(k++,f[b]=g);else{f!==\nm&&(f=m={},u=0,k++);a=0;for(b in e)e.hasOwnProperty(b)&&(a++,g=e[b],h=f[b],b in f?(d=h!==h&&g!==g,d||h===g||(k++,f[b]=g)):(u++,f[b]=g,k++));if(u>a)for(b in k++,f)e.hasOwnProperty(b)||(u--,delete f[b])}else f!==e&&(f=e,k++);return k}}c.$stateful=!0;var d=this,e,f,h,l=1<b.length,k=0,p=g(a,c),q=[],m={},n=!0,u=0;return this.$watch(p,function(){n?(n=!1,b(e,e,d)):b(e,h,d);if(l)if(H(e))if(Ta(e)){h=Array(e.length);for(var a=0;a<e.length;a++)h[a]=e[a]}else for(a in h={},e)rc.call(e,a)&&(h[a]=e[a]);else h=\ne})},$digest:function(){var e,g,l,m,u,v,s=b,t,W=[],y,I;k(\"$digest\");h.$$checkUrlChange();this===r&&null!==d&&(h.defer.cancel(d),q());c=null;do{v=!1;for(t=this;O.length;){try{I=O.shift(),I.scope.$eval(I.expression,I.locals)}catch(B){f(B)}c=null}a:do{if(m=t.$$watchers)for(u=m.length;u--;)try{if(e=m[u])if((g=e.get(t))!==(l=e.last)&&!(e.eq?fa(g,l):\"number\"===typeof g&&\"number\"===typeof l&&isNaN(g)&&isNaN(l)))v=!0,c=e,e.last=e.eq?Ea(g,null):g,e.fn(g,l===p?g:l,t),5>s&&(y=4-s,W[y]||(W[y]=[]),W[y].push({msg:G(e.exp)?\n\"fn: \"+(e.exp.name||e.exp.toString()):e.exp,newVal:g,oldVal:l}));else if(e===c){v=!1;break a}}catch(D){f(D)}if(!(m=t.$$childHead||t!==this&&t.$$nextSibling))for(;t!==this&&!(m=t.$$nextSibling);)t=t.$parent}while(t=m);if((v||O.length)&&!s--)throw r.$$phase=null,a(\"infdig\",b,W);}while(v||O.length);for(r.$$phase=null;n.length;)try{n.shift()()}catch(ca){f(ca)}},$destroy:function(){if(!this.$$destroyed){var a=this.$parent;this.$broadcast(\"$destroy\");this.$$destroyed=!0;if(this!==r){for(var b in this.$$listenerCount)m(this,\nthis.$$listenerCount[b],b);a.$$childHead==this&&(a.$$childHead=this.$$nextSibling);a.$$childTail==this&&(a.$$childTail=this.$$prevSibling);this.$$prevSibling&&(this.$$prevSibling.$$nextSibling=this.$$nextSibling);this.$$nextSibling&&(this.$$nextSibling.$$prevSibling=this.$$prevSibling);this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=C;this.$on=this.$watch=this.$watchGroup=function(){return C};this.$$listeners={};this.$parent=this.$$nextSibling=this.$$prevSibling=this.$$childHead=\nthis.$$childTail=this.$root=this.$$watchers=null}}},$eval:function(a,b){return g(a)(this,b)},$evalAsync:function(a,b){r.$$phase||O.length||h.defer(function(){O.length&&r.$digest()});O.push({scope:this,expression:a,locals:b})},$$postDigest:function(a){n.push(a)},$apply:function(a){try{return k(\"$apply\"),this.$eval(a)}catch(b){f(b)}finally{r.$$phase=null;try{r.$digest()}catch(c){throw f(c),c;}}},$applyAsync:function(a){function b(){c.$eval(a)}var c=this;a&&v.push(b);u()},$on:function(a,b){var c=this.$$listeners[a];\nc||(this.$$listeners[a]=c=[]);c.push(b);var d=this;do d.$$listenerCount[a]||(d.$$listenerCount[a]=0),d.$$listenerCount[a]++;while(d=d.$parent);var e=this;return function(){var d=c.indexOf(b);-1!==d&&(c[d]=null,m(e,1,a))}},$emit:function(a,b){var c=[],d,e=this,g=!1,h={name:a,targetScope:e,stopPropagation:function(){g=!0},preventDefault:function(){h.defaultPrevented=!0},defaultPrevented:!1},l=Ya([h],arguments,1),k,p;do{d=e.$$listeners[a]||c;h.currentScope=e;k=0;for(p=d.length;k<p;k++)if(d[k])try{d[k].apply(null,\nl)}catch(m){f(m)}else d.splice(k,1),k--,p--;if(g)return h.currentScope=null,h;e=e.$parent}while(e);h.currentScope=null;return h},$broadcast:function(a,b){var c=this,d=this,e={name:a,targetScope:this,preventDefault:function(){e.defaultPrevented=!0},defaultPrevented:!1};if(!this.$$listenerCount[a])return e;for(var g=Ya([e],arguments,1),h,l;c=d;){e.currentScope=c;d=c.$$listeners[a]||[];h=0;for(l=d.length;h<l;h++)if(d[h])try{d[h].apply(null,g)}catch(k){f(k)}else d.splice(h,1),h--,l--;if(!(d=c.$$listenerCount[a]&&\nc.$$childHead||c!==this&&c.$$nextSibling))for(;c!==this&&!(d=c.$$nextSibling);)c=c.$parent}e.currentScope=null;return e}};var r=new l,O=r.$$asyncQueue=[],n=r.$$postDigestQueue=[],v=r.$$applyAsyncQueue=[];return r}]}function Sd(){var b=/^\\s*(https?|ftp|mailto|tel|file):/,a=/^\\s*((https?|ftp|file|blob):|data:image\\/)/;this.aHrefSanitizationWhitelist=function(a){return y(a)?(b=a,this):b};this.imgSrcSanitizationWhitelist=function(b){return y(b)?(a=b,this):a};this.$get=function(){return function(c,d){var e=\nd?a:b,f;f=Ba(c).href;return\"\"===f||f.match(e)?c:\"unsafe:\"+f}}}function Df(b){if(\"self\"===b)return b;if(F(b)){if(-1<b.indexOf(\"***\"))throw Ca(\"iwcard\",b);b=gd(b).replace(\"\\\\*\\\\*\",\".*\").replace(\"\\\\*\",\"[^:/.?&;]*\");return new RegExp(\"^\"+b+\"$\")}if(ob(b))return new RegExp(\"^\"+b.source+\"$\");throw Ca(\"imatcher\");}function hd(b){var a=[];y(b)&&s(b,function(b){a.push(Df(b))});return a}function Te(){this.SCE_CONTEXTS=ma;var b=[\"self\"],a=[];this.resourceUrlWhitelist=function(a){arguments.length&&(b=hd(a));return b};\nthis.resourceUrlBlacklist=function(b){arguments.length&&(a=hd(b));return a};this.$get=[\"$injector\",function(c){function d(a,b){return\"self\"===a?Zc(b):!!a.exec(b.href)}function e(a){var b=function(a){this.$$unwrapTrustedValue=function(){return a}};a&&(b.prototype=new a);b.prototype.valueOf=function(){return this.$$unwrapTrustedValue()};b.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()};return b}var f=function(a){throw Ca(\"unsafe\");};c.has(\"$sanitize\")&&(f=c.get(\"$sanitize\"));\nvar g=e(),h={};h[ma.HTML]=e(g);h[ma.CSS]=e(g);h[ma.URL]=e(g);h[ma.JS]=e(g);h[ma.RESOURCE_URL]=e(h[ma.URL]);return{trustAs:function(a,b){var c=h.hasOwnProperty(a)?h[a]:null;if(!c)throw Ca(\"icontext\",a,b);if(null===b||b===t||\"\"===b)return b;if(\"string\"!==typeof b)throw Ca(\"itype\",a);return new c(b)},getTrusted:function(c,e){if(null===e||e===t||\"\"===e)return e;var g=h.hasOwnProperty(c)?h[c]:null;if(g&&e instanceof g)return e.$$unwrapTrustedValue();if(c===ma.RESOURCE_URL){var g=Ba(e.toString()),p,q,u=\n!1;p=0;for(q=b.length;p<q;p++)if(d(b[p],g)){u=!0;break}if(u)for(p=0,q=a.length;p<q;p++)if(d(a[p],g)){u=!1;break}if(u)return e;throw Ca(\"insecurl\",e.toString());}if(c===ma.HTML)return f(e);throw Ca(\"unsafe\");},valueOf:function(a){return a instanceof g?a.$$unwrapTrustedValue():a}}}]}function Se(){var b=!0;this.enabled=function(a){arguments.length&&(b=!!a);return b};this.$get=[\"$parse\",\"$sceDelegate\",function(a,c){if(b&&8>Ra)throw Ca(\"iequirks\");var d=qa(ma);d.isEnabled=function(){return b};d.trustAs=\nc.trustAs;d.getTrusted=c.getTrusted;d.valueOf=c.valueOf;b||(d.trustAs=d.getTrusted=function(a,b){return b},d.valueOf=oa);d.parseAs=function(b,c){var e=a(c);return e.literal&&e.constant?e:a(c,function(a){return d.getTrusted(b,a)})};var e=d.parseAs,f=d.getTrusted,g=d.trustAs;s(ma,function(a,b){var c=Q(b);d[cb(\"parse_as_\"+c)]=function(b){return e(a,b)};d[cb(\"get_trusted_\"+c)]=function(b){return f(a,b)};d[cb(\"trust_as_\"+c)]=function(b){return g(a,b)}});return d}]}function Ue(){this.$get=[\"$window\",\"$document\",\nfunction(b,a){var c={},d=ba((/android (\\d+)/.exec(Q((b.navigator||{}).userAgent))||[])[1]),e=/Boxee/i.test((b.navigator||{}).userAgent),f=a[0]||{},g,h=/^(Moz|webkit|ms)(?=[A-Z])/,l=f.body&&f.body.style,k=!1,m=!1;if(l){for(var p in l)if(k=h.exec(p)){g=k[0];g=g.substr(0,1).toUpperCase()+g.substr(1);break}g||(g=\"WebkitOpacity\"in l&&\"webkit\");k=!!(\"transition\"in l||g+\"Transition\"in l);m=!!(\"animation\"in l||g+\"Animation\"in l);!d||k&&m||(k=F(f.body.style.webkitTransition),m=F(f.body.style.webkitAnimation))}return{history:!(!b.history||\n!b.history.pushState||4>d||e),hasEvent:function(a){if(\"input\"===a&&11>=Ra)return!1;if(D(c[a])){var b=f.createElement(\"div\");c[a]=\"on\"+a in b}return c[a]},csp:ab(),vendorPrefix:g,transitions:k,animations:m,android:d}}]}function We(){this.$get=[\"$templateCache\",\"$http\",\"$q\",function(b,a,c){function d(e,f){d.totalPendingRequests++;var g=a.defaults&&a.defaults.transformResponse;x(g)?g=g.filter(function(a){return a!==Yb}):g===Yb&&(g=null);return a.get(e,{cache:b,transformResponse:g}).then(function(a){d.totalPendingRequests--;\nreturn a.data},function(a){d.totalPendingRequests--;if(!f)throw ja(\"tpload\",e);return c.reject(a)})}d.totalPendingRequests=0;return d}]}function Xe(){this.$get=[\"$rootScope\",\"$browser\",\"$location\",function(b,a,c){return{findBindings:function(a,b,c){a=a.getElementsByClassName(\"ng-binding\");var g=[];s(a,function(a){var d=ga.element(a).data(\"$binding\");d&&s(d,function(d){c?(new RegExp(\"(^|\\\\s)\"+gd(b)+\"(\\\\s|\\\\||$)\")).test(d)&&g.push(a):-1!=d.indexOf(b)&&g.push(a)})});return g},findModels:function(a,b,\nc){for(var g=[\"ng-\",\"data-ng-\",\"ng\\\\:\"],h=0;h<g.length;++h){var l=a.querySelectorAll(\"[\"+g[h]+\"model\"+(c?\"=\":\"*=\")+'\"'+b+'\"]');if(l.length)return l}},getLocation:function(){return c.url()},setLocation:function(a){a!==c.url()&&(c.url(a),b.$digest())},whenStable:function(b){a.notifyWhenNoOutstandingRequests(b)}}}]}function Ye(){this.$get=[\"$rootScope\",\"$browser\",\"$q\",\"$$q\",\"$exceptionHandler\",function(b,a,c,d,e){function f(f,l,k){var m=y(k)&&!k,p=(m?d:c).defer(),q=p.promise;l=a.defer(function(){try{p.resolve(f())}catch(a){p.reject(a),\ne(a)}finally{delete g[q.$$timeoutId]}m||b.$apply()},l);q.$$timeoutId=l;g[l]=p;return q}var g={};f.cancel=function(b){return b&&b.$$timeoutId in g?(g[b.$$timeoutId].reject(\"canceled\"),delete g[b.$$timeoutId],a.defer.cancel(b.$$timeoutId)):!1};return f}]}function Ba(b){Ra&&(Z.setAttribute(\"href\",b),b=Z.href);Z.setAttribute(\"href\",b);return{href:Z.href,protocol:Z.protocol?Z.protocol.replace(/:$/,\"\"):\"\",host:Z.host,search:Z.search?Z.search.replace(/^\\?/,\"\"):\"\",hash:Z.hash?Z.hash.replace(/^#/,\"\"):\"\",hostname:Z.hostname,\nport:Z.port,pathname:\"/\"===Z.pathname.charAt(0)?Z.pathname:\"/\"+Z.pathname}}function Zc(b){b=F(b)?Ba(b):b;return b.protocol===id.protocol&&b.host===id.host}function Ze(){this.$get=da(M)}function Dc(b){function a(c,d){if(H(c)){var e={};s(c,function(b,c){e[c]=a(c,b)});return e}return b.factory(c+\"Filter\",d)}this.register=a;this.$get=[\"$injector\",function(a){return function(b){return a.get(b+\"Filter\")}}];a(\"currency\",jd);a(\"date\",kd);a(\"filter\",Ef);a(\"json\",Ff);a(\"limitTo\",Gf);a(\"lowercase\",Hf);a(\"number\",\nld);a(\"orderBy\",md);a(\"uppercase\",If)}function Ef(){return function(b,a,c){if(!x(b))return b;var d;switch(typeof a){case \"function\":break;case \"boolean\":case \"number\":case \"string\":d=!0;case \"object\":a=Jf(a,c,d);break;default:return b}return b.filter(a)}}function Jf(b,a,c){var d=H(b)&&\"$\"in b;!0===a?a=fa:G(a)||(a=function(a,b){if(H(a)||H(b))return!1;a=Q(\"\"+a);b=Q(\"\"+b);return-1!==a.indexOf(b)});return function(e){return d&&!H(e)?Ia(e,b.$,a,!1):Ia(e,b,a,c)}}function Ia(b,a,c,d,e){var f=typeof b,g=\ntypeof a;if(\"string\"===g&&\"!\"===a.charAt(0))return!Ia(b,a.substring(1),c,d);if(\"array\"===f)return b.some(function(b){return Ia(b,a,c,d)});switch(f){case \"object\":var h;if(d){for(h in b)if(\"$\"!==h.charAt(0)&&Ia(b[h],a,c,!0))return!0;return e?!1:Ia(b,a,c,!1)}if(\"object\"===g){for(h in a)if(e=a[h],!G(e)&&(f=\"$\"===h,!Ia(f?b:b[h],e,c,f,f)))return!1;return!0}return c(b,a);case \"function\":return!1;default:return c(b,a)}}function jd(b){var a=b.NUMBER_FORMATS;return function(b,d,e){D(d)&&(d=a.CURRENCY_SYM);\nD(e)&&(e=a.PATTERNS[1].maxFrac);return null==b?b:nd(b,a.PATTERNS[1],a.GROUP_SEP,a.DECIMAL_SEP,e).replace(/\\u00A4/g,d)}}function ld(b){var a=b.NUMBER_FORMATS;return function(b,d){return null==b?b:nd(b,a.PATTERNS[0],a.GROUP_SEP,a.DECIMAL_SEP,d)}}function nd(b,a,c,d,e){if(!isFinite(b)||H(b))return\"\";var f=0>b;b=Math.abs(b);var g=b+\"\",h=\"\",l=[],k=!1;if(-1!==g.indexOf(\"e\")){var m=g.match(/([\\d\\.]+)e(-?)(\\d+)/);m&&\"-\"==m[2]&&m[3]>e+1?b=0:(h=g,k=!0)}if(k)0<e&&1>b&&(h=b.toFixed(e),b=parseFloat(h));else{g=\n(g.split(od)[1]||\"\").length;D(e)&&(e=Math.min(Math.max(a.minFrac,g),a.maxFrac));b=+(Math.round(+(b.toString()+\"e\"+e)).toString()+\"e\"+-e);var g=(\"\"+b).split(od),k=g[0],g=g[1]||\"\",p=0,q=a.lgSize,u=a.gSize;if(k.length>=q+u)for(p=k.length-q,m=0;m<p;m++)0===(p-m)%u&&0!==m&&(h+=c),h+=k.charAt(m);for(m=p;m<k.length;m++)0===(k.length-m)%q&&0!==m&&(h+=c),h+=k.charAt(m);for(;g.length<e;)g+=\"0\";e&&\"0\"!==e&&(h+=d+g.substr(0,e))}0===b&&(f=!1);l.push(f?a.negPre:a.posPre,h,f?a.negSuf:a.posSuf);return l.join(\"\")}\nfunction Hb(b,a,c){var d=\"\";0>b&&(d=\"-\",b=-b);for(b=\"\"+b;b.length<a;)b=\"0\"+b;c&&(b=b.substr(b.length-a));return d+b}function $(b,a,c,d){c=c||0;return function(e){e=e[\"get\"+b]();if(0<c||e>-c)e+=c;0===e&&-12==c&&(e=12);return Hb(e,a,d)}}function Ib(b,a){return function(c,d){var e=c[\"get\"+b](),f=ub(a?\"SHORT\"+b:b);return d[f][e]}}function pd(b){var a=(new Date(b,0,1)).getDay();return new Date(b,0,(4>=a?5:12)-a)}function qd(b){return function(a){var c=pd(a.getFullYear());a=+new Date(a.getFullYear(),a.getMonth(),\na.getDate()+(4-a.getDay()))-+c;a=1+Math.round(a/6048E5);return Hb(a,b)}}function kd(b){function a(a){var b;if(b=a.match(c)){a=new Date(0);var f=0,g=0,h=b[8]?a.setUTCFullYear:a.setFullYear,l=b[8]?a.setUTCHours:a.setHours;b[9]&&(f=ba(b[9]+b[10]),g=ba(b[9]+b[11]));h.call(a,ba(b[1]),ba(b[2])-1,ba(b[3]));f=ba(b[4]||0)-f;g=ba(b[5]||0)-g;h=ba(b[6]||0);b=Math.round(1E3*parseFloat(\"0.\"+(b[7]||0)));l.call(a,f,g,h,b)}return a}var c=/^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\nreturn function(c,e,f){var g=\"\",h=[],l,k;e=e||\"mediumDate\";e=b.DATETIME_FORMATS[e]||e;F(c)&&(c=Kf.test(c)?ba(c):a(c));V(c)&&(c=new Date(c));if(!pa(c))return c;for(;e;)(k=Lf.exec(e))?(h=Ya(h,k,1),e=h.pop()):(h.push(e),e=null);f&&\"UTC\"===f&&(c=new Date(c.getTime()),c.setMinutes(c.getMinutes()+c.getTimezoneOffset()));s(h,function(a){l=Mf[a];g+=l?l(c,b.DATETIME_FORMATS):a.replace(/(^'|'$)/g,\"\").replace(/''/g,\"'\")});return g}}function Ff(){return function(b,a){D(a)&&(a=2);return $a(b,a)}}function Gf(){return function(b,\na){V(b)&&(b=b.toString());if(!x(b)&&!F(b))return b;a=Infinity===Math.abs(Number(a))?Number(a):ba(a);if(F(b))return a?0<=a?b.slice(0,a):b.slice(a,b.length):\"\";var c,d;a>b.length?a=b.length:a<-b.length&&(a=-b.length);if(0<a)c=0,d=a;else{if(!a)return[];c=b.length+a;d=b.length}return b.slice(c,d)}}function md(b){return function(a,c,d){function e(a,b){return b?function(b,c){return a(c,b)}:a}function f(a){switch(typeof a){case \"number\":case \"boolean\":case \"string\":return!0;default:return!1}}function g(a){return null===\na?\"null\":\"function\"===typeof a.valueOf&&(a=a.valueOf(),f(a))||\"function\"===typeof a.toString&&(a=a.toString(),f(a))?a:\"\"}function h(a,b){var c=typeof a,d=typeof b;c===d&&\"object\"===c&&(a=g(a),b=g(b));return c===d?(\"string\"===c&&(a=a.toLowerCase(),b=b.toLowerCase()),a===b?0:a<b?-1:1):c<d?-1:1}if(!Ta(a))return a;c=x(c)?c:[c];0===c.length&&(c=[\"+\"]);c=c.map(function(a){var c=!1,d=a||oa;if(F(a)){if(\"+\"==a.charAt(0)||\"-\"==a.charAt(0))c=\"-\"==a.charAt(0),a=a.substring(1);if(\"\"===a)return e(h,c);d=b(a);if(d.constant){var f=\nd();return e(function(a,b){return h(a[f],b[f])},c)}}return e(function(a,b){return h(d(a),d(b))},c)});return Za.call(a).sort(e(function(a,b){for(var d=0;d<c.length;d++){var e=c[d](a,b);if(0!==e)return e}return 0},d))}}function Ja(b){G(b)&&(b={link:b});b.restrict=b.restrict||\"AC\";return da(b)}function rd(b,a,c,d,e){var f=this,g=[],h=f.$$parentForm=b.parent().controller(\"form\")||Jb;f.$error={};f.$$success={};f.$pending=t;f.$name=e(a.name||a.ngForm||\"\")(c);f.$dirty=!1;f.$pristine=!0;f.$valid=!0;f.$invalid=\n!1;f.$submitted=!1;h.$addControl(f);f.$rollbackViewValue=function(){s(g,function(a){a.$rollbackViewValue()})};f.$commitViewValue=function(){s(g,function(a){a.$commitViewValue()})};f.$addControl=function(a){Ma(a.$name,\"input\");g.push(a);a.$name&&(f[a.$name]=a)};f.$$renameControl=function(a,b){var c=a.$name;f[c]===a&&delete f[c];f[b]=a;a.$name=b};f.$removeControl=function(a){a.$name&&f[a.$name]===a&&delete f[a.$name];s(f.$pending,function(b,c){f.$setValidity(c,null,a)});s(f.$error,function(b,c){f.$setValidity(c,\nnull,a)});Xa(g,a)};sd({ctrl:this,$element:b,set:function(a,b,c){var d=a[b];d?-1===d.indexOf(c)&&d.push(c):a[b]=[c]},unset:function(a,b,c){var d=a[b];d&&(Xa(d,c),0===d.length&&delete a[b])},parentForm:h,$animate:d});f.$setDirty=function(){d.removeClass(b,Sa);d.addClass(b,Kb);f.$dirty=!0;f.$pristine=!1;h.$setDirty()};f.$setPristine=function(){d.setClass(b,Sa,Kb+\" ng-submitted\");f.$dirty=!1;f.$pristine=!0;f.$submitted=!1;s(g,function(a){a.$setPristine()})};f.$setUntouched=function(){s(g,function(a){a.$setUntouched()})};\nf.$setSubmitted=function(){d.addClass(b,\"ng-submitted\");f.$submitted=!0;h.$setSubmitted()}}function hc(b){b.$formatters.push(function(a){return b.$isEmpty(a)?a:a.toString()})}function ib(b,a,c,d,e,f){var g=Q(a[0].type);if(!e.android){var h=!1;a.on(\"compositionstart\",function(a){h=!0});a.on(\"compositionend\",function(){h=!1;l()})}var l=function(b){k&&(f.defer.cancel(k),k=null);if(!h){var e=a.val();b=b&&b.type;\"password\"===g||c.ngTrim&&\"false\"===c.ngTrim||(e=U(e));(d.$viewValue!==e||\"\"===e&&d.$$hasNativeValidators)&&\nd.$setViewValue(e,b)}};if(e.hasEvent(\"input\"))a.on(\"input\",l);else{var k,m=function(a,b,c){k||(k=f.defer(function(){k=null;b&&b.value===c||l(a)}))};a.on(\"keydown\",function(a){var b=a.keyCode;91===b||15<b&&19>b||37<=b&&40>=b||m(a,this,this.value)});if(e.hasEvent(\"paste\"))a.on(\"paste cut\",m)}a.on(\"change\",l);d.$render=function(){a.val(d.$isEmpty(d.$viewValue)?\"\":d.$viewValue)}}function Lb(b,a){return function(c,d){var e,f;if(pa(c))return c;if(F(c)){'\"'==c.charAt(0)&&'\"'==c.charAt(c.length-1)&&(c=c.substring(1,\nc.length-1));if(Nf.test(c))return new Date(c);b.lastIndex=0;if(e=b.exec(c))return e.shift(),f=d?{yyyy:d.getFullYear(),MM:d.getMonth()+1,dd:d.getDate(),HH:d.getHours(),mm:d.getMinutes(),ss:d.getSeconds(),sss:d.getMilliseconds()/1E3}:{yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0},s(e,function(b,c){c<a.length&&(f[a[c]]=+b)}),new Date(f.yyyy,f.MM-1,f.dd,f.HH,f.mm,f.ss||0,1E3*f.sss||0)}return NaN}}function jb(b,a,c,d){return function(e,f,g,h,l,k,m){function p(a){return a&&!(a.getTime&&a.getTime()!==a.getTime())}\nfunction q(a){return y(a)?pa(a)?a:c(a):t}td(e,f,g,h);ib(e,f,g,h,l,k);var u=h&&h.$options&&h.$options.timezone,r;h.$$parserName=b;h.$parsers.push(function(b){return h.$isEmpty(b)?null:a.test(b)?(b=c(b,r),\"UTC\"===u&&b.setMinutes(b.getMinutes()-b.getTimezoneOffset()),b):t});h.$formatters.push(function(a){if(a&&!pa(a))throw Mb(\"datefmt\",a);if(p(a)){if((r=a)&&\"UTC\"===u){var b=6E4*r.getTimezoneOffset();r=new Date(r.getTime()+b)}return m(\"date\")(a,d,u)}r=null;return\"\"});if(y(g.min)||g.ngMin){var s;h.$validators.min=\nfunction(a){return!p(a)||D(s)||c(a)>=s};g.$observe(\"min\",function(a){s=q(a);h.$validate()})}if(y(g.max)||g.ngMax){var n;h.$validators.max=function(a){return!p(a)||D(n)||c(a)<=n};g.$observe(\"max\",function(a){n=q(a);h.$validate()})}}}function td(b,a,c,d){(d.$$hasNativeValidators=H(a[0].validity))&&d.$parsers.push(function(b){var c=a.prop(\"validity\")||{};return c.badInput&&!c.typeMismatch?t:b})}function ud(b,a,c,d,e){if(y(d)){b=b(d);if(!b.constant)throw T(\"ngModel\")(\"constexpr\",c,d);return b(a)}return e}\nfunction sd(b){function a(a,b){b&&!f[a]?(k.addClass(e,a),f[a]=!0):!b&&f[a]&&(k.removeClass(e,a),f[a]=!1)}function c(b,c){b=b?\"-\"+tc(b,\"-\"):\"\";a(kb+b,!0===c);a(vd+b,!1===c)}var d=b.ctrl,e=b.$element,f={},g=b.set,h=b.unset,l=b.parentForm,k=b.$animate;f[vd]=!(f[kb]=e.hasClass(kb));d.$setValidity=function(b,e,f){e===t?(d.$pending||(d.$pending={}),g(d.$pending,b,f)):(d.$pending&&h(d.$pending,b,f),wd(d.$pending)&&(d.$pending=t));Wa(e)?e?(h(d.$error,b,f),g(d.$$success,b,f)):(g(d.$error,b,f),h(d.$$success,\nb,f)):(h(d.$error,b,f),h(d.$$success,b,f));d.$pending?(a(xd,!0),d.$valid=d.$invalid=t,c(\"\",null)):(a(xd,!1),d.$valid=wd(d.$error),d.$invalid=!d.$valid,c(\"\",d.$valid));e=d.$pending&&d.$pending[b]?t:d.$error[b]?!1:d.$$success[b]?!0:null;c(b,e);l.$setValidity(b,e,d)}}function wd(b){if(b)for(var a in b)return!1;return!0}function ic(b,a){b=\"ngClass\"+b;return[\"$animate\",function(c){function d(a,b){var c=[],d=0;a:for(;d<a.length;d++){for(var e=a[d],m=0;m<b.length;m++)if(e==b[m])continue a;c.push(e)}return c}\nfunction e(a){if(!x(a)){if(F(a))return a.split(\" \");if(H(a)){var b=[];s(a,function(a,c){a&&(b=b.concat(c.split(\" \")))});return b}}return a}return{restrict:\"AC\",link:function(f,g,h){function l(a,b){var c=g.data(\"$classCounts\")||{},d=[];s(a,function(a){if(0<b||c[a])c[a]=(c[a]||0)+b,c[a]===+(0<b)&&d.push(a)});g.data(\"$classCounts\",c);return d.join(\" \")}function k(b){if(!0===a||f.$index%2===a){var k=e(b||[]);if(!m){var u=l(k,1);h.$addClass(u)}else if(!fa(b,m)){var r=e(m),u=d(k,r),k=d(r,k),u=l(u,1),k=\nl(k,-1);u&&u.length&&c.addClass(g,u);k&&k.length&&c.removeClass(g,k)}}m=qa(b)}var m;f.$watch(h[b],k,!0);h.$observe(\"class\",function(a){k(f.$eval(h[b]))});\"ngClass\"!==b&&f.$watch(\"$index\",function(c,d){var g=c&1;if(g!==(d&1)){var k=e(f.$eval(h[b]));g===a?(g=l(k,1),h.$addClass(g)):(g=l(k,-1),h.$removeClass(g))}})}}}]}var Of=/^\\/(.+)\\/([a-z]*)$/,Q=function(b){return F(b)?b.toLowerCase():b},rc=Object.prototype.hasOwnProperty,ub=function(b){return F(b)?b.toUpperCase():b},Ra,B,ra,Za=[].slice,rf=[].splice,\nPf=[].push,Da=Object.prototype.toString,Ka=T(\"ng\"),ga=M.angular||(M.angular={}),bb,nb=0;Ra=Y.documentMode;C.$inject=[];oa.$inject=[];var x=Array.isArray,U=function(b){return F(b)?b.trim():b},gd=function(b){return b.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g,\"\\\\$1\").replace(/\\x08/g,\"\\\\x08\")},ab=function(){if(y(ab.isActive_))return ab.isActive_;var b=!(!Y.querySelector(\"[ng-csp]\")&&!Y.querySelector(\"[data-ng-csp]\"));if(!b)try{new Function(\"\")}catch(a){b=!0}return ab.isActive_=b},rb=[\"ng-\",\"data-ng-\",\"ng:\",\n\"x-ng-\"],Md=/[A-Z]/g,uc=!1,Pb,na=1,pb=3,Qd={full:\"1.3.8\",major:1,minor:3,dot:8,codeName:\"prophetic-narwhal\"};R.expando=\"ng339\";var zb=R.cache={},hf=1;R._data=function(b){return this.cache[b[this.expando]]||{}};var cf=/([\\:\\-\\_]+(.))/g,df=/^moz([A-Z])/,Qf={mouseleave:\"mouseout\",mouseenter:\"mouseover\"},Sb=T(\"jqLite\"),gf=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,Rb=/<|&#?\\w+;/,ef=/<([\\w:]+)/,ff=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,ia={option:[1,'<select multiple=\"multiple\">',\n\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ia.optgroup=ia.option;ia.tbody=ia.tfoot=ia.colgroup=ia.caption=ia.thead;ia.th=ia.td;var La=R.prototype={ready:function(b){function a(){c||(c=!0,b())}var c=!1;\"complete\"===Y.readyState?setTimeout(a):(this.on(\"DOMContentLoaded\",a),R(M).on(\"load\",a))},toString:function(){var b=[];s(this,function(a){b.push(\"\"+\na)});return\"[\"+b.join(\", \")+\"]\"},eq:function(b){return 0<=b?B(this[b]):B(this[this.length+b])},length:0,push:Pf,sort:[].sort,splice:[].splice},Eb={};s(\"multiple selected checked disabled readOnly required open\".split(\" \"),function(b){Eb[Q(b)]=b});var Mc={};s(\"input select option textarea button form details\".split(\" \"),function(b){Mc[b]=!0});var Nc={ngMinlength:\"minlength\",ngMaxlength:\"maxlength\",ngMin:\"min\",ngMax:\"max\",ngPattern:\"pattern\"};s({data:Ub,removeData:xb},function(b,a){R[a]=b});s({data:Ub,\ninheritedData:Db,scope:function(b){return B.data(b,\"$scope\")||Db(b.parentNode||b,[\"$isolateScope\",\"$scope\"])},isolateScope:function(b){return B.data(b,\"$isolateScope\")||B.data(b,\"$isolateScopeNoTemplate\")},controller:Ic,injector:function(b){return Db(b,\"$injector\")},removeAttr:function(b,a){b.removeAttribute(a)},hasClass:Ab,css:function(b,a,c){a=cb(a);if(y(c))b.style[a]=c;else return b.style[a]},attr:function(b,a,c){var d=Q(a);if(Eb[d])if(y(c))c?(b[a]=!0,b.setAttribute(a,d)):(b[a]=!1,b.removeAttribute(d));\nelse return b[a]||(b.attributes.getNamedItem(a)||C).specified?d:t;else if(y(c))b.setAttribute(a,c);else if(b.getAttribute)return b=b.getAttribute(a,2),null===b?t:b},prop:function(b,a,c){if(y(c))b[a]=c;else return b[a]},text:function(){function b(a,b){if(D(b)){var d=a.nodeType;return d===na||d===pb?a.textContent:\"\"}a.textContent=b}b.$dv=\"\";return b}(),val:function(b,a){if(D(a)){if(b.multiple&&\"select\"===ua(b)){var c=[];s(b.options,function(a){a.selected&&c.push(a.value||a.text)});return 0===c.length?\nnull:c}return b.value}b.value=a},html:function(b,a){if(D(a))return b.innerHTML;wb(b,!0);b.innerHTML=a},empty:Jc},function(b,a){R.prototype[a]=function(a,d){var e,f,g=this.length;if(b!==Jc&&(2==b.length&&b!==Ab&&b!==Ic?a:d)===t){if(H(a)){for(e=0;e<g;e++)if(b===Ub)b(this[e],a);else for(f in a)b(this[e],f,a[f]);return this}e=b.$dv;g=e===t?Math.min(g,1):g;for(f=0;f<g;f++){var h=b(this[f],a,d);e=e?e+h:h}return e}for(e=0;e<g;e++)b(this[e],a,d);return this}});s({removeData:xb,on:function a(c,d,e,f){if(y(f))throw Sb(\"onargs\");\nif(Ec(c)){var g=yb(c,!0);f=g.events;var h=g.handle;h||(h=g.handle=lf(c,f));for(var g=0<=d.indexOf(\" \")?d.split(\" \"):[d],l=g.length;l--;){d=g[l];var k=f[d];k||(f[d]=[],\"mouseenter\"===d||\"mouseleave\"===d?a(c,Qf[d],function(a){var c=a.relatedTarget;c&&(c===this||this.contains(c))||h(a,d)}):\"$destroy\"!==d&&c.addEventListener(d,h,!1),k=f[d]);k.push(e)}}},off:Hc,one:function(a,c,d){a=B(a);a.on(c,function f(){a.off(c,d);a.off(c,f)});a.on(c,d)},replaceWith:function(a,c){var d,e=a.parentNode;wb(a);s(new R(c),\nfunction(c){d?e.insertBefore(c,d.nextSibling):e.replaceChild(c,a);d=c})},children:function(a){var c=[];s(a.childNodes,function(a){a.nodeType===na&&c.push(a)});return c},contents:function(a){return a.contentDocument||a.childNodes||[]},append:function(a,c){var d=a.nodeType;if(d===na||11===d){c=new R(c);for(var d=0,e=c.length;d<e;d++)a.appendChild(c[d])}},prepend:function(a,c){if(a.nodeType===na){var d=a.firstChild;s(new R(c),function(c){a.insertBefore(c,d)})}},wrap:function(a,c){c=B(c).eq(0).clone()[0];\nvar d=a.parentNode;d&&d.replaceChild(c,a);c.appendChild(a)},remove:Kc,detach:function(a){Kc(a,!0)},after:function(a,c){var d=a,e=a.parentNode;c=new R(c);for(var f=0,g=c.length;f<g;f++){var h=c[f];e.insertBefore(h,d.nextSibling);d=h}},addClass:Cb,removeClass:Bb,toggleClass:function(a,c,d){c&&s(c.split(\" \"),function(c){var f=d;D(f)&&(f=!Ab(a,c));(f?Cb:Bb)(a,c)})},parent:function(a){return(a=a.parentNode)&&11!==a.nodeType?a:null},next:function(a){return a.nextElementSibling},find:function(a,c){return a.getElementsByTagName?\na.getElementsByTagName(c):[]},clone:Tb,triggerHandler:function(a,c,d){var e,f,g=c.type||c,h=yb(a);if(h=(h=h&&h.events)&&h[g])e={preventDefault:function(){this.defaultPrevented=!0},isDefaultPrevented:function(){return!0===this.defaultPrevented},stopImmediatePropagation:function(){this.immediatePropagationStopped=!0},isImmediatePropagationStopped:function(){return!0===this.immediatePropagationStopped},stopPropagation:C,type:g,target:a},c.type&&(e=z(e,c)),c=qa(h),f=d?[e].concat(d):[e],s(c,function(c){e.isImmediatePropagationStopped()||\nc.apply(a,f)})}},function(a,c){R.prototype[c]=function(c,e,f){for(var g,h=0,l=this.length;h<l;h++)D(g)?(g=a(this[h],c,e,f),y(g)&&(g=B(g))):Gc(g,a(this[h],c,e,f));return y(g)?g:this};R.prototype.bind=R.prototype.on;R.prototype.unbind=R.prototype.off});db.prototype={put:function(a,c){this[Na(a,this.nextUid)]=c},get:function(a){return this[Na(a,this.nextUid)]},remove:function(a){var c=this[a=Na(a,this.nextUid)];delete this[a];return c}};var Pc=/^function\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m,nf=/,/,of=/^\\s*(_?)(\\S+?)\\1\\s*$/,\nOc=/((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg,Ga=T(\"$injector\");Ob.$$annotate=Vb;var Rf=T(\"$animate\"),Ce=[\"$provide\",function(a){this.$$selectors={};this.register=function(c,d){var e=c+\"-animation\";if(c&&\".\"!=c.charAt(0))throw Rf(\"notcsel\",c);this.$$selectors[c.substr(1)]=e;a.factory(e,d)};this.classNameFilter=function(a){1===arguments.length&&(this.$$classNameFilter=a instanceof RegExp?a:null);return this.$$classNameFilter};this.$get=[\"$$q\",\"$$asyncCallback\",\"$rootScope\",function(a,d,e){function f(d){var f,\ng=a.defer();g.promise.$$cancelFn=function(){f&&f()};e.$$postDigest(function(){f=d(function(){g.resolve()})});return g.promise}function g(a,c){var d=[],e=[],f=ha();s((a.attr(\"class\")||\"\").split(/\\s+/),function(a){f[a]=!0});s(c,function(a,c){var g=f[c];!1===a&&g?e.push(c):!0!==a||g||d.push(c)});return 0<d.length+e.length&&[d.length?d:null,e.length?e:null]}function h(a,c,d){for(var e=0,f=c.length;e<f;++e)a[c[e]]=d}function l(){m||(m=a.defer(),d(function(){m.resolve();m=null}));return m.promise}function k(a,\nc){if(ga.isObject(c)){var d=z(c.from||{},c.to||{});a.css(d)}}var m;return{animate:function(a,c,d){k(a,{from:c,to:d});return l()},enter:function(a,c,d,e){k(a,e);d?d.after(a):c.prepend(a);return l()},leave:function(a,c){a.remove();return l()},move:function(a,c,d,e){return this.enter(a,c,d,e)},addClass:function(a,c,d){return this.setClass(a,c,[],d)},$$addClassImmediately:function(a,c,d){a=B(a);c=F(c)?c:x(c)?c.join(\" \"):\"\";s(a,function(a){Cb(a,c)});k(a,d);return l()},removeClass:function(a,c,d){return this.setClass(a,\n[],c,d)},$$removeClassImmediately:function(a,c,d){a=B(a);c=F(c)?c:x(c)?c.join(\" \"):\"\";s(a,function(a){Bb(a,c)});k(a,d);return l()},setClass:function(a,c,d,e){var k=this,l=!1;a=B(a);var m=a.data(\"$$animateClasses\");m?e&&m.options&&(m.options=ga.extend(m.options||{},e)):(m={classes:{},options:e},l=!0);e=m.classes;c=x(c)?c:c.split(\" \");d=x(d)?d:d.split(\" \");h(e,c,!0);h(e,d,!1);l&&(m.promise=f(function(c){var d=a.data(\"$$animateClasses\");a.removeData(\"$$animateClasses\");if(d){var e=g(a,d.classes);e&&\nk.$$setClassImmediately(a,e[0],e[1],d.options)}c()}),a.data(\"$$animateClasses\",m));return m.promise},$$setClassImmediately:function(a,c,d,e){c&&this.$$addClassImmediately(a,c);d&&this.$$removeClassImmediately(a,d);k(a,e);return l()},enabled:C,cancel:C}}]}],ja=T(\"$compile\");wc.$inject=[\"$provide\",\"$$sanitizeUriProvider\"];var Rc=/^((?:x|data)[\\:\\-_])/i,Vc=\"application/json\",Zb={\"Content-Type\":Vc+\";charset=utf-8\"},tf=/^\\[|^\\{(?!\\{)/,uf={\"[\":/]$/,\"{\":/}$/},sf=/^\\)\\]\\}',?\\n/,$b=T(\"$interpolate\"),Sf=/^([^\\?#]*)(\\?([^#]*))?(#(.*))?$/,\nxf={http:80,https:443,ftp:21},Fb=T(\"$location\"),Tf={$$html5:!1,$$replace:!1,absUrl:Gb(\"$$absUrl\"),url:function(a){if(D(a))return this.$$url;var c=Sf.exec(a);(c[1]||\"\"===a)&&this.path(decodeURIComponent(c[1]));(c[2]||c[1]||\"\"===a)&&this.search(c[3]||\"\");this.hash(c[5]||\"\");return this},protocol:Gb(\"$$protocol\"),host:Gb(\"$$host\"),port:Gb(\"$$port\"),path:dd(\"$$path\",function(a){a=null!==a?a.toString():\"\";return\"/\"==a.charAt(0)?a:\"/\"+a}),search:function(a,c){switch(arguments.length){case 0:return this.$$search;\ncase 1:if(F(a)||V(a))a=a.toString(),this.$$search=qc(a);else if(H(a))a=Ea(a,{}),s(a,function(c,e){null==c&&delete a[e]}),this.$$search=a;else throw Fb(\"isrcharg\");break;default:D(c)||null===c?delete this.$$search[a]:this.$$search[a]=c}this.$$compose();return this},hash:dd(\"$$hash\",function(a){return null!==a?a.toString():\"\"}),replace:function(){this.$$replace=!0;return this}};s([cd,dc,cc],function(a){a.prototype=Object.create(Tf);a.prototype.state=function(c){if(!arguments.length)return this.$$state;\nif(a!==cc||!this.$$html5)throw Fb(\"nostate\");this.$$state=D(c)?null:c;return this}});var la=T(\"$parse\"),Uf=Function.prototype.call,Vf=Function.prototype.apply,Wf=Function.prototype.bind,lb=ha();s({\"null\":function(){return null},\"true\":function(){return!0},\"false\":function(){return!1},undefined:function(){}},function(a,c){a.constant=a.literal=a.sharedGetter=!0;lb[c]=a});lb[\"this\"]=function(a){return a};lb[\"this\"].sharedGetter=!0;var mb=z(ha(),{\"+\":function(a,c,d,e){d=d(a,c);e=e(a,c);return y(d)?y(e)?\nd+e:d:y(e)?e:t},\"-\":function(a,c,d,e){d=d(a,c);e=e(a,c);return(y(d)?d:0)-(y(e)?e:0)},\"*\":function(a,c,d,e){return d(a,c)*e(a,c)},\"/\":function(a,c,d,e){return d(a,c)/e(a,c)},\"%\":function(a,c,d,e){return d(a,c)%e(a,c)},\"===\":function(a,c,d,e){return d(a,c)===e(a,c)},\"!==\":function(a,c,d,e){return d(a,c)!==e(a,c)},\"==\":function(a,c,d,e){return d(a,c)==e(a,c)},\"!=\":function(a,c,d,e){return d(a,c)!=e(a,c)},\"<\":function(a,c,d,e){return d(a,c)<e(a,c)},\">\":function(a,c,d,e){return d(a,c)>e(a,c)},\"<=\":function(a,\nc,d,e){return d(a,c)<=e(a,c)},\">=\":function(a,c,d,e){return d(a,c)>=e(a,c)},\"&&\":function(a,c,d,e){return d(a,c)&&e(a,c)},\"||\":function(a,c,d,e){return d(a,c)||e(a,c)},\"!\":function(a,c,d){return!d(a,c)},\"=\":!0,\"|\":!0}),Xf={n:\"\\n\",f:\"\\f\",r:\"\\r\",t:\"\\t\",v:\"\\v\",\"'\":\"'\",'\"':'\"'},gc=function(a){this.options=a};gc.prototype={constructor:gc,lex:function(a){this.text=a;this.index=0;for(this.tokens=[];this.index<this.text.length;)if(a=this.text.charAt(this.index),'\"'===a||\"'\"===a)this.readString(a);else if(this.isNumber(a)||\n\".\"===a&&this.isNumber(this.peek()))this.readNumber();else if(this.isIdent(a))this.readIdent();else if(this.is(a,\"(){}[].,;:?\"))this.tokens.push({index:this.index,text:a}),this.index++;else if(this.isWhitespace(a))this.index++;else{var c=a+this.peek(),d=c+this.peek(2),e=mb[c],f=mb[d];mb[a]||e||f?(a=f?d:e?c:a,this.tokens.push({index:this.index,text:a,operator:!0}),this.index+=a.length):this.throwError(\"Unexpected next character \",this.index,this.index+1)}return this.tokens},is:function(a,c){return-1!==\nc.indexOf(a)},peek:function(a){a=a||1;return this.index+a<this.text.length?this.text.charAt(this.index+a):!1},isNumber:function(a){return\"0\"<=a&&\"9\">=a&&\"string\"===typeof a},isWhitespace:function(a){return\" \"===a||\"\\r\"===a||\"\\t\"===a||\"\\n\"===a||\"\\v\"===a||\"\\u00a0\"===a},isIdent:function(a){return\"a\"<=a&&\"z\">=a||\"A\"<=a&&\"Z\">=a||\"_\"===a||\"$\"===a},isExpOperator:function(a){return\"-\"===a||\"+\"===a||this.isNumber(a)},throwError:function(a,c,d){d=d||this.index;c=y(c)?\"s \"+c+\"-\"+this.index+\" [\"+this.text.substring(c,\nd)+\"]\":\" \"+d;throw la(\"lexerr\",a,c,this.text);},readNumber:function(){for(var a=\"\",c=this.index;this.index<this.text.length;){var d=Q(this.text.charAt(this.index));if(\".\"==d||this.isNumber(d))a+=d;else{var e=this.peek();if(\"e\"==d&&this.isExpOperator(e))a+=d;else if(this.isExpOperator(d)&&e&&this.isNumber(e)&&\"e\"==a.charAt(a.length-1))a+=d;else if(!this.isExpOperator(d)||e&&this.isNumber(e)||\"e\"!=a.charAt(a.length-1))break;else this.throwError(\"Invalid exponent\")}this.index++}this.tokens.push({index:c,\ntext:a,constant:!0,value:Number(a)})},readIdent:function(){for(var a=this.index;this.index<this.text.length;){var c=this.text.charAt(this.index);if(!this.isIdent(c)&&!this.isNumber(c))break;this.index++}this.tokens.push({index:a,text:this.text.slice(a,this.index),identifier:!0})},readString:function(a){var c=this.index;this.index++;for(var d=\"\",e=a,f=!1;this.index<this.text.length;){var g=this.text.charAt(this.index),e=e+g;if(f)\"u\"===g?(f=this.text.substring(this.index+1,this.index+5),f.match(/[\\da-f]{4}/i)||\nthis.throwError(\"Invalid unicode escape [\\\\u\"+f+\"]\"),this.index+=4,d+=String.fromCharCode(parseInt(f,16))):d+=Xf[g]||g,f=!1;else if(\"\\\\\"===g)f=!0;else{if(g===a){this.index++;this.tokens.push({index:c,text:e,constant:!0,value:d});return}d+=g}this.index++}this.throwError(\"Unterminated quote\",c)}};var hb=function(a,c,d){this.lexer=a;this.$filter=c;this.options=d};hb.ZERO=z(function(){return 0},{sharedGetter:!0,constant:!0});hb.prototype={constructor:hb,parse:function(a){this.text=a;this.tokens=this.lexer.lex(a);\na=this.statements();0!==this.tokens.length&&this.throwError(\"is an unexpected token\",this.tokens[0]);a.literal=!!a.literal;a.constant=!!a.constant;return a},primary:function(){var a;this.expect(\"(\")?(a=this.filterChain(),this.consume(\")\")):this.expect(\"[\")?a=this.arrayDeclaration():this.expect(\"{\")?a=this.object():this.peek().identifier&&this.peek().text in lb?a=lb[this.consume().text]:this.peek().identifier?a=this.identifier():this.peek().constant?a=this.constant():this.throwError(\"not a primary expression\",\nthis.peek());for(var c,d;c=this.expect(\"(\",\"[\",\".\");)\"(\"===c.text?(a=this.functionCall(a,d),d=null):\"[\"===c.text?(d=a,a=this.objectIndex(a)):\".\"===c.text?(d=a,a=this.fieldAccess(a)):this.throwError(\"IMPOSSIBLE\");return a},throwError:function(a,c){throw la(\"syntax\",c.text,a,c.index+1,this.text,this.text.substring(c.index));},peekToken:function(){if(0===this.tokens.length)throw la(\"ueoe\",this.text);return this.tokens[0]},peek:function(a,c,d,e){return this.peekAhead(0,a,c,d,e)},peekAhead:function(a,\nc,d,e,f){if(this.tokens.length>a){a=this.tokens[a];var g=a.text;if(g===c||g===d||g===e||g===f||!(c||d||e||f))return a}return!1},expect:function(a,c,d,e){return(a=this.peek(a,c,d,e))?(this.tokens.shift(),a):!1},consume:function(a){if(0===this.tokens.length)throw la(\"ueoe\",this.text);var c=this.expect(a);c||this.throwError(\"is unexpected, expecting [\"+a+\"]\",this.peek());return c},unaryFn:function(a,c){var d=mb[a];return z(function(a,f){return d(a,f,c)},{constant:c.constant,inputs:[c]})},binaryFn:function(a,\nc,d,e){var f=mb[c];return z(function(c,e){return f(c,e,a,d)},{constant:a.constant&&d.constant,inputs:!e&&[a,d]})},identifier:function(){for(var a=this.consume().text;this.peek(\".\")&&this.peekAhead(1).identifier&&!this.peekAhead(2,\"(\");)a+=this.consume().text+this.consume().text;return zf(a,this.options,this.text)},constant:function(){var a=this.consume().value;return z(function(){return a},{constant:!0,literal:!0})},statements:function(){for(var a=[];;)if(0<this.tokens.length&&!this.peek(\"}\",\")\",\n\";\",\"]\")&&a.push(this.filterChain()),!this.expect(\";\"))return 1===a.length?a[0]:function(c,d){for(var e,f=0,g=a.length;f<g;f++)e=a[f](c,d);return e}},filterChain:function(){for(var a=this.expression();this.expect(\"|\");)a=this.filter(a);return a},filter:function(a){var c=this.$filter(this.consume().text),d,e;if(this.peek(\":\"))for(d=[],e=[];this.expect(\":\");)d.push(this.expression());var f=[a].concat(d||[]);return z(function(f,h){var l=a(f,h);if(e){e[0]=l;for(l=d.length;l--;)e[l+1]=d[l](f,h);return c.apply(t,\ne)}return c(l)},{constant:!c.$stateful&&f.every(ec),inputs:!c.$stateful&&f})},expression:function(){return this.assignment()},assignment:function(){var a=this.ternary(),c,d;return(d=this.expect(\"=\"))?(a.assign||this.throwError(\"implies assignment but [\"+this.text.substring(0,d.index)+\"] can not be assigned to\",d),c=this.ternary(),z(function(d,f){return a.assign(d,c(d,f),f)},{inputs:[a,c]})):a},ternary:function(){var a=this.logicalOR(),c;if(this.expect(\"?\")&&(c=this.assignment(),this.consume(\":\"))){var d=\nthis.assignment();return z(function(e,f){return a(e,f)?c(e,f):d(e,f)},{constant:a.constant&&c.constant&&d.constant})}return a},logicalOR:function(){for(var a=this.logicalAND(),c;c=this.expect(\"||\");)a=this.binaryFn(a,c.text,this.logicalAND(),!0);return a},logicalAND:function(){for(var a=this.equality(),c;c=this.expect(\"&&\");)a=this.binaryFn(a,c.text,this.equality(),!0);return a},equality:function(){for(var a=this.relational(),c;c=this.expect(\"==\",\"!=\",\"===\",\"!==\");)a=this.binaryFn(a,c.text,this.relational());\nreturn a},relational:function(){for(var a=this.additive(),c;c=this.expect(\"<\",\">\",\"<=\",\">=\");)a=this.binaryFn(a,c.text,this.additive());return a},additive:function(){for(var a=this.multiplicative(),c;c=this.expect(\"+\",\"-\");)a=this.binaryFn(a,c.text,this.multiplicative());return a},multiplicative:function(){for(var a=this.unary(),c;c=this.expect(\"*\",\"/\",\"%\");)a=this.binaryFn(a,c.text,this.unary());return a},unary:function(){var a;return this.expect(\"+\")?this.primary():(a=this.expect(\"-\"))?this.binaryFn(hb.ZERO,\na.text,this.unary()):(a=this.expect(\"!\"))?this.unaryFn(a.text,this.unary()):this.primary()},fieldAccess:function(a){var c=this.identifier();return z(function(d,e,f){d=f||a(d,e);return null==d?t:c(d)},{assign:function(d,e,f){(f=a(d,f))||a.assign(d,f={});return c.assign(f,e)}})},objectIndex:function(a){var c=this.text,d=this.expression();this.consume(\"]\");return z(function(e,f){var g=a(e,f),h=d(e,f);sa(h,c);return g?ta(g[h],c):t},{assign:function(e,f,g){var h=sa(d(e,g),c);(g=ta(a(e,g),c))||a.assign(e,\ng={});return g[h]=f}})},functionCall:function(a,c){var d=[];if(\")\"!==this.peekToken().text){do d.push(this.expression());while(this.expect(\",\"))}this.consume(\")\");var e=this.text,f=d.length?[]:null;return function(g,h){var l=c?c(g,h):y(c)?t:g,k=a(g,h,l)||C;if(f)for(var m=d.length;m--;)f[m]=ta(d[m](g,h),e);ta(l,e);if(k){if(k.constructor===k)throw la(\"isecfn\",e);if(k===Uf||k===Vf||k===Wf)throw la(\"isecff\",e);}l=k.apply?k.apply(l,f):k(f[0],f[1],f[2],f[3],f[4]);return ta(l,e)}},arrayDeclaration:function(){var a=\n[];if(\"]\"!==this.peekToken().text){do{if(this.peek(\"]\"))break;a.push(this.expression())}while(this.expect(\",\"))}this.consume(\"]\");return z(function(c,d){for(var e=[],f=0,g=a.length;f<g;f++)e.push(a[f](c,d));return e},{literal:!0,constant:a.every(ec),inputs:a})},object:function(){var a=[],c=[];if(\"}\"!==this.peekToken().text){do{if(this.peek(\"}\"))break;var d=this.consume();d.constant?a.push(d.value):d.identifier?a.push(d.text):this.throwError(\"invalid key\",d);this.consume(\":\");c.push(this.expression())}while(this.expect(\",\"))\n}this.consume(\"}\");return z(function(d,f){for(var g={},h=0,l=c.length;h<l;h++)g[a[h]]=c[h](d,f);return g},{literal:!0,constant:c.every(ec),inputs:c})}};var Bf=ha(),Af=ha(),Cf=Object.prototype.valueOf,Ca=T(\"$sce\"),ma={HTML:\"html\",CSS:\"css\",URL:\"url\",RESOURCE_URL:\"resourceUrl\",JS:\"js\"},ja=T(\"$compile\"),Z=Y.createElement(\"a\"),id=Ba(M.location.href);Dc.$inject=[\"$provide\"];jd.$inject=[\"$locale\"];ld.$inject=[\"$locale\"];var od=\".\",Mf={yyyy:$(\"FullYear\",4),yy:$(\"FullYear\",2,0,!0),y:$(\"FullYear\",1),MMMM:Ib(\"Month\"),\nMMM:Ib(\"Month\",!0),MM:$(\"Month\",2,1),M:$(\"Month\",1,1),dd:$(\"Date\",2),d:$(\"Date\",1),HH:$(\"Hours\",2),H:$(\"Hours\",1),hh:$(\"Hours\",2,-12),h:$(\"Hours\",1,-12),mm:$(\"Minutes\",2),m:$(\"Minutes\",1),ss:$(\"Seconds\",2),s:$(\"Seconds\",1),sss:$(\"Milliseconds\",3),EEEE:Ib(\"Day\"),EEE:Ib(\"Day\",!0),a:function(a,c){return 12>a.getHours()?c.AMPMS[0]:c.AMPMS[1]},Z:function(a){a=-1*a.getTimezoneOffset();return a=(0<=a?\"+\":\"\")+(Hb(Math[0<a?\"floor\":\"ceil\"](a/60),2)+Hb(Math.abs(a%60),2))},ww:qd(2),w:qd(1)},Lf=/((?:[^yMdHhmsaZEw']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z|w+))(.*)/,\nKf=/^\\-?\\d+$/;kd.$inject=[\"$locale\"];var Hf=da(Q),If=da(ub);md.$inject=[\"$parse\"];var Td=da({restrict:\"E\",compile:function(a,c){if(!c.href&&!c.xlinkHref&&!c.name)return function(a,c){var f=\"[object SVGAnimatedString]\"===Da.call(c.prop(\"href\"))?\"xlink:href\":\"href\";c.on(\"click\",function(a){c.attr(f)||a.preventDefault()})}}}),vb={};s(Eb,function(a,c){if(\"multiple\"!=a){var d=ya(\"ng-\"+c);vb[d]=function(){return{restrict:\"A\",priority:100,link:function(a,f,g){a.$watch(g[d],function(a){g.$set(c,!!a)})}}}}});\ns(Nc,function(a,c){vb[c]=function(){return{priority:100,link:function(a,e,f){if(\"ngPattern\"===c&&\"/\"==f.ngPattern.charAt(0)&&(e=f.ngPattern.match(Of))){f.$set(\"ngPattern\",new RegExp(e[1],e[2]));return}a.$watch(f[c],function(a){f.$set(c,a)})}}}});s([\"src\",\"srcset\",\"href\"],function(a){var c=ya(\"ng-\"+a);vb[c]=function(){return{priority:99,link:function(d,e,f){var g=a,h=a;\"href\"===a&&\"[object SVGAnimatedString]\"===Da.call(e.prop(\"href\"))&&(h=\"xlinkHref\",f.$attr[h]=\"xlink:href\",g=null);f.$observe(c,function(c){c?\n(f.$set(h,c),Ra&&g&&e.prop(g,f[h])):\"href\"===a&&f.$set(h,null)})}}}});var Jb={$addControl:C,$$renameControl:function(a,c){a.$name=c},$removeControl:C,$setValidity:C,$setDirty:C,$setPristine:C,$setSubmitted:C};rd.$inject=[\"$element\",\"$attrs\",\"$scope\",\"$animate\",\"$interpolate\"];var yd=function(a){return[\"$timeout\",function(c){return{name:\"form\",restrict:a?\"EAC\":\"E\",controller:rd,compile:function(a){a.addClass(Sa).addClass(kb);return{pre:function(a,d,g,h){if(!(\"action\"in g)){var l=function(c){a.$apply(function(){h.$commitViewValue();\nh.$setSubmitted()});c.preventDefault()};d[0].addEventListener(\"submit\",l,!1);d.on(\"$destroy\",function(){c(function(){d[0].removeEventListener(\"submit\",l,!1)},0,!1)})}var k=h.$$parentForm,m=h.$name;m&&(gb(a,m,h,m),g.$observe(g.name?\"name\":\"ngForm\",function(c){m!==c&&(gb(a,m,t,m),m=c,gb(a,m,h,m),k.$$renameControl(h,m))}));d.on(\"$destroy\",function(){k.$removeControl(h);m&&gb(a,m,t,m);z(h,Jb)})}}}}}]},Ud=yd(),ge=yd(!0),Nf=/\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/,Yf=/^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/,\nZf=/^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,$f=/^\\s*(\\-|\\+)?(\\d+|(\\d*(\\.\\d*)))\\s*$/,zd=/^(\\d{4})-(\\d{2})-(\\d{2})$/,Ad=/^(\\d{4})-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d)(?::(\\d\\d)(\\.\\d{1,3})?)?$/,jc=/^(\\d{4})-W(\\d\\d)$/,Bd=/^(\\d{4})-(\\d\\d)$/,Cd=/^(\\d\\d):(\\d\\d)(?::(\\d\\d)(\\.\\d{1,3})?)?$/,ag=/(\\s+|^)default(\\s+|$)/,Mb=new T(\"ngModel\"),Dd={text:function(a,c,d,e,f,g){ib(a,c,d,e,f,g);hc(e)},date:jb(\"date\",zd,Lb(zd,[\"yyyy\",\"MM\",\"dd\"]),\"yyyy-MM-dd\"),\"datetime-local\":jb(\"datetimelocal\",\nAd,Lb(Ad,\"yyyy MM dd HH mm ss sss\".split(\" \")),\"yyyy-MM-ddTHH:mm:ss.sss\"),time:jb(\"time\",Cd,Lb(Cd,[\"HH\",\"mm\",\"ss\",\"sss\"]),\"HH:mm:ss.sss\"),week:jb(\"week\",jc,function(a,c){if(pa(a))return a;if(F(a)){jc.lastIndex=0;var d=jc.exec(a);if(d){var e=+d[1],f=+d[2],g=d=0,h=0,l=0,k=pd(e),f=7*(f-1);c&&(d=c.getHours(),g=c.getMinutes(),h=c.getSeconds(),l=c.getMilliseconds());return new Date(e,0,k.getDate()+f,d,g,h,l)}}return NaN},\"yyyy-Www\"),month:jb(\"month\",Bd,Lb(Bd,[\"yyyy\",\"MM\"]),\"yyyy-MM\"),number:function(a,\nc,d,e,f,g){td(a,c,d,e);ib(a,c,d,e,f,g);e.$$parserName=\"number\";e.$parsers.push(function(a){return e.$isEmpty(a)?null:$f.test(a)?parseFloat(a):t});e.$formatters.push(function(a){if(!e.$isEmpty(a)){if(!V(a))throw Mb(\"numfmt\",a);a=a.toString()}return a});if(d.min||d.ngMin){var h;e.$validators.min=function(a){return e.$isEmpty(a)||D(h)||a>=h};d.$observe(\"min\",function(a){y(a)&&!V(a)&&(a=parseFloat(a,10));h=V(a)&&!isNaN(a)?a:t;e.$validate()})}if(d.max||d.ngMax){var l;e.$validators.max=function(a){return e.$isEmpty(a)||\nD(l)||a<=l};d.$observe(\"max\",function(a){y(a)&&!V(a)&&(a=parseFloat(a,10));l=V(a)&&!isNaN(a)?a:t;e.$validate()})}},url:function(a,c,d,e,f,g){ib(a,c,d,e,f,g);hc(e);e.$$parserName=\"url\";e.$validators.url=function(a,c){var d=a||c;return e.$isEmpty(d)||Yf.test(d)}},email:function(a,c,d,e,f,g){ib(a,c,d,e,f,g);hc(e);e.$$parserName=\"email\";e.$validators.email=function(a,c){var d=a||c;return e.$isEmpty(d)||Zf.test(d)}},radio:function(a,c,d,e){D(d.name)&&c.attr(\"name\",++nb);c.on(\"click\",function(a){c[0].checked&&\ne.$setViewValue(d.value,a&&a.type)});e.$render=function(){c[0].checked=d.value==e.$viewValue};d.$observe(\"value\",e.$render)},checkbox:function(a,c,d,e,f,g,h,l){var k=ud(l,a,\"ngTrueValue\",d.ngTrueValue,!0),m=ud(l,a,\"ngFalseValue\",d.ngFalseValue,!1);c.on(\"click\",function(a){e.$setViewValue(c[0].checked,a&&a.type)});e.$render=function(){c[0].checked=e.$viewValue};e.$isEmpty=function(a){return!1===a};e.$formatters.push(function(a){return fa(a,k)});e.$parsers.push(function(a){return a?k:m})},hidden:C,\nbutton:C,submit:C,reset:C,file:C},xc=[\"$browser\",\"$sniffer\",\"$filter\",\"$parse\",function(a,c,d,e){return{restrict:\"E\",require:[\"?ngModel\"],link:{pre:function(f,g,h,l){l[0]&&(Dd[Q(h.type)]||Dd.text)(f,g,h,l[0],c,a,d,e)}}}}],kb=\"ng-valid\",vd=\"ng-invalid\",Sa=\"ng-pristine\",Kb=\"ng-dirty\",xd=\"ng-pending\",bg=[\"$scope\",\"$exceptionHandler\",\"$attrs\",\"$element\",\"$parse\",\"$animate\",\"$timeout\",\"$rootScope\",\"$q\",\"$interpolate\",function(a,c,d,e,f,g,h,l,k,m){this.$modelValue=this.$viewValue=Number.NaN;this.$$rawModelValue=\nt;this.$validators={};this.$asyncValidators={};this.$parsers=[];this.$formatters=[];this.$viewChangeListeners=[];this.$untouched=!0;this.$touched=!1;this.$pristine=!0;this.$dirty=!1;this.$valid=!0;this.$invalid=!1;this.$error={};this.$$success={};this.$pending=t;this.$name=m(d.name||\"\",!1)(a);var p=f(d.ngModel),q=p.assign,u=p,r=q,O=null,n=this;this.$$setOptions=function(a){if((n.$options=a)&&a.getterSetter){var c=f(d.ngModel+\"()\"),g=f(d.ngModel+\"($$$p)\");u=function(a){var d=p(a);G(d)&&(d=c(a));return d};\nr=function(a,c){G(p(a))?g(a,{$$$p:n.$modelValue}):q(a,n.$modelValue)}}else if(!p.assign)throw Mb(\"nonassign\",d.ngModel,va(e));};this.$render=C;this.$isEmpty=function(a){return D(a)||\"\"===a||null===a||a!==a};var v=e.inheritedData(\"$formController\")||Jb,w=0;sd({ctrl:this,$element:e,set:function(a,c){a[c]=!0},unset:function(a,c){delete a[c]},parentForm:v,$animate:g});this.$setPristine=function(){n.$dirty=!1;n.$pristine=!0;g.removeClass(e,Kb);g.addClass(e,Sa)};this.$setDirty=function(){n.$dirty=!0;n.$pristine=\n!1;g.removeClass(e,Sa);g.addClass(e,Kb);v.$setDirty()};this.$setUntouched=function(){n.$touched=!1;n.$untouched=!0;g.setClass(e,\"ng-untouched\",\"ng-touched\")};this.$setTouched=function(){n.$touched=!0;n.$untouched=!1;g.setClass(e,\"ng-touched\",\"ng-untouched\")};this.$rollbackViewValue=function(){h.cancel(O);n.$viewValue=n.$$lastCommittedViewValue;n.$render()};this.$validate=function(){if(!V(n.$modelValue)||!isNaN(n.$modelValue)){var a=n.$$rawModelValue,c=n.$valid,d=n.$modelValue,e=n.$options&&n.$options.allowInvalid;\nn.$$runValidators(n.$error[n.$$parserName||\"parse\"]?!1:t,a,n.$$lastCommittedViewValue,function(f){e||c===f||(n.$modelValue=f?a:t,n.$modelValue!==d&&n.$$writeModelToScope())})}};this.$$runValidators=function(a,c,d,e){function f(){var a=!0;s(n.$validators,function(e,f){var g=e(c,d);a=a&&g;h(f,g)});return a?!0:(s(n.$asyncValidators,function(a,c){h(c,null)}),!1)}function g(){var a=[],e=!0;s(n.$asyncValidators,function(f,g){var l=f(c,d);if(!l||!G(l.then))throw Mb(\"$asyncValidators\",l);h(g,t);a.push(l.then(function(){h(g,\n!0)},function(a){e=!1;h(g,!1)}))});a.length?k.all(a).then(function(){l(e)},C):l(!0)}function h(a,c){m===w&&n.$setValidity(a,c)}function l(a){m===w&&e(a)}w++;var m=w;(function(a){var c=n.$$parserName||\"parse\";if(a===t)h(c,null);else if(h(c,a),!a)return s(n.$validators,function(a,c){h(c,null)}),s(n.$asyncValidators,function(a,c){h(c,null)}),!1;return!0})(a)?f()?g():l(!1):l(!1)};this.$commitViewValue=function(){var a=n.$viewValue;h.cancel(O);if(n.$$lastCommittedViewValue!==a||\"\"===a&&n.$$hasNativeValidators)n.$$lastCommittedViewValue=\na,n.$pristine&&this.$setDirty(),this.$$parseAndValidate()};this.$$parseAndValidate=function(){var c=n.$$lastCommittedViewValue,d=D(c)?t:!0;if(d)for(var e=0;e<n.$parsers.length;e++)if(c=n.$parsers[e](c),D(c)){d=!1;break}V(n.$modelValue)&&isNaN(n.$modelValue)&&(n.$modelValue=u(a));var f=n.$modelValue,g=n.$options&&n.$options.allowInvalid;n.$$rawModelValue=c;g&&(n.$modelValue=c,n.$modelValue!==f&&n.$$writeModelToScope());n.$$runValidators(d,c,n.$$lastCommittedViewValue,function(a){g||(n.$modelValue=\na?c:t,n.$modelValue!==f&&n.$$writeModelToScope())})};this.$$writeModelToScope=function(){r(a,n.$modelValue);s(n.$viewChangeListeners,function(a){try{a()}catch(d){c(d)}})};this.$setViewValue=function(a,c){n.$viewValue=a;n.$options&&!n.$options.updateOnDefault||n.$$debounceViewValueCommit(c)};this.$$debounceViewValueCommit=function(c){var d=0,e=n.$options;e&&y(e.debounce)&&(e=e.debounce,V(e)?d=e:V(e[c])?d=e[c]:V(e[\"default\"])&&(d=e[\"default\"]));h.cancel(O);d?O=h(function(){n.$commitViewValue()},d):\nl.$$phase?n.$commitViewValue():a.$apply(function(){n.$commitViewValue()})};a.$watch(function(){var c=u(a);if(c!==n.$modelValue){n.$modelValue=n.$$rawModelValue=c;for(var d=n.$formatters,e=d.length,f=c;e--;)f=d[e](f);n.$viewValue!==f&&(n.$viewValue=n.$$lastCommittedViewValue=f,n.$render(),n.$$runValidators(t,c,f,C))}return c})}],ve=[\"$rootScope\",function(a){return{restrict:\"A\",require:[\"ngModel\",\"^?form\",\"^?ngModelOptions\"],controller:bg,priority:1,compile:function(c){c.addClass(Sa).addClass(\"ng-untouched\").addClass(kb);\nreturn{pre:function(a,c,f,g){var h=g[0],l=g[1]||Jb;h.$$setOptions(g[2]&&g[2].$options);l.$addControl(h);f.$observe(\"name\",function(a){h.$name!==a&&l.$$renameControl(h,a)});a.$on(\"$destroy\",function(){l.$removeControl(h)})},post:function(c,e,f,g){var h=g[0];if(h.$options&&h.$options.updateOn)e.on(h.$options.updateOn,function(a){h.$$debounceViewValueCommit(a&&a.type)});e.on(\"blur\",function(e){h.$touched||(a.$$phase?c.$evalAsync(h.$setTouched):c.$apply(h.$setTouched))})}}}}}],xe=da({restrict:\"A\",require:\"ngModel\",\nlink:function(a,c,d,e){e.$viewChangeListeners.push(function(){a.$eval(d.ngChange)})}}),zc=function(){return{restrict:\"A\",require:\"?ngModel\",link:function(a,c,d,e){e&&(d.required=!0,e.$validators.required=function(a,c){return!d.required||!e.$isEmpty(c)},d.$observe(\"required\",function(){e.$validate()}))}}},yc=function(){return{restrict:\"A\",require:\"?ngModel\",link:function(a,c,d,e){if(e){var f,g=d.ngPattern||d.pattern;d.$observe(\"pattern\",function(a){F(a)&&0<a.length&&(a=new RegExp(\"^\"+a+\"$\"));if(a&&\n!a.test)throw T(\"ngPattern\")(\"noregexp\",g,a,va(c));f=a||t;e.$validate()});e.$validators.pattern=function(a){return e.$isEmpty(a)||D(f)||f.test(a)}}}}},Bc=function(){return{restrict:\"A\",require:\"?ngModel\",link:function(a,c,d,e){if(e){var f=-1;d.$observe(\"maxlength\",function(a){a=ba(a);f=isNaN(a)?-1:a;e.$validate()});e.$validators.maxlength=function(a,c){return 0>f||e.$isEmpty(a)||c.length<=f}}}}},Ac=function(){return{restrict:\"A\",require:\"?ngModel\",link:function(a,c,d,e){if(e){var f=0;d.$observe(\"minlength\",\nfunction(a){f=ba(a)||0;e.$validate()});e.$validators.minlength=function(a,c){return e.$isEmpty(c)||c.length>=f}}}}},we=function(){return{restrict:\"A\",priority:100,require:\"ngModel\",link:function(a,c,d,e){var f=c.attr(d.$attr.ngList)||\", \",g=\"false\"!==d.ngTrim,h=g?U(f):f;e.$parsers.push(function(a){if(!D(a)){var c=[];a&&s(a.split(h),function(a){a&&c.push(g?U(a):a)});return c}});e.$formatters.push(function(a){return x(a)?a.join(f):t});e.$isEmpty=function(a){return!a||!a.length}}}},cg=/^(true|false|\\d+)$/,\nye=function(){return{restrict:\"A\",priority:100,compile:function(a,c){return cg.test(c.ngValue)?function(a,c,f){f.$set(\"value\",a.$eval(f.ngValue))}:function(a,c,f){a.$watch(f.ngValue,function(a){f.$set(\"value\",a)})}}}},ze=function(){return{restrict:\"A\",controller:[\"$scope\",\"$attrs\",function(a,c){var d=this;this.$options=a.$eval(c.ngModelOptions);this.$options.updateOn!==t?(this.$options.updateOnDefault=!1,this.$options.updateOn=U(this.$options.updateOn.replace(ag,function(){d.$options.updateOnDefault=\n!0;return\" \"}))):this.$options.updateOnDefault=!0}]}},Zd=[\"$compile\",function(a){return{restrict:\"AC\",compile:function(c){a.$$addBindingClass(c);return function(c,e,f){a.$$addBindingInfo(e,f.ngBind);e=e[0];c.$watch(f.ngBind,function(a){e.textContent=a===t?\"\":a})}}}}],ae=[\"$interpolate\",\"$compile\",function(a,c){return{compile:function(d){c.$$addBindingClass(d);return function(d,f,g){d=a(f.attr(g.$attr.ngBindTemplate));c.$$addBindingInfo(f,d.expressions);f=f[0];g.$observe(\"ngBindTemplate\",function(a){f.textContent=\na===t?\"\":a})}}}}],$d=[\"$sce\",\"$parse\",\"$compile\",function(a,c,d){return{restrict:\"A\",compile:function(e,f){var g=c(f.ngBindHtml),h=c(f.ngBindHtml,function(a){return(a||\"\").toString()});d.$$addBindingClass(e);return function(c,e,f){d.$$addBindingInfo(e,f.ngBindHtml);c.$watch(h,function(){e.html(a.getTrustedHtml(g(c))||\"\")})}}}}],be=ic(\"\",!0),de=ic(\"Odd\",0),ce=ic(\"Even\",1),ee=Ja({compile:function(a,c){c.$set(\"ngCloak\",t);a.removeClass(\"ng-cloak\")}}),fe=[function(){return{restrict:\"A\",scope:!0,controller:\"@\",\npriority:500}}],Cc={},dg={blur:!0,focus:!0};s(\"click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste\".split(\" \"),function(a){var c=ya(\"ng-\"+a);Cc[c]=[\"$parse\",\"$rootScope\",function(d,e){return{restrict:\"A\",compile:function(f,g){var h=d(g[c],null,!0);return function(c,d){d.on(a,function(d){var f=function(){h(c,{$event:d})};dg[a]&&e.$$phase?c.$evalAsync(f):c.$apply(f)})}}}}]});var ie=[\"$animate\",function(a){return{multiElement:!0,\ntransclude:\"element\",priority:600,terminal:!0,restrict:\"A\",$$tlb:!0,link:function(c,d,e,f,g){var h,l,k;c.$watch(e.ngIf,function(c){c?l||g(function(c,f){l=f;c[c.length++]=Y.createComment(\" end ngIf: \"+e.ngIf+\" \");h={clone:c};a.enter(c,d.parent(),d)}):(k&&(k.remove(),k=null),l&&(l.$destroy(),l=null),h&&(k=tb(h.clone),a.leave(k).then(function(){k=null}),h=null))})}}}],je=[\"$templateRequest\",\"$anchorScroll\",\"$animate\",\"$sce\",function(a,c,d,e){return{restrict:\"ECA\",priority:400,terminal:!0,transclude:\"element\",\ncontroller:ga.noop,compile:function(f,g){var h=g.ngInclude||g.src,l=g.onload||\"\",k=g.autoscroll;return function(f,g,q,s,r){var t=0,n,v,w,L=function(){v&&(v.remove(),v=null);n&&(n.$destroy(),n=null);w&&(d.leave(w).then(function(){v=null}),v=w,w=null)};f.$watch(e.parseAsResourceUrl(h),function(e){var h=function(){!y(k)||k&&!f.$eval(k)||c()},q=++t;e?(a(e,!0).then(function(a){if(q===t){var c=f.$new();s.template=a;a=r(c,function(a){L();d.enter(a,null,g).then(h)});n=c;w=a;n.$emit(\"$includeContentLoaded\",\ne);f.$eval(l)}},function(){q===t&&(L(),f.$emit(\"$includeContentError\",e))}),f.$emit(\"$includeContentRequested\",e)):(L(),s.template=null)})}}}}],Ae=[\"$compile\",function(a){return{restrict:\"ECA\",priority:-400,require:\"ngInclude\",link:function(c,d,e,f){/SVG/.test(d[0].toString())?(d.empty(),a(Fc(f.template,Y).childNodes)(c,function(a){d.append(a)},{futureParentElement:d})):(d.html(f.template),a(d.contents())(c))}}}],ke=Ja({priority:450,compile:function(){return{pre:function(a,c,d){a.$eval(d.ngInit)}}}}),\nle=Ja({terminal:!0,priority:1E3}),me=[\"$locale\",\"$interpolate\",function(a,c){var d=/{}/g,e=/^when(Minus)?(.+)$/;return{restrict:\"EA\",link:function(f,g,h){function l(a){g.text(a||\"\")}var k=h.count,m=h.$attr.when&&g.attr(h.$attr.when),p=h.offset||0,q=f.$eval(m)||{},u={},m=c.startSymbol(),r=c.endSymbol(),t=m+k+\"-\"+p+r,n=ga.noop,v;s(h,function(a,c){var d=e.exec(c);d&&(d=(d[1]?\"-\":\"\")+Q(d[2]),q[d]=g.attr(h.$attr[c]))});s(q,function(a,e){u[e]=c(a.replace(d,t))});f.$watch(k,function(c){c=parseFloat(c);var d=\nisNaN(c);d||c in q||(c=a.pluralCat(c-p));c===v||d&&isNaN(v)||(n(),n=f.$watch(u[c],l),v=c)})}}}],ne=[\"$parse\",\"$animate\",function(a,c){var d=T(\"ngRepeat\"),e=function(a,c,d,e,k,m,p){a[d]=e;k&&(a[k]=m);a.$index=c;a.$first=0===c;a.$last=c===p-1;a.$middle=!(a.$first||a.$last);a.$odd=!(a.$even=0===(c&1))};return{restrict:\"A\",multiElement:!0,transclude:\"element\",priority:1E3,terminal:!0,$$tlb:!0,compile:function(f,g){var h=g.ngRepeat,l=Y.createComment(\" end ngRepeat: \"+h+\" \"),k=h.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\nif(!k)throw d(\"iexp\",h);var m=k[1],p=k[2],q=k[3],u=k[4],k=m.match(/^(?:(\\s*[\\$\\w]+)|\\(\\s*([\\$\\w]+)\\s*,\\s*([\\$\\w]+)\\s*\\))$/);if(!k)throw d(\"iidexp\",m);var r=k[3]||k[1],y=k[2];if(q&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(q)||/^(null|undefined|this|\\$index|\\$first|\\$middle|\\$last|\\$even|\\$odd|\\$parent)$/.test(q)))throw d(\"badident\",q);var n,v,w,D,z={$id:Na};u?n=a(u):(w=function(a,c){return Na(c)},D=function(a){return a});return function(a,f,g,k,m){n&&(v=function(c,d,e){y&&(z[y]=c);z[r]=d;z.$index=e;return n(a,\nz)});var u=ha();a.$watchCollection(p,function(g){var k,p,n=f[0],E,z=ha(),C,S,N,G,J,x,H;q&&(a[q]=g);if(Ta(g))J=g,p=v||w;else{p=v||D;J=[];for(H in g)g.hasOwnProperty(H)&&\"$\"!=H.charAt(0)&&J.push(H);J.sort()}C=J.length;H=Array(C);for(k=0;k<C;k++)if(S=g===J?k:J[k],N=g[S],G=p(S,N,k),u[G])x=u[G],delete u[G],z[G]=x,H[k]=x;else{if(z[G])throw s(H,function(a){a&&a.scope&&(u[a.id]=a)}),d(\"dupes\",h,G,N);H[k]={id:G,scope:t,clone:t};z[G]=!0}for(E in u){x=u[E];G=tb(x.clone);c.leave(G);if(G[0].parentNode)for(k=0,\np=G.length;k<p;k++)G[k].$$NG_REMOVED=!0;x.scope.$destroy()}for(k=0;k<C;k++)if(S=g===J?k:J[k],N=g[S],x=H[k],x.scope){E=n;do E=E.nextSibling;while(E&&E.$$NG_REMOVED);x.clone[0]!=E&&c.move(tb(x.clone),null,B(n));n=x.clone[x.clone.length-1];e(x.scope,k,r,N,y,S,C)}else m(function(a,d){x.scope=d;var f=l.cloneNode(!1);a[a.length++]=f;c.enter(a,null,B(n));n=f;x.clone=a;z[x.id]=x;e(x.scope,k,r,N,y,S,C)});u=z})}}}}],oe=[\"$animate\",function(a){return{restrict:\"A\",multiElement:!0,link:function(c,d,e){c.$watch(e.ngShow,\nfunction(c){a[c?\"removeClass\":\"addClass\"](d,\"ng-hide\",{tempClasses:\"ng-hide-animate\"})})}}}],he=[\"$animate\",function(a){return{restrict:\"A\",multiElement:!0,link:function(c,d,e){c.$watch(e.ngHide,function(c){a[c?\"addClass\":\"removeClass\"](d,\"ng-hide\",{tempClasses:\"ng-hide-animate\"})})}}}],pe=Ja(function(a,c,d){a.$watch(d.ngStyle,function(a,d){d&&a!==d&&s(d,function(a,d){c.css(d,\"\")});a&&c.css(a)},!0)}),qe=[\"$animate\",function(a){return{restrict:\"EA\",require:\"ngSwitch\",controller:[\"$scope\",function(){this.cases=\n{}}],link:function(c,d,e,f){var g=[],h=[],l=[],k=[],m=function(a,c){return function(){a.splice(c,1)}};c.$watch(e.ngSwitch||e.on,function(c){var d,e;d=0;for(e=l.length;d<e;++d)a.cancel(l[d]);d=l.length=0;for(e=k.length;d<e;++d){var r=tb(h[d].clone);k[d].$destroy();(l[d]=a.leave(r)).then(m(l,d))}h.length=0;k.length=0;(g=f.cases[\"!\"+c]||f.cases[\"?\"])&&s(g,function(c){c.transclude(function(d,e){k.push(e);var f=c.element;d[d.length++]=Y.createComment(\" end ngSwitchWhen: \");h.push({clone:d});a.enter(d,\nf.parent(),f)})})})}}}],re=Ja({transclude:\"element\",priority:1200,require:\"^ngSwitch\",multiElement:!0,link:function(a,c,d,e,f){e.cases[\"!\"+d.ngSwitchWhen]=e.cases[\"!\"+d.ngSwitchWhen]||[];e.cases[\"!\"+d.ngSwitchWhen].push({transclude:f,element:c})}}),se=Ja({transclude:\"element\",priority:1200,require:\"^ngSwitch\",multiElement:!0,link:function(a,c,d,e,f){e.cases[\"?\"]=e.cases[\"?\"]||[];e.cases[\"?\"].push({transclude:f,element:c})}}),ue=Ja({restrict:\"EAC\",link:function(a,c,d,e,f){if(!f)throw T(\"ngTransclude\")(\"orphan\",\nva(c));f(function(a){c.empty();c.append(a)})}}),Vd=[\"$templateCache\",function(a){return{restrict:\"E\",terminal:!0,compile:function(c,d){\"text/ng-template\"==d.type&&a.put(d.id,c[0].text)}}}],eg=T(\"ngOptions\"),te=da({restrict:\"A\",terminal:!0}),Wd=[\"$compile\",\"$parse\",function(a,c){var d=/^\\s*([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+group\\s+by\\s+([\\s\\S]+?))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?$/,e={$setViewValue:C};\nreturn{restrict:\"E\",require:[\"select\",\"?ngModel\"],controller:[\"$element\",\"$scope\",\"$attrs\",function(a,c,d){var l=this,k={},m=e,p;l.databound=d.ngModel;l.init=function(a,c,d){m=a;p=d};l.addOption=function(c,d){Ma(c,'\"option value\"');k[c]=!0;m.$viewValue==c&&(a.val(c),p.parent()&&p.remove());d&&d[0].hasAttribute(\"selected\")&&(d[0].selected=!0)};l.removeOption=function(a){this.hasOption(a)&&(delete k[a],m.$viewValue===a&&this.renderUnknownOption(a))};l.renderUnknownOption=function(c){c=\"? \"+Na(c)+\" ?\";\np.val(c);a.prepend(p);a.val(c);p.prop(\"selected\",!0)};l.hasOption=function(a){return k.hasOwnProperty(a)};c.$on(\"$destroy\",function(){l.renderUnknownOption=C})}],link:function(e,g,h,l){function k(a,c,d,e){d.$render=function(){var a=d.$viewValue;e.hasOption(a)?(C.parent()&&C.remove(),c.val(a),\"\"===a&&n.prop(\"selected\",!0)):D(a)&&n?c.val(\"\"):e.renderUnknownOption(a)};c.on(\"change\",function(){a.$apply(function(){C.parent()&&C.remove();d.$setViewValue(c.val())})})}function m(a,c,d){var e;d.$render=function(){var a=\nnew db(d.$viewValue);s(c.find(\"option\"),function(c){c.selected=y(a.get(c.value))})};a.$watch(function(){fa(e,d.$viewValue)||(e=qa(d.$viewValue),d.$render())});c.on(\"change\",function(){a.$apply(function(){var a=[];s(c.find(\"option\"),function(c){c.selected&&a.push(c.value)});d.$setViewValue(a)})})}function p(e,f,g){function h(a,c,d){T[A]=d;H&&(T[H]=c);return a(e,T)}function k(a){var c;if(u)if(M&&x(a)){c=new db([]);for(var d=0;d<a.length;d++)c.put(h(M,null,a[d]),!0)}else c=new db(a);else M&&(a=h(M,null,\na));return function(d,e){var f;f=M?M:B?B:F;return u?y(c.remove(h(f,d,e))):a===h(f,d,e)}}function l(){v||(e.$$postDigest(p),v=!0)}function m(a,c,d){a[c]=a[c]||0;a[c]+=d?1:-1}function p(){v=!1;var a={\"\":[]},c=[\"\"],d,l,n,r,t;n=g.$viewValue;r=P(e)||[];var B=H?Object.keys(r).sort():r,x,A,D,F,N={};t=k(n);var I=!1,U,V;Q={};for(F=0;D=B.length,F<D;F++){x=F;if(H&&(x=B[F],\"$\"===x.charAt(0)))continue;A=r[x];d=h(J,x,A)||\"\";(l=a[d])||(l=a[d]=[],c.push(d));d=t(x,A);I=I||d;A=h(C,x,A);A=y(A)?A:\"\";V=M?M(e,T):H?B[F]:\nF;M&&(Q[V]=x);l.push({id:V,label:A,selected:d})}u||(z||null===n?a[\"\"].unshift({id:\"\",label:\"\",selected:!I}):I||a[\"\"].unshift({id:\"?\",label:\"\",selected:!0}));x=0;for(B=c.length;x<B;x++){d=c[x];l=a[d];R.length<=x?(n={element:G.clone().attr(\"label\",d),label:l.label},r=[n],R.push(r),f.append(n.element)):(r=R[x],n=r[0],n.label!=d&&n.element.attr(\"label\",n.label=d));I=null;F=0;for(D=l.length;F<D;F++)d=l[F],(t=r[F+1])?(I=t.element,t.label!==d.label&&(m(N,t.label,!1),m(N,d.label,!0),I.text(t.label=d.label),\nI.prop(\"label\",t.label)),t.id!==d.id&&I.val(t.id=d.id),I[0].selected!==d.selected&&(I.prop(\"selected\",t.selected=d.selected),Ra&&I.prop(\"selected\",t.selected))):(\"\"===d.id&&z?U=z:(U=w.clone()).val(d.id).prop(\"selected\",d.selected).attr(\"selected\",d.selected).prop(\"label\",d.label).text(d.label),r.push(t={element:U,label:d.label,id:d.id,selected:d.selected}),m(N,d.label,!0),I?I.after(U):n.element.append(U),I=U);for(F++;r.length>F;)d=r.pop(),m(N,d.label,!1),d.element.remove()}for(;R.length>x;){l=R.pop();\nfor(F=1;F<l.length;++F)m(N,l[F].label,!1);l[0].element.remove()}s(N,function(a,c){0<a?q.addOption(c):0>a&&q.removeOption(c)})}var n;if(!(n=r.match(d)))throw eg(\"iexp\",r,va(f));var C=c(n[2]||n[1]),A=n[4]||n[6],D=/ as /.test(n[0])&&n[1],B=D?c(D):null,H=n[5],J=c(n[3]||\"\"),F=c(n[2]?n[1]:A),P=c(n[7]),M=n[8]?c(n[8]):null,Q={},R=[[{element:f,label:\"\"}]],T={};z&&(a(z)(e),z.removeClass(\"ng-scope\"),z.remove());f.empty();f.on(\"change\",function(){e.$apply(function(){var a=P(e)||[],c;if(u)c=[],s(f.val(),function(d){d=\nM?Q[d]:d;c.push(\"?\"===d?t:\"\"===d?null:h(B?B:F,d,a[d]))});else{var d=M?Q[f.val()]:f.val();c=\"?\"===d?t:\"\"===d?null:h(B?B:F,d,a[d])}g.$setViewValue(c);p()})});g.$render=p;e.$watchCollection(P,l);e.$watchCollection(function(){var a=P(e),c;if(a&&x(a)){c=Array(a.length);for(var d=0,f=a.length;d<f;d++)c[d]=h(C,d,a[d])}else if(a)for(d in c={},a)a.hasOwnProperty(d)&&(c[d]=h(C,d,a[d]));return c},l);u&&e.$watchCollection(function(){return g.$modelValue},l)}if(l[1]){var q=l[0];l=l[1];var u=h.multiple,r=h.ngOptions,\nz=!1,n,v=!1,w=B(Y.createElement(\"option\")),G=B(Y.createElement(\"optgroup\")),C=w.clone();h=0;for(var A=g.children(),H=A.length;h<H;h++)if(\"\"===A[h].value){n=z=A.eq(h);break}q.init(l,z,C);u&&(l.$isEmpty=function(a){return!a||0===a.length});r?p(e,g,l):u?m(e,g,l):k(e,g,l,q)}}}}],Yd=[\"$interpolate\",function(a){var c={addOption:C,removeOption:C};return{restrict:\"E\",priority:100,compile:function(d,e){if(D(e.value)){var f=a(d.text(),!0);f||e.$set(\"value\",d.text())}return function(a,d,e){var k=d.parent(),\nm=k.data(\"$selectController\")||k.parent().data(\"$selectController\");m&&m.databound||(m=c);f?a.$watch(f,function(a,c){e.$set(\"value\",a);c!==a&&m.removeOption(c);m.addOption(a,d)}):m.addOption(e.value,d);d.on(\"$destroy\",function(){m.removeOption(e.value)})}}}}],Xd=da({restrict:\"E\",terminal:!1});M.angular.bootstrap?console.log(\"WARNING: Tried to load angular more than once.\"):(Nd(),Pd(ga),B(Y).ready(function(){Jd(Y,sc)}))})(window,document);!window.angular.$$csp()&&window.angular.element(document).find(\"head\").prepend('<style type=\"text/css\">@charset \"UTF-8\";[ng\\\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\\\:form{display:block;}</style>');\n//# sourceMappingURL=angular.min.js.map\n\n; browserify_shim__define__module__export__(typeof angular != \"undefined\" ? angular : window.angular);\n\n}).call(global, undefined, undefined, undefined, undefined, function defineExport(ex) { module.exports = ex; });\n","\n/******************************************************************** \n*   CONFIG.JS\n*   Description: Defines configuration and routes for angular app.\n*   Use: Registered with core angular module in app.js\n*\n*********************************************************************/\n\n;(function() {\n    \"use strict\";\n\n    module.exports = [\n    \"$urlRouterProvider\",\n    \"$stateProvider\",\n    function ($urlRouterProvider, $stateProvider) {\n\n        //default state is /home\n        $urlRouterProvider.otherwise(\"/home\");\n\n        $stateProvider\n            .state(\"root\", {\n                abstract: true,\n                url:\"/home\",\n                templateUrl: \"angular/partials/root.html\",\n                controller: \"RootController\"\n            })\n\n            .state(\"root.landing\", {\n                url: \"\",\n                templateUrl: \"angular/partials/root.landing.html\",\n                controller: \"LandingController\"\n            })\n  \n            .state(\"root.landing.services\", {\n                url: \"/services\",\n                templateUrl: \"angular/partials/root.landing.services.html\",\n                controller: \"ServicesController\" \n            })\n  \n            .state(\"root.address-search\", {\n                url: \"/{service}/search\",\n                templateUrl: \"angular/partials/root.address-search.html\",\n                controller: \"SearchController\"\n            })\n  \n            .state(\"root.address-found\", {\n                url: \"/{service}/location/{address}\",\n                templateUrl: \"angular/partials/root.address-found.html\",\n                controller: \"LocationController\"\n            })\n  \n            .state(\"root.address-found.list-view\", {\n                url: \"/list\",\n                templateUrl: \"angular/partials/root.address-found.list-view.html\",\n                controller: \"ListController\" \n            })\n  \n            .state(\"root.address-found.single-view\", {\n                url: \"/{id}\",\n                templateUrl: \"angular/partials/root.address-found.single-view.html\",\n                controller: \"SingleController\" \n            })\n\n    }];\n}());\n","/******************************************************************************  \n*   CONTROLLER/INDEX.JS\n*   Description: Defines a single angular controller\n*   Use: Registers controller with controller module and injects to core module\n*    \n*******************************************************************************/\n\n;(function () {\n    \"use strict\";\n\n    angular.module(\"maps\")\n\n        .controller(\"RootController\", require(\"./root-controller.js\"))\n        .controller(\"LandingController\", require(\"./landing-controller.js\"))\n        .controller(\"ServicesController\", require(\"./services-controller.js\"))\n        .controller(\"SearchController\", require(\"./search-controller.js\"))\n        .controller(\"LocationController\", require(\"./location-controller.js\"))\n        .controller(\"ListController\", require(\"./list-controller.js\"))\n        .controller(\"SingleController\", require(\"./single-controller.js\"));\n}());\n","/****************************************\n*   LANDING-CONTROLLER.JS\n*\n*\n*****************************************/\n;(function () {\n    \"use strict\";\n\n    module.exports = [\n        \"$scope\",\n        function ($scope) {\n            \n            //stores function names and corresponding paths for landing-page buttons\n            $scope.buttons = [\n                {\n                    id: \"findYourNearest\",\n                    title: \"Find Your Nearest\",\n                    path: \"root.landing.services\",\n                    iconUrl: \"img/icons/find-your-nearest.png\"\n                },\n                {\n                    id: \"aboutYourNeighbourhood\",\n                    title: \"About Your Neighbourhood\",\n                    path: \"/neighbourhood/search\",\n                    iconUrl: \"img/icons/your-neighbourhood.png\"\n                },\n                {\n                    id: \"liveStreetworks\",\n                    title: \"Live Streetworks\",\n                    path: \"/streetworks/search\",\n                    iconUrl: \"img/icons/streetworks.png\"\n                }\n            ]; \n        }\n    ];\n\n}());\n","/*****************************\n*   LIST-CONTROLLER.JS\n*\n*****************************/\n\n;(function () {\n    \"use strict\";\n\n    module.exports = [\n        \"$scope\",\n        \"$stateParams\",\n        \"$location\", \n        function ($scope, $stateParams, $location) {\n  \n\n            // //button to exit list view\n            // $scope.exit = function exit () {\n            //     var destination = \"/home/\" + $stateParams.service + \"/location/\" + $stateParams.address;\n            //     $location.path(destination);\n            // };\n\n            //handler for each result\n            function createResultsHandler (id) {\n                return function () {\n                    var path = \"/service\" + $stateParams.service + \n                        \"/location/\" + $stateParams.address +\n                        id;\n                    $location.path(path); \n                };\n            }\n\n/*\n            //add handler to results list\n            (function addResultsHandlers (index){\n                if (index > $scope.results.length) {\n                    return;\n                }\n                $scope.results[index].createResultsHandler($scope.result.id);\n                addResultsHandlers(index+1);\n            }(0));\n*/\n            }\n    ];\n}());\n","/******************************\n*   LOCATION-CONTROLLER.JS\n*\n******************************/\n\n//TODO: Add handler for List Results and Search Again buttons\n\n;(function () {\n    \"use strict\";\n\n    module.exports = [\n        \"$scope\",\n        \"$location\",\n        \"$stateParams\",\n        \"$http\",\n        function ($scope, $location, $stateParams, $http) {\n\n            \n            //reloads $scope.results with new data based on address \n            $http.get(\"/services/\" + $stateParams.service + \"/locations/\" + $stateParams.address)\n                .success(function success (data) {\n                    $scope.updateResults(data.properties);\n                    $scope.updateLocation(data.location);\n                });\n\n            $scope.service = $stateParams.service;\n            $scope.address = $stateParams.address.toUpperCase();\n\n            $scope.searchAgain = function searchAgain () {\n                //TODO: write logic for function\n                $scope.updateMarkers({});\n                $location.path(\"/home\");\n            };\n\n            $scope.listResults = function listResults () {       \n                //TODO: write logic for function\n                var destination = \"/home/\"+$scope.service+\"/location/\"+$scope.address+\"/list\"; \n                $location.path(destination);\n            };\n\n            var called = false; \n\n            //button to exit list view\n            $scope.exit = function exit () {\n                var destination = \"/home/\" + $stateParams.service + \"/location/\" + $stateParams.address;\n                $location.path(destination);\n            };\n\n            $scope.toggle = function toggle() {\n                if(!called) { called = true; return $scope.listResults(); }\n                $scope.exit();\n                called = false;\n            };\n\n            //return icon url from menu.json\n            $http.get(\"menu.json\")\n                .success(function success(menu) {\n                    $scope.iconUrl = menu.filter(function (item) {\n                        return item.title === $scope.service;\n                    })[0].img;\n                });\n\n\n            $scope.addMarkers = function addMarkers() {\n\n                    var root = $scope.results;\n\n                    console.log('results', $scope.results);\n\n\n                    function lat(i){\n                        return Number($scope.results[i][\"Latitude\"]);\n                    }\n\n                    function lng(i) {\n                        return Number(root[i][\"Longitude\"]);\n                    }\n\n                    function message(i) {\n                        //this stops undefined being returned in message\n                        var check = function(value, spacing) {\n                            if(value !== undefined) {\n                                pointMessage += (value + spacing);\n                            }\n                        };\n\n                        var pointMessage = \"\";\n\n                        //TODO work out a sensible way to loop over this.... \n                        //TODO replace view with nothing if it returns 0, ref car parks\n                        check(root[i][\"display\"][\"Name\"] || root[i][\"display\"][0][\"-Name\"], \"<br>\"); \n                        check(root[i][\"BuildingName\"], \"<br>\");\n                        check(root[i][\"View\"], \" \");\n                        check(root[i][\"Street\"], \"<br>\"); \n                        check(root[i][\"PostCode\"], \"<br>\");\n                        check(root[i][\"display\"][\"Telephone\"], \"\");\n\n                        // return PoIName + \"<br>\" + root.Property[i][\"-BuildingName\"] + \"<br>\" + root.Property[i][\"-StreetNum\"] + \" \" + root.Property[i][\"-Street\"] + \"<br>\" + root.Property[i][\"-PostCode\"] + \"<br>\" + root.Property[i][\"PoI\"][\"-Telephone\"];\n\n                        return pointMessage;\n                    }\n\n                    //this hard coding is for development purposes - *MUST* be changed\n                    //only returns the first Name when there are more than one\n                    var firstEight = {\n\n                        m1: {\n                            lat: lat(0),\n                            lng: lng(0),\n                            message: message(0)\n\n                        },\n                        m2: {\n                            lat: lat(1),\n                            lng: lng(1),\n                            message: message(1)\n                        },\n                        m3: {\n                            lat: lat(2),\n                            lng: lng(2),\n                            message: message(2)\n                        },\n                        m4: {\n                            lat: lat(3),\n                            lng: lng(3),\n                            message: message(3)\n                        },\n                        m5: {\n                            lat: lat(4),\n                            lng: lng(4),\n                            message: message(4)\n                        },\n                        m6: {\n                            lat: lat(5),\n                            lng: lng(5),\n                            message: message(5)\n                        },\n                        m7: {\n                            lat: lat(6),\n                            lng: lng(6),\n                            message: message(6)\n                        },\n                        m8: {\n                            lat: lat(7),\n                            lng: lng(7),\n                            message: message(7)\n                        }\n\n                    };\n\n                $scope.updateMarkers(firstEight);\n\n                };\n\n                $scope.addMarkers();\n\n\n\n\n        }\n    ];\n}());\n","/***************************\n*   ROOT-CONTROLLER.JS\n*\n***************************/\n;(function () {\n    \"use strict\";\n\n    module.exports = [\n        \"$scope\",\n        function ($scope) {\n            \n            //stores results at root for access by all controllers\n            $scope.results = [];\n            //stores entered location at root for access by leafletjs\n            $scope.location = {};\n            //functions to update results and location on root level \n            $scope.updateResults = function updateResults (newResults) {\n                $scope.results = newResults;\n            };\n            $scope.updateLocation = function updateLocation (newLocation) {\n                $scope.location = newLocation;\n            };\n\n\n            var regions = {\n                camdenBorough: {\n                    northEast: {\n                        lat: 51.57878,\n                        lng: -0.094538\n                    },\n                    southWest: {\n                        lat: 51.510989,\n                        lng: -0.218649\n                    }\n                }\n            };\n\n            $scope.setRegion = function(region) {\n                if (!region) {\n                    $scope.maxbounds = {};\n                } else {\n                    $scope.maxbounds = regions[region];\n                }\n            };\n\n            angular.extend($scope, {\n                camden: {\n                    lat: 51.535923,\n                    lng: -0.139991,\n                    zoom: 14\n                },\n                maxbounds: regions.camdenBorough,\n                defaults: {\n                    scrollWheelZoom: false\n                },\n                markers: {}      \n            });\n\n            $scope.updateMarkers = function updateMarkers(newMarkers){\n                $scope.markers = newMarkers;\n            };\n            \n\n        }  \n    ];\n}());\n","/********************************\n*   SEARCH-CONTROLLER.JS\n*\n********************************/\n\n//TODO: Better error handling\n//TODO: Must have input validation for address/street name: HOW??? \n//TODO: Add button handlers for 'Search Again' and 'List Results'\n\n\n;(function () {\n    \"use strict\";\n\n    module.exports = [\n        \"$scope\",\n        \"$stateParams\",\n        \"$location\",\n        \"$http\",\n        function ($scope, $stateParams, $location, $http) {\n\n            //model for search query\n            $scope.address = \"\";\n            //model for error messages\n            $scope.error = \"\";\n            //model for service results\n            $scope.results = [];\n            //model for title\n            $scope.service = $stateParams.service;\n            //model for icon\n            $scope.iconUrl = \"\";\n            \n            //return icon url from menu.json\n            $http.get(\"menu.json\")\n                .success(function success(menu) {\n                    $scope.iconUrl = menu.filter(function (item) {\n                        return item.title === $scope.service;\n                    })[0].img;\n                });\n\n            //populate results when response is received\n            $http.get(\"/services/\" + $stateParams.service)\n                .success(function success (data) {\n                    $scope.updateResults(data.properties);\n                });\n\n            //redirects to next state when provided with address\n            $scope.search = function search () {\n                if ($scope.address) {\n                    var path = \"/home/\" + $stateParams.service + \"/location/\" + $scope.address;\n                    $location.path(path);\n                } else {\n                    $scope.error = \"Please enter an address\";\n                } \n            };\n\n            $scope.searchAgain = function searchAgain () {\n                //TODO: write logic for function\n                $location.path(\"/home\");\n            };\n\n            $scope.listResults = function listResults () {\n                //TODO: write logic for function\n                console.log($scope.results);\n                // var destination = \"/home/\"+$scope.service+\"/location/\"+$scope.address+\"/list\"; \n            };\n\n        }\n    ];\n}());\n","/*******************************************\n*   SERVICES-CONTROLLER.JS\n*\n*\n********************************************/\n\n//TODO: Write menu JSON\n//TODO: Write service to access menu\n//TODO: Preload visible items in a resolve\n\n;(function () {\n    \"use strict\";\n\n    module.exports = [\n            \"$scope\",\n            \"$location\",\n            \"$http\",\n            function ($scope, $location, $http) {\n         \n\n                //***************** Initialize menu and variables **************\n               \n                //current index of visibleItems within currentCategory\n                var currentIndex = 0, \n                //number of items visible in menu\n                    numberOfItems = 3,\n                //current position in the menu\n                    currentPosition = 0,\n                //all items in current category\n                    currentCategory = [],\n                //stores full menu\n                    menu = [];\n                //stores currently visible items\n                $scope.visibleItems = [];\n               \n               \n                //****************** Menu population functions ***************** \n                \n                //makes visible 4 items from current category\n                function getVisibleItems(index) {\n                    $scope.visibleItems = currentCategory[index];\n                }\n\n                // console.log('item', item);\n                // console.log('img', item.img);\n                \n                //handler that either redirects user or opens new category \n                function clickHandler (item) {\n                    if (item.type === \"service\") {\n                        var path = \"/home/\" + item.title + item.text + \"/search\";\n                        $location.path(path);\n                    } else if (item.type === \"category\") {\n                        currentIndex = 0;\n                        currentPosition = item.id;\n                        getCurrentCategory(currentPosition, numberOfItems);\n                        getVisibleItems(currentIndex);\n                    }\n                }\n                \n                //adds click handler functions to menu items\n                function addClickHandler (item) {\n                    return function () {\n                        clickHandler(item);\n                    };\n                }\n                \n                //populates currentCategory with items in current position in menu\n                function getCurrentCategory(positionInMenu, amountPerPage) {\n                    currentCategory = [];\n                    var fullCategory = menu.filter(function (item) {\n                        return Number(item.parentId) === Number(positionInMenu);\n                    });\n                    var i, index = 0;\n                    for (i = 0; i < fullCategory.length; i += 1) {\n                        if (i && i % amountPerPage === 0) {\n                            index = i / amountPerPage;\n                            currentCategory[index] = [];\n                        } else if (!i) {\n                            currentCategory[index] = [];\n                        }\n                        fullCategory[i].handler = addClickHandler(fullCategory[i]);\n                        currentCategory[index].push(fullCategory[i]);\n                    }\n                }\n                \n                //loads menu \n                $http.get(\"menu.json\")\n                    .success(function success (data) {\n                        menu = data;\n                        getCurrentCategory(currentPosition, numberOfItems);\n                        getVisibleItems(currentIndex);\n                    });\n\n                //********************* Menu control functions ******************\n               \n                //loads next page of items\n                $scope.nextItems = function nextItems () {\n                    if (currentIndex === currentCategory.length-1) {\n                        return;\n                    } else {\n                        currentIndex += 1;\n                        getVisibleItems(currentIndex);\n                    }\n                };\n                //loads previous page of items\n                $scope.prevItems = function prevItems () {\n                    if (currentIndex === 0) {\n                        return;\n                    } else {\n                        currentIndex -= 1;\n                        getVisibleItems(currentIndex);\n                    }\n                };\n                //loads parent category\n                $scope.backOneCategory = function backOneCategory () {\n                    if (Number(currentPosition) === 0) {\n                        return;\n                    } else {\n                        currentPosition = menu.filter(function(item){\n                            return Number(item.id) === Number(currentPosition);\n                        })[0].parentId;\n                        currentIndex = 0;\n                        getCurrentCategory(currentPosition, numberOfItems);\n                        getVisibleItems(currentIndex);\n                    }\n                };\n               \n                //execute function to solve scoping issues with ng-repeat & ng-click\n                $scope.execute = function execute (fn) {\n                    fn();\n                };\n\n            }\n        ];\n\n}());\n","/*******************************\n*   SINGLE-CONTROLLER.JS\n*\n********************************/\n\n;(function () {\n    \"use strict\";\n\n    module.exports = [\n            \"$stateParams\",\n            \"$scope\",\n            \"$http\",\n            function ($stateParams, $scope, $http) {\n\n                //TODO: Do some DATA CLEANING so data is standardized before it reaches us\n\n                /*\n                //CHECKME: theoretically shouldn't be executed if cache is working correctly.\n                //loads results if not previously loaded (i.e navigated to directly by url)\n                apiSearch.search($stateParams.service, $stateParams.address)\n                    .then(function success (data) {\n                        $scope.results = data;\n                    });\n                */\n\n                $http.get(\"/services/\" + $stateParams.service + \"/locations/\" + $stateParams.address)\n                    .success(function success (data) {\n                        $scope.updateResults(data.properties);\n                        $scope.updateLocation(data.location);\n                        \n                        //selects item from results with matching {id}\n                        $scope.result = $scope.results.filter(function (result) {\n                            return result.display.Name === $stateParams.id;\n                        })[0];\n                    });\n\n              \n                 //selects item from results with matching {id}\n                $scope.result = $scope.results.filter(function (result) {\n                    return result.display.Name === $stateParams.id;\n                })[0];\n\n            }\n        ];\n}());\n"],"sourceRoot":"/source/"}