# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Camden-maps API
  description: Investigate and explore the Camden maps API 
  version: "1.0.0"
# the domain of the service
host: camdenmaps.herokuapp.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all path
basePath:
produces:
  - application/json
paths:
  /seveices/{service}:
    get:
      summary: /services/{service}
      description: |
        The servcies endpoint returns the location of all the locations of a selected Camden Council service 
      parameters:
        - name: service
          in: query
          description: Camden Council run organisation 
          required: true
          type: string
          format: uuid
        # - name: longitude
        #   in: query
        #   description: Longitude component of location.
        #   required: true
        #   type: number
        #   format: double
      tags:
        - Services
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: Product
        default:
          description: Unexpected error
          schema:
            $ref: Error
  /location/{postcode}:
    get:
      summary: /location/{postcode}
      description: |
        The Location postcode endpoint uses the users postcode to pinpoint a location within Camden on the map
      parameters:
        - name: postcode
          in: query
          description: Camden postcode
          required: true
          type: string
          format: uuid
        # - name: start_longitude
        #   in: query
        #   description: Longitude component of start location.
        #   required: true
        #   type: number
        #   format: double
        # - name: end_latitude
        #   in: query
        #   description: Latitude component of end location.
        #   required: true
        #   type: number
        #   format: double
        # - name: end_longitude
        #   in: query
        #   description: Longitude component of end location.
        #   required: true
        #   type: number
        #   format: double
      tags:
        - Location
      responses:
        200:
          description: An array of services 
          schema:
            type: array
            items:
              $ref: PriceEstimate
        default:
          description: Unexpected error
          schema:
            $ref: Error
  /services/{service}/locations/{postcode}:
    get:
      summary: Selected service near specified postcode
      description: The services and location endpoint will bring back a list of specified services in order of distance to the specified postcode  
      parameters:
        - name: service
          in: query
          description: Select a Camden service 
          required: true
          type: string
        - name: postcode
          in: query
          description: Camden postcode
          required: true
          type: string
        # - name: customer_uuid
        #   in: query
        #   type: string
        #   format: uuid
        #   description: Unique customer identifier to be used for experience customization.
        # - name: product_id
        #   in: query
        #   type: string
        #   description: Unique identifier representing a specific product for a given latitude & longitude.
      tags:
        - Services
        - Location
      responses:
        200:
          description: An array of selected service information
          schema:
            type: array
            items:
              $ref: Product
        default:
          description: Unexpected error
          schema:
            $ref: Error
  # /me:
  #   get:
  #     summary: User Profile
  #     description: The User Profile endpoint returns information about the Uber user that has authorized with the application.
  #     tags:
  #       - User
  #     responses:
  #       200:
  #         description: Profile information for a user
  #         schema:
  #           $ref: Profile
  #       default:
  #         description: Unexpected error
  #         schema:
  #           $ref: Error
  # /history:
  #   get:
  #     summary: User Activity
  #     description: The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.
  #     parameters:
  #       - name: offset
  #         in: query
  #         type: integer
  #         format: int32
  #         description: Offset the list of returned results by this amount. Default is zero.
  #       - name: limit
  #         in: query
  #         type: integer
  #         format: int32
  #         description: Number of items to retrieve. Default is 5, maximum is 100.
  #     tags:
  #       - User
  #     responses:
  #       200:
  #         description: History information for the given user
  #         schema:
  #           $ref: Activities
  #       default:
  #         description: Unexpected error
  #         schema:
  #           $ref: Error
definitions:
  Product:
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
      description:
        type: string
        description: Description of product.
      display_name:
        type: string
        description: Display name of product.
      capacity:
        type: string
        description: Capacity of product. For example, 4 people.
      image:
        type: string
        description: Image URL representing the product.
  PriceEstimate:
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
      currency_code:
        type: string
        description: "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
      display_name:
        type: string
        description: Display name of product.
      estimate:
        type: string
        description: Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or "Metered" for TAXI.
      low_estimate:
        type: number
        description: Lower bound of the estimated price.
      high_estimate:
        type: number
        description: Upper bound of the estimated price.
      surge_multiplier:
        type: number
        description: Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.
  Profile:
    properties:
      first_name:
        type: string
        description: First name of the Uber user.
      last_name:
        type: string
        description: Last name of the Uber user.
      email:
        type: string
        description: Email address of the Uber user
      picture:
        type: string
        description: Image URL of the Uber user.
      promo_code:
        type: string
        description: Promo code of the Uber user.
  Activity:
    properties:
      uuid:
        type: string
        description: Unique identifier for the activity
  Activities:
    properties:
      offset:
        type: integer
        format: int32
        description: Position in pagination.
      limit:
        type: integer
        format: int32
        description: Number of items to retrieve (100 max).
      count:
        type: integer
        format: int32
        description: Total number of items available.
      history:
        type: array
        $ref: Activity
  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string